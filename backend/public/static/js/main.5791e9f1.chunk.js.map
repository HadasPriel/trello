{"version":3,"sources":["services/httpService.js","services/userService.js","services/utilService.js","services/boardService.js","services/socketService.js","store/actions/boardActions.js","cmps/HomeHeader.jsx","pages/Home.jsx","cmps/group/EditGroupTitle.jsx","cmps/cardEdit/CardLabelShowMin.jsx","store/actions/userActions.js","cmps/cardEdit/CardEditNav.jsx","cmps/cardEdit/AddDescription.jsx","cmps/cardEdit/EditLabelBar.jsx","cmps/cardEdit/LabelPalette.jsx","cmps/cardEdit/AddChecklistBar.jsx","cmps/cardEdit/AddCoverBar.jsx","cmps/cardEdit/CardLabelShow.jsx","cmps/cardEdit/TodoShow.jsx","cmps/cardEdit/TodoListShow.jsx","cmps/cardEdit/CardChecklistShow.jsx","cmps/cardEdit/AddDeutimeBar.jsx","cmps/cardEdit/CardDuedateShow.jsx","services/cloudinaryService.js","cmps/Uploader.jsx","cmps/cardEdit/AddImgBar.jsx","cmps/cardEdit/CardImgShow.jsx","cmps/cardEdit/AddMembersBar.jsx","cmps/cardEdit/CardMembersShow.jsx","cmps/cardEdit/CardActivitiesShow.jsx","cmps/cardEdit/DeleteCardBar.jsx","pages/CardEdit.jsx","cmps/card/ChecklistSign.jsx","cmps/cardEdit/CardDuedateShowMin.jsx","cmps/card/CardPreview.jsx","cmps/card/CardList.jsx","cmps/group/AddCard.jsx","cmps/group/RemoveList.jsx","cmps/group/EditGroupNav.jsx","cmps/group/GroupPreview.jsx","cmps/group/AddNewGroup.jsx","cmps/group/GroupList.jsx","cmps/boardMenu/EditBoardTitle.jsx","cmps/boardMenu/AboutBoard.jsx","cmps/boardMenu/ChangeBoardBackground.jsx","cmps/boardMenu/ActivityPreview.jsx","cmps/boardMenu/ActivityBoard.jsx","cmps/dashboard/PieBoard.jsx","cmps/dashboard/BarBoard.jsx","cmps/dashboard/LineBoard.jsx","cmps/dashboard/Dashboard.jsx","cmps/board/BoardSideMenu.jsx","cmps/board/BoardFilter.jsx","cmps/AppHeader.jsx","pages/Board.jsx","cmps/board/BoardPreview.jsx","cmps/board/BoardList.jsx","cmps/board/AddBoard.jsx","pages/Boards.jsx","pages/LoginSignup.jsx","App.jsx","serviceWorkerRegistration.js","store/reducers/boardReducer.js","store/reducers/userReducer.js","store/reducers/systemReducer.js","store/reducers/index.js","store/store.js","reportWebVitals.js","index.js"],"names":["BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","window","location","assign","userService","login","logout","signup","getUsers","getById","userId","remove","update","getLoggedinUser","increaseScore","user","_id","_saveLocalUser","by","score","userCred","sessionStorage","clear","setItem","JSON","stringify","parse","getItem","utilService","delay","ms","Promise","resolve","setTimeout","getRandomInt","min","max","Math","ceil","floor","random","makeId","length","txt","possible","i","charAt","boardService","add","query","filterBy","queryParams","URLSearchParams","set","boardId","makeGroup","updateBoard","makeCard","cardTitle","id","title","description","comments","checklists","members","labels","createdAt","dueDate","byMember","style","coverType","makeBoard","filterByCardTitle","makeActivity","board","updatedBoard","addedBoard","groupTitle","cards","card","Date","now","getMiniUser","activity","loggedinUser","username","password","createdBy","boardTitle","bgUrl","map","color","accessibility","miniUser","newBoard","bgurl","groups","activities","unshift","filterRegex","RegExp","group","newGroup","filter","test","socketService","socket","setup","io","on","eventName","cb","off","emit","terminate","createSocketService","loadBoards","dispatch","boards","type","loadBoard","boardToChange","msg","boardToUpdate","HomeHeader","props","className","to","loggedInUser","backgroundImage","imgUrl","_Home","state","isNewBoard","toggleNewBoard","setState","onLoadNewBoard","history","push","this","Button","variant","size","onClick","src","alt","Component","mapDispatchToProps","Home","connect","boardModule","userModule","_EditGroupTitle","handleChange","ev","value","target","field","name","onSubmit","preventDefault","updateGroup","selectedBoard","toggleEditMode","placeholder","onChange","autoComplete","groupTitleToUpdate","groupId","groupToUpdateIdx","findIndex","EditGroupTitle","CardLabelShowMin","label","loadUsers","users","CardEditNav","toggleLabelPalette","toggleChecklistBar","toggleCoverBar","toggleAddDeutime","toggleAddMembers","toggleDeleteCard","toggleAddImg","_AddDescription","onAddDescription","newDescription","cardToSave","updateCard","toggleAddDescription","AddDescription","_EditLabelBar","boardToSave","currLabel","toggleEditLabel","required","autoFocus","EditLabelBar","_LabelPalette","isEditLabelShow","labelToEdit","addLable","find","openEditLabel","alredyOnCard","LabelPalette","_AddChecklistBar","checklist","todos","onAddChecklist","AddChecklistBar","_AddCoverBar","handleStyle","removeCover","AddCoverBar","_CardLabelShow","removeLable","labelId","labelsToSave","CardLabelShow","_TodoShow","todo","isDone","checked","checklistIndex","checklistId","todoIndex","removeTodo","TodoShow","TodoListShow","_CardChecklistShow","progress","removeChecklist","checklistsToSave","handleTaskChange","addTask","checklistToSave","then","todoId","todoToSave","getProgress","done","all","forEach","Checklist","round","prevProps","prevState","width","event","CardChecklistShow","AddDeutimeBar","useState","startDate","setStartDate","selected","onSelect","date","addDeuDate","inline","CardDuedateShow","month","duedate","getMonth","day","substring","urgent","cloudinaryService","uploadImg","file","UPLOAD_URL","formData","FormData","append","fetch","body","json","Uploader","height","isUploading","onUploadImg","files","secure_url","addImg","uploadStyle","objectFit","htmlFor","accept","AddImgBar","CardImgShow","img","_AddMembersBar","member","fullname","onAddMembers","currUser","newMembers","list","alreadyMember","AddMembersBar","_CardMembersShow","userImgStyle","CardMembersShow","_CardActivitiesShow","CardActivitiesShow","_DeleteCardBar","deleteCard","onRemoveCard","cardId","err","DeleteCardBar","_CardEdit","isDescriptionShowing","isLabelPaletteShowing","isAddChecklistShowing","isCoverShowing","isAddDeutimeShowing","isAddImgShowing","isAddMembersShowing","isDeleteCardShowing","isActivitiesShowing","loadCard","currCard","groupToSave","cardsToSave","groupsToSave","createActivity","miniCard","stopProg","stopPropagation","prevprops","match","toggleCardEdit","isLabels","isChecklists","isDuedate","isMember","coverShow","bgColor","isImg","Fragment","CardEdit","ChecklistSign","CardDuedateShowMin","_CardPreview","isCardEtidShow","removeCard","cardBgc","cardCover","draggableId","String","index","direction","provided","draggableProps","dragHandleProps","ref","innerRef","updatedCardList","CardPreview","CardList","droppableId","droppableProps","_AddCard","addCard","toggleAddCardMode","onCancelAdd","newCard","AddCard","RemoveList","toggleDeleteBar","onRemoveGroup","_EditGroupNav","isOnAddCardMode","isDeleteBarShow","EditGroupNav","_GroupPreview","isEditMode","isEditGroupNavShow","groupHeight","updatedGroups","toggleEditGroupNav","document","clientHeight","maxHeight","GroupPreview","_AddNewGroup","addGroup","toggleAddGroupMode","groupToAdd","AddNewGroup","_GroupList","isOnAddGroupMode","onDragEnd","GroupList","_EditBoardTitle","EditBoardTitle","_AboutBoard","toggleAboutBoard","AboutBoard","_ChangeBoardBackground","onChooseBackground","background","toggleChangeBackground","ChangeBoardBackground","ActivityPreview","ActivityBoard","PieBoard","membersTasks","Object","keys","datasets","values","backgroundColor","hoverBackgroundColor","options","display","text","BarBoard","complited","uncomplited","myData","legend","LineBoard","membersActivities","_Dashboard","toggleDashboard","Dashboard","_BoardSideMenu","isAboutBoardShown","isChangeBackgroundShown","isBoardAnalysisShown","isDeleteBoardShown","isDashboardShown","toggleBoardAnalysis","toggleDeleteBoard","open","classname","toggleSideMenu","BoardSideMenu","_BoardFilter","filterByCardText","boardToFilter","BoardFilter","_AppHeader","userImgUrl","AppHeader","_Board","isBoardMenuShown","result","destination","source","onDragGroups","onDragCards","onChangeBoard","updateBoardAfterSocket","startIndex","endIndex","groupToMove","splice","groupToMoveFromIdx","groupToMoveToIdx","cardToMove","params","boardStyle","backgroundPosition","backgroundSize","backgroundRepeat","changedBoard","Board","BoardPreview","BoardList","boardsForDisplay","slice","_AddBoard","createBoard","backgroundImageUrl","AddBoard","_Boards","Boards","_LoginSignup","loginCred","signupCred","loginHandleChange","signupHandleChange","doLogin","userCreds","doSignup","signupCreds","removeUser","signupSection","loginSection","LoginSignup","App","path","component","Boolean","hostname","initialState","localLoggedinUser","isLoading","rootReducer","combineReducers","systemModule","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5791e9f1.chunk.js","sourcesContent":["import Axios from 'axios'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/#/login')\r\n        }\r\n        throw err\r\n    }\r\n}","// import { storageService } from './asyncStorageService'\r\nimport { httpService } from './httpService'\r\nconst SCORE_FOR_REVIEW = 10\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update,\r\n    getLoggedinUser,\r\n    increaseScore\r\n}\r\n\r\nwindow.userService = userService\r\n// Note: due to async, must run one by one...\r\n// userService.signup({fullname: 'Puki Norma', username: 'user1', password:'123',score: 100, isAdmin: false})\r\n// userService.signup({fullname: 'Master Adminov', username: 'admin', password:'123', score: 100, isAdmin: true})\r\n\r\nfunction getUsers() {\r\n    // return storageService.query('user')\r\n    return httpService.get(`user`)\r\n}\r\n\r\nfunction getById(userId) {\r\n    // return storageService.get('user', userId)\r\n    return httpService.get(`user/${userId}`)\r\n}\r\nfunction remove(userId) {\r\n    // return storageService.remove('user', userId)\r\n    return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n    // return storageService.put('user', user)\r\n    user = await httpService.put(`user/${user._id}`, user)\r\n    // Handle case in which admin updates other user's details\r\n    if (getLoggedinUser()._id === user._id) _saveLocalUser(user)\r\n}\r\n\r\nasync function increaseScore(by = SCORE_FOR_REVIEW) {\r\n    const user = getLoggedinUser()\r\n    user.score = user.score + by || by\r\n    await update(user)\r\n    return user.score\r\n}\r\n\r\nasync function login(userCred) {\r\n    // const users = await storageService.query('user')\r\n    // const user = users.find(user => user.username === userCred.username)\r\n    // return _handleLogin(user)\r\n\r\n    const user = await httpService.post('auth/login', userCred)\r\n    if (user) return _saveLocalUser(user)\r\n}\r\nasync function signup(userCred) {\r\n    // const user = await storageService.post('user', userCred)\r\n    const user = await httpService.post('auth/signup', userCred)\r\n    return _saveLocalUser(user)\r\n}\r\nasync function logout() {\r\n    sessionStorage.clear()\r\n    return await httpService.post('auth/logout')\r\n}\r\nfunction _saveLocalUser(user) {\r\n    sessionStorage.setItem('loggedinUser', JSON.stringify(user))\r\n    return user\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    return JSON.parse(sessionStorage.getItem('loggedinUser'))\r\n}\r\n\r\n","\r\nexport const utilService = {\r\n    delay,\r\n    getRandomInt,\r\n    makeId\r\n}\r\n\r\nfunction delay(ms = 1500) {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, ms)\r\n    })\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\n\r\nfunction makeId(length = 5) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return txt;\r\n}","\r\n\r\nimport { httpService } from './httpService'\r\n// import { storageService } from './asyncStorageService'\r\nimport { userService } from './userService'\r\nimport { utilService } from './utilService'\r\n\r\nexport const boardService = {\r\n  add,\r\n  query,\r\n  remove,\r\n  getById,\r\n  makeGroup,\r\n  updateBoard,\r\n  makeCard,\r\n  makeBoard,\r\n  filterByCardTitle,\r\n  makeActivity\r\n}\r\n\r\n\r\n// More ways to send query params:\r\n// return axios.get('api/toy/?id=1223&balance=13')\r\n// return axios.get('api/toy/?', {params: {id: 1223, balanse:13}})\r\n\r\nfunction query(filterBy) {\r\n  let queryParams = new URLSearchParams()\r\n  queryParams.set('userId', filterBy.userId)\r\n  return httpService.get(`board?${queryParams}`)\r\n  // return storageService.query('board')\r\n}\r\n\r\nfunction getById(boardId) {\r\n  return httpService.get(`board/${boardId}`)\r\n}\r\n\r\nfunction remove(boardId) {\r\n  return httpService.delete(`board/${boardId}`)\r\n  // return storageService.delete('board', boardId)\r\n\r\n}\r\n\r\nasync function updateBoard(board) {\r\n  const updatedBoard = await httpService.put(`board/${board._id}`, board)\r\n  return updatedBoard\r\n}\r\nasync function add(board) {\r\n\r\n  const addedBoard = await httpService.post(`board`, board)\r\n\r\n  // board.byUser = userService.getLoggedinUser()\r\n  // board.aboutUser = await userService.getById(board.aboutUserId)\r\n  // const addedBoard = storageService.post('board', board)\r\n\r\n  return addedBoard\r\n}\r\n\r\n\r\nfunction makeGroup(groupTitle) {\r\n  let group = {\r\n    id: 'g' + utilService.makeId(),\r\n    title: groupTitle,\r\n    cards: [{\r\n      id: 'c' + utilService.makeId(),\r\n      title: 'default-empty',\r\n      description: '',\r\n      comments: [],\r\n      checklists: [],\r\n      members: [],\r\n      labels: [],\r\n      createdAt: '',\r\n      dueDate: '',\r\n      byMember: {},\r\n      style: { coverType: 'top' }\r\n    }]\r\n\r\n  }\r\n\r\n  return group\r\n\r\n}\r\n\r\n\r\nfunction makeCard(cardTitle) {\r\n  let card = {\r\n    id: 'c' + utilService.makeId(),\r\n    title: cardTitle,\r\n    description: '',\r\n    comments: [],\r\n    checklists: [],\r\n    members: [],\r\n    labels: [],\r\n    createdAt: '',\r\n    dueDate: '',\r\n    byMember: {},\r\n    style: { coverType: 'top' }\r\n\r\n  }\r\n  return card\r\n\r\n}\r\n\r\nasync function makeActivity(txt, card = {}) {\r\n  let activity = {\r\n    id: 'a' + utilService.makeId(),\r\n    createdAt: Date.now(),\r\n    txt: txt,\r\n    byMember: await getMiniUser(),\r\n    card: card\r\n  }\r\n  return activity\r\n}\r\n\r\nasync function getMiniUser() {\r\n  let loggedinUser = userService.getLoggedinUser()\r\n  let createdBy = (loggedinUser) ? loggedinUser : await userService.login({ username: 'Guest', password: '123' })\r\n  return createdBy\r\n}\r\n\r\nasync function makeBoard(boardTitle, bgUrl) {\r\n\r\n  const colors = ['#61BD4F', '#F2D600', '#FF9F1A', '#EB5A46', '#C377E0', '#0079BF']\r\n  const labels = colors.map(color => { return { id: color, title: '', accessibility: '' } })\r\n\r\n  let miniUser = await getMiniUser()\r\n  const newBoard = {\r\n    title: boardTitle,\r\n    createdAt: Date.now(),\r\n    createdBy: miniUser,\r\n    style: {\r\n      bgurl: bgUrl\r\n    },\r\n    members: [miniUser],\r\n    groups: [makeGroup('New List')],\r\n    activities: [],\r\n\r\n    labels\r\n  }\r\n\r\n  const activity = await makeActivity('Created Board')\r\n\r\n  newBoard.activities.unshift(activity)\r\n\r\n  const addedBoard = await httpService.post(`board`, newBoard);\r\n  return addedBoard\r\n\r\n}\r\n\r\n\r\nasync function filterByCardTitle(board, filterBy) {\r\n  console.log('Board got to board service', board)\r\n  console.log('filter got to board service', filterBy)\r\n  if (filterBy.title) {\r\n    const filterRegex = new RegExp(filterBy.title, 'i')\r\n    board.groups = board.groups.map(group => {\r\n      const newGroup = { ...group }\r\n      newGroup.cards = newGroup.cards.filter(card => filterRegex.test(card.title))\r\n      return newGroup\r\n    })\r\n  }\r\n\r\n  return board;\r\n\r\n}","import io from 'socket.io-client'\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production') ? '' : '//localhost:3030'\r\nexport const socketService = createSocketService()\r\n// export const socketService = createDummySocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket\r\n  \r\n  const socketService = {\r\n    setup() {\r\n      socket = io(baseUrl, {\r\n        withCredentials: true,\r\n      });\r\n    },\r\n    on(eventName, cb) {\r\n      socket.on(eventName, cb)\r\n    },\r\n    off(eventName, cb) {\r\n      socket.off(eventName, cb)\r\n    },\r\n    emit(eventName, data) {\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n    }\r\n  }\r\n  return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\nfunction createDummySocketService() {\r\n  var listenersMap = {}\r\n  const socketService = {\r\n    setup() {\r\n      listenersMap = {}\r\n    },\r\n    terminate() {\r\n      this.setup()\r\n    },\r\n    on(eventName, cb) {\r\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n    },\r\n    off(eventName, cb) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n    },\r\n    emit(eventName, data) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName].forEach(listener => {\r\n        listener(data)\r\n      })\r\n    },\r\n    debugMsg() {\r\n      this.emit('chat addMsg', { from: 'Someone', txt: 'Aha it worked!' })\r\n    },\r\n  }\r\n  return socketService\r\n}\r\n\r\n\r\n// Basic Tests\r\n// function cb(x) {console.log(x)}\r\n// socketService.on('baba', cb)\r\n// socketService.emit('baba', 'DATA')\r\n// socketService.off('baba', cb)\r\n","import { boardService } from '../../services/boardService'\r\nimport { socketService } from '../../services/socketService'\r\n\r\nexport function loadBoards(filterBy = {}) {\r\n  return async dispatch => {\r\n    try {\r\n      const boards = await boardService.query(filterBy)\r\n      dispatch({ type: 'SET_BOARDS', boards })\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in loadBoards', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function loadBoard(id) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = await boardService.getById(id)\r\n      // console.log('What got form server', board)\r\n      dispatch({ type: 'SET_BOARD', board })\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in loadBoard', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function createBoard(boardTitle, backgroundImageUrl) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = await boardService.makeBoard(boardTitle, backgroundImageUrl)\r\n\r\n      dispatch({ type: 'SET_BOARD', board })\r\n      return board\r\n    } catch (err) {\r\n      console.log('BoardActions: err in loadBoard', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function addGroup(title, boardToChange) {\r\n  return async dispatch => {\r\n    try {\r\n\r\n      let groupToAdd = boardService.makeGroup(title)\r\n      let activity = await boardService.makeActivity(`created new list ${groupToAdd.title}`)\r\n\r\n      let boardToUpdate = JSON.parse(JSON.stringify(boardToChange))\r\n      boardToUpdate.groups.push(groupToAdd)\r\n\r\n      boardToUpdate.activities.unshift(activity)\r\n      const board = await boardService.updateBoard(boardToUpdate)\r\n\r\n      socketService.emit('update board', board)\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in addGroup', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function updateGroup(groupTitleToUpdate, groupId, boardToChange) {\r\n  return async dispatch => {\r\n    try {\r\n\r\n      let boardToUpdate = JSON.parse(JSON.stringify(boardToChange))\r\n      const groupToUpdateIdx = boardToUpdate.groups.findIndex(group => group.id === groupId)\r\n      boardToUpdate.groups[groupToUpdateIdx].title = groupTitleToUpdate\r\n\r\n      const board = await boardService.updateBoard(boardToUpdate)\r\n\r\n      dispatch({ type: 'SET_BOARD', board })\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in updateGroup', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function addCard(title, groupId, boardToChange) {\r\n  return async dispatch => {\r\n    try {\r\n\r\n\r\n      let newCard = boardService.makeCard(title)\r\n      let activity = await boardService.makeActivity(`created new card ${newCard.title}`)\r\n      let boardToUpdate = JSON.parse(JSON.stringify(boardToChange))\r\n      const groupToUpdateIdx = boardToUpdate.groups.findIndex(group => group.id === groupId)\r\n      boardToUpdate.groups[groupToUpdateIdx].cards.push(newCard)\r\n      boardToUpdate.activities.unshift(activity)\r\n\r\n      const board = await boardService.updateBoard(boardToUpdate)\r\n\r\n      socketService.emit('update board', board)\r\n    } catch (err) {\r\n      console.log('BoardActions: err in addCard', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function removeCard(cardId, groupId, boardToChange) {\r\n  return async dispatch => {\r\n    try {\r\n\r\n      let boardToUpdate = JSON.parse(JSON.stringify(boardToChange))\r\n\r\n      const groupToUpdateIdx = boardToUpdate.groups.findIndex(group => group.id === groupId)\r\n\r\n      const updatedCardList = boardToUpdate.groups[groupToUpdateIdx].cards.filter(card => card.id !== cardId)\r\n\r\n      boardToUpdate.groups[groupToUpdateIdx].cards = updatedCardList\r\n\r\n      const board = await boardService.updateBoard(boardToUpdate)\r\n\r\n      dispatch({ type: 'SET_BOARD', board })\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in removeGroup', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function updateBoard(boardToChange, msg = '', card = {}) {\r\n  return async dispatch => {\r\n    try {\r\n\r\n      let boardToUpdate = JSON.parse(JSON.stringify(boardToChange))\r\n      if (msg) {\r\n        let activity = await boardService.makeActivity(msg, card)\r\n        boardToUpdate.activities.unshift(activity)\r\n      }\r\n      const board = await boardService.updateBoard(boardToUpdate)\r\n      socketService.emit('update board', board)\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in updateGroupOrder', err)\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport function filterByCardText(boardId, filterBy) {\r\n  return async dispatch => {\r\n    try {\r\n      const boardToFilter = await boardService.getById(boardId)\r\n\r\n      const board = await boardService.filterByCardTitle(boardToFilter, filterBy)\r\n\r\n      dispatch({ type: 'SET_BOARD', board })\r\n      dispatch({ type: 'SET_FILTER', filterBy })\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in updateGroupOrder', err)\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\nexport function updateBoardAfterSocket(changedBoard) {\r\n  return async dispatch => {\r\n    try {\r\n\r\n      let board = JSON.parse(JSON.stringify(changedBoard))\r\n\r\n      dispatch({ type: 'SET_BOARD', board })\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in updateBoardAfterSocket', err)\r\n    }\r\n  }\r\n\r\n}\r\n\r\n// export function changeBoardBackground(bgUrltoUpdate, boardToChange) {\r\n//   return async dispatch => {\r\n//     try {\r\n//       let boardToUpdate = JSON.parse(JSON.stringify(boardToChange))\r\n\r\n//       boardToUpdate.style.bgurl = bgUrltoUpdate\r\n\r\n//       let activity = await boardService.makeActivity(`changed board style`)\r\n\r\n//       boardToUpdate.activities.unshift(activity)\r\n\r\n//       const board = await boardService.updateBoard(boardToUpdate)\r\n\r\n//       socketService.emit('update board', board)\r\n//     } catch (err) {\r\n//       console.log('BoardActions: err in addCard', err)\r\n//     }\r\n//   }\r\n// }\r\n\r\n\r\n// export function removeGroup(groupId, boardToChange) {\r\n//   return async dispatch => {\r\n//     try {\r\n\r\n//       let boardToUpdate = JSON.parse(JSON.stringify(boardToChange))\r\n//       const updatedGroups = boardToUpdate.groups.filter(group => group.id !== groupId)\r\n//       boardToUpdate.groups = updatedGroups\r\n//       const board = await boardService.updateBoard(boardToUpdate)\r\n\r\n//       socketService.emit('update board', board)\r\n\r\n\r\n//     } catch (err) {\r\n//       console.log('BoardActions: err in removeGroup', err)\r\n//     }\r\n//   }\r\n// }","import { Link } from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nexport function HomeHeader(props) {\r\n\r\n\r\n    return (\r\n        <header className=\"app-header flex space-between align-center\">\r\n            <nav>\r\n                <Link to=\"/\" className=\"header-home\"></Link>\r\n                <Link to=\"/board\" className=\"header-board\"> Boards </Link>\r\n            </nav>\r\n\r\n            <nav className=\"navbar-links\">\r\n                {!props.loggedInUser && <Link to=\"/login\" className=\"header-user\"> Login</Link>}\r\n                {props.loggedInUser && <Link to=\"/login\" className=\"user-img\" style={{ backgroundImage: `url(${props.loggedInUser.imgUrl})` }}> </Link>}\r\n\r\n            </nav>\r\n        </header>\r\n\r\n    )\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n// import { BoardList } from '../cmps/board/BoardList'\r\n// import { AddBoard } from '../cmps/board/AddBoard'\r\nimport { loadBoards } from '../store/actions/boardActions.js'\r\nimport { HomeHeader } from '../cmps/HomeHeader'\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom'\r\n// import Icon from '@material-ui/core/Icon';\r\n// import Uploader from '../cmps/Uploader';\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _Home extends Component {\r\n  state = {\r\n    isNewBoard: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.loadBoards()\r\n  }\r\n  // onUploadImage = (url) =>{\r\n  //   console.log('URL:', url)\r\n  //   //   const toy = {\r\n  //   //     imgUrl: url\r\n  //   //   }\r\n  //   //   this.props.updateToy(toy)\r\n  // }\r\n\r\n\r\n\r\n  toggleNewBoard = () => {\r\n    console.log('I am in new board')\r\n    this.setState({ isNewBoard: !this.state.isNewBoard })\r\n  }\r\n\r\n  onLoadNewBoard = (boardId) => {\r\n    this.toggleNewBoard()\r\n    this.props.history.push(`/board/${boardId}`)\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    const { loggedInUser } = this.props\r\n    return (\r\n      <div className=\"home-wraper\">\r\n        <HomeHeader loggedInUser={loggedInUser} />\r\n\r\n        <div className=\"home-img-container\">\r\n          <div className=\"get-started-container\">\r\n            <h1>TASX</h1>\r\n            <h3>Manage your teamwork with the ease of your fingers</h3>\r\n            {/* <Link to=\"/board\" ><button className=\"header-board\"> Boards </button></Link> */}\r\n\r\n            <div className=\"get-started-btn\">\r\n              <Link to=\"/board/600c37d2a8c0ad4b8ab661f6\" >\r\n                <Button variant=\"contained\" size=\"large\" color=\"primary\" className=\"get-started\" onClick={this.toggleNewBoard}>\r\n                  Get Started\r\n            </Button>\r\n              </Link>\r\n            </div>\r\n            {/* {this.state.isNewBoard && <AddBoard toggleNewBoard={this.toggleNewBoard} onLoadNewBoard={this.onLoadNewBoard} />} */}\r\n          </div>\r\n        </div >\r\n\r\n\r\n        <div className=\"welcome-container\">\r\n          <Link to=\"/board\" >\r\n            <article className=\"welcome1\">\r\n              <div className=\"left-side\">\r\n                <img className=\"img1\" src=\"https://res.cloudinary.com/ddgevj2yp/image/upload/v1611390965/faces1_tvpwft.png\" alt=\"\" />\r\n              </div>\r\n              <div className=\"right-side\">\r\n                <h2>Hit your deadlines</h2>\r\n                <h3>Follow your your team’s progress and keep work moving across teams  — all from one place.</h3>\r\n              </div>\r\n\r\n\r\n\r\n            </article>\r\n          </Link>\r\n\r\n          <Link to=\"/board\" >\r\n\r\n            <article className=\"welcome2\">\r\n              <div className=\"right-side\">\r\n                <h2>Collaborate and build</h2>\r\n                <h3>Share ideas and more so teammates can tap into the same pool of knowledge whenever they need. </h3>\r\n              </div>\r\n\r\n              <div className=\"left-side\">\r\n                <img className=\"img2\" src=\"https://res.cloudinary.com/ddgevj2yp/image/upload/v1611391150/faces2_t7s1ur.png\" alt=\"\" />\r\n              </div>\r\n\r\n            </article>\r\n          </Link>\r\n\r\n          <Link to=\"/board\" >\r\n            <article className=\"welcome3\">\r\n              <div className=\"right-side\">\r\n                <img className=\"img3\" src=\"https://res.cloudinary.com/ddgevj2yp/image/upload/v1611391298/faces3_uzu1d8.png\" alt=\"\" />\r\n              </div>\r\n              <div className=\"left-side\">\r\n                <h2>Keep everyone looped in</h2>\r\n                <h3>Easily assign and prioritize tasks, and see who's doing what anywhere, anytime.</h3>\r\n              </div>\r\n            </article>\r\n          </Link>\r\n        </div>\r\n        <div className=\"boards-container\">\r\n          {/* <BoardList boards={this.props.boards} />\r\n          <Uploader /> */}\r\n        </div>\r\n        <div className=\"footer\">\r\n          <h4>&copy; Cofferights 2021</h4>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    boards: state.boardModule.boards,\r\n    loggedInUser: state.userModule.loggedInUser\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  loadBoards,\r\n  // loadBoard,\r\n  //createBoard\r\n}\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(_Home)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { updateGroup } from '../../store/actions/boardActions.js'\r\n\r\nexport class _EditGroupTitle extends Component {\r\n\r\n    state = {\r\n        title: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { title } = this.props.group\r\n        this.setState({ title })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const value = ev.target.value\r\n        const field = ev.target.name\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n    onSubmit = async (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.title) return\r\n        await this.props.updateGroup(this.state.title, this.props.group.id, this.props.selectedBoard)\r\n        this.props.toggleEditMode()\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"edit-group-title\">\r\n                <form onSubmit={this.onSubmit} >\r\n                    <input className=\"new-title-input\" placeholder=\"Group Title\" type=\"text\" onChange={this.handleChange} value={this.state.title} name=\"title\" autoComplete=\"off\"/>\r\n                    <button className=\"save-btn\">Save</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    updateGroup,\r\n\r\n};\r\n\r\nexport const EditGroupTitle = connect(mapStateToProps, mapDispatchToProps)(_EditGroupTitle);","import React from 'react'\r\n\r\n\r\nexport function CardLabelShowMin(props) {\r\n\r\n    return (\r\n        <ul className=\"card-label-show\">\r\n            {props.labels.map(label => {\r\n                return (\r\n                    <li\r\n                        key={label.id} className={`label ${label.id}`} >\r\n                    </li>\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n\r\n}\r\n","import { userService } from '../../services/userService'\r\n\r\n// THUNK action creators\r\n// Work asynchronously with the service and dispatch actions to the reducers \r\n\r\nexport function loadUsers() {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({ type: 'LOADING_START' })\r\n      const users = await userService.getUsers()\r\n      dispatch({ type: 'SET_USERS', users })\r\n    } catch (err) {\r\n      console.log('UserActions: err in loadUsers', err)\r\n    } finally {\r\n      dispatch({ type: 'LOADING_DONE' })\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeUser(userId) {\r\n  return async dispatch => {\r\n    try {\r\n      await userService.remove(userId)\r\n      dispatch({ type: 'REMOVE_USER', userId })\r\n    } catch (err) {\r\n      console.log('UserActions: err in removeUser', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function login(userCreds) {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await userService.login(userCreds)\r\n      dispatch({ type: 'SET_USER', user })\r\n    } catch (err) {\r\n      console.log('UserActions: err in login', err)\r\n    }\r\n  }\r\n}\r\nexport function signup(userCreds) {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await userService.signup(userCreds)\r\n      dispatch({ type: 'SET_USER', user })\r\n    } catch (err) {\r\n      console.log('UserActions: err in signup', err)\r\n    }\r\n  }\r\n}\r\nexport function logout() {\r\n  return async dispatch => {\r\n    try {\r\n      await userService.logout()\r\n      dispatch({ type: 'SET_USER', user: null })\r\n    } catch (err) {\r\n      console.log('UserActions: err in logout', err)\r\n    }\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport function CardEditNav(props) {\r\n\r\n\r\n    return (\r\n        <nav className=\"card-edit-nav flex column\">\r\n            <h3>Add to card</h3>\r\n            <button className=\"label-fa\" onClick={props.toggleLabelPalette}> Labels</button>\r\n            <button className=\"checklist-fa\" onClick={props.toggleChecklistBar}> Checklist</button>\r\n            <button className=\"cover-fa\" onClick={props.toggleCoverBar}> Cover</button>\r\n            <button className=\"duetime-fa\" onClick={props.toggleAddDeutime}> Due Date</button>\r\n            <button className=\"duetime-fa\" onClick={props.toggleAddMembers}> Members</button>\r\n            {/* <button onClick={props.toggleAddImg}> Image</button> */}\r\n            <button className=\"delete-fa\" onClick={props.toggleDeleteCard}> Delete</button>\r\n            <button className=\"img-fa\" onClick={props.toggleAddImg}> Image</button>\r\n            {/* <button className=\"delete-fa\"> Delete</button> */}\r\n\r\n        </nav>\r\n    )\r\n\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _AddDescription extends Component {\r\n    state = {\r\n        description: { txt: '' }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const description = (this.props.card.description) ? this.props.card.description : ''\r\n        this.setState({ description: { txt: description } })\r\n    }\r\n\r\n\r\n    handleChange = (ev) => {\r\n        const description = { ...this.state.description }\r\n        description[ev.target.name] = ev.target.value\r\n\r\n        this.setState({ description })\r\n    }\r\n\r\n    onAddDescription = async (ev) => {\r\n        ev.preventDefault()\r\n        const newDescription = { ...this.state.description }\r\n        const cardToSave = { ...this.props.card }\r\n        cardToSave.description = newDescription.txt\r\n        try {\r\n            await this.props.updateCard(cardToSave)\r\n            this.props.toggleAddDescription()\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n        // this.setState({ description: { txt: '' } })\r\n        // \r\n    }\r\n\r\n\r\n    render() {\r\n        const { description } = this.state\r\n        return (\r\n            <form className=\"add-description show\" onSubmit={this.onAddDescription}>\r\n                <textarea name=\"txt\" value={description.txt}\r\n                    placeholder=\"add a more detailed description...\" onChange={this.handleChange} ></textarea>\r\n                <button className=\"add-btn\">Add</button>\r\n            </form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const AddDescription = connect(mapStateToProps, mapDispatchToProps)(_AddDescription)\r\n","\r\n\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _EditLabelBar extends Component {\r\n    state = {\r\n        label: { title: '' }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const label = { ...this.props.label }\r\n        console.log(label);\r\n        this.setState({ label })\r\n    }\r\n\r\n    handleChange = async (ev) => {\r\n        const label = { ...this.state.label }\r\n        label[ev.target.name] = ev.target.value\r\n\r\n        await this.setState({ label })\r\n\r\n        const boardToSave = { ...this.props.board }\r\n        boardToSave.labels = boardToSave.labels.map(currLabel => {\r\n            if (currLabel.id !== label.id) return currLabel\r\n            else return label\r\n        })\r\n        console.log(boardToSave);\r\n        try {\r\n            await this.props.updateBoard(boardToSave)\r\n            // console.log(this.props.board)\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <section className=\"label-palette edit-bar\">\r\n                <header className=\"seconde\">\r\n                    <h3>Edit Label</h3>\r\n                    <button onClick={this.props.toggleEditLabel}>x</button>\r\n                </header>\r\n                <main>\r\n                    <label>Title\r\n                    <input type=\"text\" name=\"title\" value={this.state.label.title} placeholder=\"Enter Title\"\r\n                            onChange={this.handleChange} autoComplete=\"off\" required autoFocus ></input>\r\n                    </label>\r\n                </main>\r\n            </section>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const EditLabelBar = connect(mapStateToProps, mapDispatchToProps)(_EditLabelBar)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { EditLabelBar } from './EditLabelBar'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _LabelPalette extends Component {\r\n    state = {\r\n        isEditLabelShow: false,\r\n        labelToEdit: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.board);\r\n    }\r\n\r\n\r\n    addLable = (label) => {\r\n        console.log(label);\r\n        const cardToSave = { ...this.props.card }\r\n        if (!cardToSave.labels) cardToSave.labels = [label]\r\n        else {\r\n            const alredyOnCard = cardToSave.labels.find(currLabel => currLabel.id === label.id)\r\n            if (alredyOnCard) cardToSave.labels = cardToSave.labels.filter(currLabel => currLabel.id !== label.id)\r\n            else cardToSave.labels.push(label)\r\n        }\r\n        console.log('cardToSave', cardToSave);\r\n        this.props.updateCard(cardToSave, 'added label')\r\n    }\r\n\r\n    toggleEditLabel = () => {\r\n        this.setState({ isEditLabelShow: !this.state.isEditLabelShow })\r\n    }\r\n\r\n    openEditLabel = async (label) => {\r\n        await this.setState({ labelToEdit: label })\r\n        this.toggleEditLabel()\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <section className=\"label-palette edit-bar\">\r\n                <header className=\"seconde\">\r\n                    <h3>Labels</h3>\r\n                    <button onClick={this.props.toggleLabelPalette}>x</button>\r\n                </header>\r\n                <main>\r\n                    <ul>\r\n                        {this.props.board.labels.map(label => {\r\n                            const alredyOnCard = (this.props.card.labels?.find(currLabel => currLabel.id === label.id)) ? 'alredyOnCard' : ''\r\n                            return (\r\n                                <li key={label.id} >\r\n                                    <div className={`${label.id}`} onClick={() => { this.addLable(label) }}>{label.title} <span className={`${alredyOnCard}`}></span></div>\r\n                                    <button className=\"open-edit-label\" onClick={() => { this.openEditLabel(label) }}></button>\r\n                                </li>)\r\n                        })}\r\n\r\n                        {this.state.isEditLabelShow && <EditLabelBar toggleEditLabel={this.toggleEditLabel} label={this.state.labelToEdit} board={this.props.board} updateBoard={this.props.updateBoard} />}\r\n                    </ul>\r\n                </main>\r\n            </section>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const LabelPalette = connect(mapStateToProps, mapDispatchToProps)(_LabelPalette)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { utilService } from '../../services/utilService.js'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _AddChecklistBar extends Component {\r\n    state = {\r\n        checklist: { title: '', todos: [] }\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const checklist = { ...this.state.checklist }\r\n        checklist[ev.target.name] = ev.target.value\r\n\r\n        this.setState({ checklist })\r\n    }\r\n\r\n    onAddChecklist = (ev) => {\r\n        ev.preventDefault()\r\n        const checklist = { id: utilService.makeId(), ...this.state.checklist }\r\n        const cardToSave = { ...this.props.card }\r\n        cardToSave.checklists = (cardToSave.checklists) ? [...cardToSave.checklists, checklist] : [checklist]\r\n        // console.log('cardToSave', cardToSave);\r\n        this.props.updateCard(cardToSave, 'added checklist')\r\n        this.setState({ checklist: { title: '', todos: [] } })\r\n        this.props.toggleChecklistBar()\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <form className=\"edit-bar\" onSubmit={this.onAddChecklist}>\r\n                <header className=\"seconde\">\r\n                    <h3>Add Checklist</h3>\r\n                    <button onClick={this.props.toggleChecklistBar}>x</button>\r\n\r\n                </header>\r\n                <main>\r\n                    <label>Title\r\n                    <input type=\"text\" name=\"title\" value={this.state.checklist.title} placeholder=\"Enter Title\"\r\n                            onChange={this.handleChange} autoComplete=\"off\" required autoFocus ></input>\r\n                    </label>\r\n                    <button className=\"add-btn\">Add</button>\r\n                </main>\r\n            </form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const AddChecklistBar = connect(mapStateToProps, mapDispatchToProps)(_AddChecklistBar)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _AddCoverBar extends Component {\r\n    state = {\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n\r\n    handleStyle = async (ev) => {\r\n        const cardToSave = { ...this.props.card }\r\n        cardToSave.style = (cardToSave.style) ? { ...cardToSave.style, [ev.target.name]: ev.target.value } : { [ev.target.name]: ev.target.value }\r\n        await this.props.updateCard(cardToSave,)\r\n    }\r\n\r\n    removeCover = async (ev) => {\r\n        ev.preventDefault()\r\n        const cardToSave = { ...this.props.card }\r\n        cardToSave.style = { coverType: 'top' }\r\n        await this.props.updateCard(cardToSave)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <form className=\"add-cover-bar edit-bar\">\r\n                <header className=\"seconde\">\r\n                    <h3>cover</h3>\r\n                    <button onClick={this.props.toggleCoverBar}>x</button>\r\n                </header>\r\n                <button onClick={this.removeCover} className=\"edit-btn remove\">Remove Cover </button>\r\n                <h5>size</h5>\r\n                <main>\r\n                    <label className=\"inline-block\">\r\n                        <div className=\"full demo window\">\r\n                            <div className=\"demo header\"></div>\r\n                            <div className=\"demo content\">\r\n                                <div className=\"demo p1\"></div>\r\n                                <div className=\"demo p2\"></div>\r\n                            </div>\r\n                        </div>\r\n                        <input type=\"radio\" name=\"coverType\" value=\"full\" onClick={this.handleStyle} ></input>\r\n                    </label>\r\n                    <label className=\"inline-block\" >\r\n                        <div className=\"top demo window\">\r\n                            <div className=\"demo header\"></div>\r\n                            <div className=\"demo content\">\r\n                                <div className=\"demo p1\"></div>\r\n                                <div className=\"demo p2\"></div>\r\n                            </div>\r\n                        </div>\r\n                        <input type=\"radio\" name=\"coverType\" value=\"top\" onClick={this.handleStyle}></input>\r\n                    </label>\r\n                </main>\r\n                <h5>colors</h5>\r\n                <main>\r\n                    <nav className=\"colors\">\r\n                        <label className=\"color #7bc86c\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#7bc86c\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #f5dd29\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#f5dd29\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #ffaf3f\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#ffaf3f\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #ef7564\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#ef7564\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #cd8de5\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#cd8de5\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #5ba4cf\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#5ba4cf\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #29cce5\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#29cce5\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #6deca9\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#6deca9\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #ff8ed4\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#ff8ed4\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #172b4d\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#172b4d\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                    </nav>\r\n                </main>\r\n            </form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const AddCoverBar = connect(mapStateToProps, mapDispatchToProps)(_AddCoverBar)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _CardLabelShow extends Component {\r\n\r\n    removeLable = (labelId) => {\r\n        const cardToSave = { ...this.props.card }\r\n        const labelsToSave = cardToSave.labels.filter(label => label.id !== labelId)\r\n        cardToSave.labels = labelsToSave\r\n        this.props.updateCard(cardToSave)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul className=\"card-label-show\">\r\n                {this.props.labels.map(label => {\r\n                    return (\r\n                        <li key={label.id} className={`label-edit ${label.id} flex align-center justify-center `} >\r\n                            <p className=\"label-title\">{label.title}</p>\r\n                            {/* <button className=\"hover-nav\" onClick={() => { this.removeLable(label.id) }}>X</button> */}\r\n                        </li>\r\n\r\n                    )\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const CardLabelShow = connect(mapStateToProps, mapDispatchToProps)(_CardLabelShow)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _TodoShow extends Component {\r\n    state = {\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ todo: this.props.todo })\r\n    }\r\n\r\n\r\n    handleChange = async (ev) => {\r\n        const todo = { ...this.state.todo }\r\n        todo.isDone = ev.target.checked\r\n        await this.setState({ todo })\r\n\r\n        const cardToSave = { ...this.props.card }\r\n        const checklistIndex = cardToSave.checklists.findIndex(checklist => checklist.id === this.props.checklistId)\r\n        const todoIndex = cardToSave.checklists[checklistIndex].todos.findIndex(todo => todo.id === this.state.todo.id)\r\n        cardToSave.checklists[checklistIndex].todos[todoIndex] = this.state.todo\r\n        try {\r\n            await this.props.updateCard(cardToSave)\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { todo } = this.state\r\n        if (!todo) return <div>Loading...</div>\r\n        return (\r\n            <li className=\"todo-show flex space-between align-center\">\r\n                <span className=\"content\">\r\n                    <input type=\"checkbox\" name=\"isDone\" value={todo.isDone} checked={todo.isDone} onChange={this.handleChange} ></input>\r\n                    <h3 className={`${todo.isDone}`} >{todo.txt}</h3>\r\n                </span>\r\n                <span className=\"nav\">\r\n                    <button className=\" delete\" onClick={() => { this.props.removeTodo(todo.id, this.props.checklistId) }} ></button>\r\n                </span>\r\n            </li>)\r\n\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const TodoShow = connect(mapStateToProps, mapDispatchToProps)(_TodoShow)\r\n","import React from 'react'\r\nimport { TodoShow } from './TodoShow'\r\n\r\nexport function TodoListShow(props) {\r\n\r\n\r\n    const { checklist, card, updateCard, removeTodo } = props\r\n    return (\r\n        <ul className=\"show\">\r\n            {checklist.todos.map(todo => <TodoShow key={todo.id} todo={todo}\r\n                card={card} checklistId={checklist.id}\r\n                updateCard={updateCard} removeTodo={removeTodo} />)}\r\n        </ul>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { TodoListShow } from './TodoListShow'\r\n\r\n// import { socketService } from '../services/socketService'\r\nimport { utilService } from '../../services/utilService.js'\r\n\r\nclass _CardChecklistShow extends Component {\r\n    state = {\r\n        todo: { txt: '', isDone: false },\r\n        progress: 0\r\n    }\r\n    componentDidMount() {\r\n        this.getProgress()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps !== this.props) {\r\n            this.getProgress()\r\n        }\r\n    }\r\n\r\n\r\n    removeChecklist = (checklistId) => {\r\n        // const labelsToSave = this.props.labels.filter(label => label.id !== labelId)\r\n        const cardToSave = { ...this.props.card }\r\n        const checklistsToSave = cardToSave.checklists.filter(checklist => checklist.id !== checklistId)\r\n\r\n        cardToSave.checklists = checklistsToSave\r\n        console.log('cardToSave', cardToSave);\r\n        this.props.updateCard(cardToSave)\r\n    }\r\n\r\n    handleTaskChange = (ev) => {\r\n        const todo = { ...this.state.todo }\r\n        if (ev.target.name === 'isDone') todo.isDone = ev.target.checked\r\n        else todo[ev.target.name] = ev.target.value\r\n\r\n        this.setState({ todo })\r\n    }\r\n\r\n    addTask = (ev, checklistId) => {\r\n        ev.preventDefault()\r\n\r\n        const todo = { ...this.state.todo, id: utilService.makeId() }\r\n        const cardToSave = { ...this.props.card }\r\n        const checklistToSave = cardToSave.checklists.find(checklist => checklist.id === checklistId)\r\n        checklistToSave.todos = (checklistToSave.todos) ? [...checklistToSave.todos, todo] : [todo]\r\n        const checklistsToSave = cardToSave.checklists.map(checklist => {\r\n            if (checklist.id === checklistId) return checklistToSave\r\n            else return checklist\r\n        })\r\n        cardToSave.checklists = checklistsToSave\r\n\r\n        console.log('cardToSave', cardToSave);\r\n        this.props.updateCard(cardToSave)\r\n            .then(this.setState({ todo: { txt: '', isDone: false } }))\r\n    }\r\n\r\n\r\n    removeTodo = (todoId, checklistId) => {\r\n        const cardToSave = { ...this.props.card }\r\n        const checklistIndex = cardToSave.checklists.findIndex(checklist => checklist.id === checklistId)\r\n        const todoToSave = cardToSave.checklists[checklistIndex].todos.filter(todo => todo.id !== todoId)\r\n        cardToSave.checklists[checklistIndex].todos = todoToSave\r\n        this.props.updateCard(cardToSave)\r\n    }\r\n\r\n    getProgress = () => {\r\n        let done = 0\r\n        let all = 0\r\n        this.props.checklists.forEach(Checklist => {\r\n            Checklist.todos.forEach(todo => {\r\n                if (todo.isDone === true) done++\r\n                all++\r\n            })\r\n        })\r\n        const progress = Math.round(done / all * 100)\r\n        this.setState({ progress })\r\n    }\r\n\r\n    render() {\r\n        const { todo, progress } = this.state\r\n        const done = (progress === 100) ? 'done' : ''\r\n        return (\r\n            <ul className=\"card-checklist-show card-show \">\r\n                {/* <progress value={progress.done} max={progress.all}> </progress> */}\r\n                <div className=\"show flex align-center\">\r\n                    <span>{`${progress}%`}</span>\r\n                    <div className=\"progress-wraper\"><div className={`progress-inner ${done}`} style={{ width: `${progress}%` }}></div></div>\r\n                </div>\r\n                {this.props.checklists.map(checklist => {\r\n                    return (\r\n                        <li key={checklist.id} className=\"checklist-wraper\" >\r\n                            <header className=\"flex space-between\">\r\n                                <h4 className=\"checklist-title\" > {checklist.title}</h4>\r\n                                <button className=\"edit-btn\" onClick={() => { this.removeChecklist(checklist.id) }}>Delete</button>\r\n                            </header>\r\n                            <TodoListShow checklist={checklist} card={this.props.card} updateCard={this.props.updateCard}\r\n                                removeTodo={this.removeTodo} />\r\n                            <form onSubmit={(event) => { this.addTask(event, checklist.id) }}>\r\n                                <input type=\"text\" name=\"txt\" value={todo.txt} onChange={this.handleTaskChange}\r\n                                    placeholder=\"Add an item\" autoComplete=\"off\" required></input>\r\n                                <button className=\"add-btn\">Add</button>\r\n                                {/* <button className=\"add-btn\" onClick>X</button> */}\r\n                            </form>\r\n                        </li>\r\n\r\n                    )\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const CardChecklistShow = connect(mapStateToProps, mapDispatchToProps)(_CardChecklistShow)\r\n","import React, { useState } from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n// import { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nexport function AddDeutimeBar(props) {\r\n\r\n\r\n\r\n\r\n    const [startDate, setStartDate] = useState(new Date());\r\n\r\n\r\n    return (\r\n        <div className=\"edit-bar\">\r\n            <header className=\"seconde\">\r\n                <h3>Due Date</h3>\r\n                <button onClick={props.toggleAddDeutime}>x</button>\r\n\r\n            </header>\r\n            <main>\r\n                <DatePicker\r\n                    selected={startDate}\r\n                    onSelect={date => setStartDate(() => { props.addDeuDate(date) })}\r\n                    inline\r\n                />\r\n            </main>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n","import React from 'react'\r\n\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nexport function CardDuedateShow(props) {\r\n\r\n    // removeLable = (labelId) => {\r\n    //     const cardToSave = { ...this.props.card }\r\n    //     const labelsToSave = cardToSave.labels.filter(label => label.id !== labelId)\r\n    //     cardToSave.labels = labelsToSave\r\n    //     this.props.updateCard(cardToSave)\r\n    // }\r\n\r\n    const { card } = props\r\n    const m = new Date(card.duedate).getMonth() + 1\r\n    let month = ''\r\n    switch (m) {\r\n        case 1: month = 'Jan'; break;\r\n        case 2: month = 'Feb'; break;\r\n        case 3: month = 'Mar'; break;\r\n        case 4: month = 'Apr'; break;\r\n        case 5: month = 'May'; break;\r\n        case 6: month = 'Jun'; break;\r\n        case 7: month = 'Jul'; break;\r\n        case 8: month = 'Aug'; break;\r\n        case 9: month = 'Sep'; break;\r\n        case 10: month = 'Oct'; break;\r\n        case 11: month = 'Nov'; break;\r\n        case 12: month = 'Dec'; break;\r\n        default: break;\r\n    }\r\n    const day = card.duedate.substring(8, 10)\r\n    const remainingTime = (new Date(card.duedate) - Date.now())\r\n    const urgent = (remainingTime < 1000 * 60 * 60 * 24) ? 'urgent' : ''\r\n\r\n\r\n    return (\r\n        <p className={`duetime-fa ${urgent} `}>{` ${month} ${day}`}</p>\r\n    )\r\n}\r\n\r\n\r\n","export const cloudinaryService = {\r\n    uploadImg\r\n  }\r\n  async function uploadImg(file) {\r\n    const CLOUD_NAME = \"ddgevj2yp\"\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n  \r\n    const formData = new FormData();\r\n    formData.append('file', file)\r\n    formData.append('upload_preset', 'ddgevj2yp');\r\n    try {\r\n      const res = await fetch(UPLOAD_URL, {\r\n        method: 'POST',\r\n        body: formData\r\n      })\r\n      const data = await res.json()\r\n      return data\r\n  \r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  ","import { Component } from 'react'\r\nimport { cloudinaryService } from '../services/cloudinaryService'\r\n\r\nexport class Uploader extends Component {\r\n  state = {\r\n    imgUrl: null,\r\n    height: 300,\r\n    width: 300,\r\n    isUploading: false\r\n  }\r\n  onUploadImg = async ev => {\r\n    this.setState({ isUploading: true })\r\n    const { secure_url, height, width } = await cloudinaryService.uploadImg(ev.target.files[0])\r\n    this.setState({ imgUrl: secure_url, isUploading: false, height, width })\r\n    this.props.addImg(secure_url)\r\n    // this.props.onFinishUpload(secure_url)\r\n  }\r\n  render() {\r\n    const { imgUrl, isUploading, height, width } = this.state\r\n    const uploadStyle = {\r\n      backgroundImage: `url(${imgUrl})`,\r\n      height: height + 'px',\r\n      width: width + 'px',\r\n      objectFit: 'cover'\r\n    }\r\n    return (\r\n      <div className=\"uploader flex align-center justify-center\"\r\n        style={ uploadStyle }>\r\n\r\n        <label htmlFor=\"imageUploader\">\r\n          { isUploading ? 'Uploading....' : 'Upload Image' }\r\n        </label>\r\n\r\n        <input onChange={ this.onUploadImg } \r\n          type=\"file\" accept=\"image/*\" id=\"imageUploader\" />\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport { Uploader } from '../Uploader'\r\n// import { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nexport function AddImgBar(props) {\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"edit-bar\">\r\n            <header className=\"seconde\">\r\n                <h3>Upload image</h3>\r\n                <button onClick={props.toggleAddImg}>x</button>\r\n\r\n            </header>\r\n            <main>\r\n                <Uploader addImg={props.addImg} />\r\n                {/* <DatePicker\r\n                    selected={startDate}\r\n                    onSelect={date => setStartDate(() => { props.addDeuDate(date) })}\r\n                    inline\r\n                /> */}\r\n            </main>\r\n        </div>\r\n    );\r\n\r\n}","import React from 'react'\r\n\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nexport function CardImgShow(props) {\r\n\r\n\r\n    const { card } = props\r\n    const img = card.img\r\n\r\n\r\n    return (\r\n        <span className=\"card-img-show\">\r\n            <img className=\"show\" src={img} alt=\"\" />\r\n            {/* <p className={`duetime-fa ${urgent} `}>{` ${month} ${day}`}</p> */}\r\n        </span>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _AddMembersBar extends Component {\r\n    state = {\r\n        member: { fullname: '' }\r\n    }\r\n\r\n\r\n\r\n    handleChange = (ev) => {\r\n        const member = { ...this.state.member }\r\n        member[ev.target.name] = ev.target.value\r\n\r\n        this.setState({ member })\r\n    }\r\n\r\n    onAddMembers = (user) => {\r\n        const { card } = this.props\r\n        const cardToSave = { ...card }\r\n        const userToRemove = card.members.find(currUser => currUser._id === user._id)\r\n        if (userToRemove) {\r\n            const newMembers = card.members.filter(currUser => currUser._id !== user._id)\r\n            cardToSave.members = newMembers\r\n            this.setState({ member: { fullname: '' } })\r\n\r\n        } else {\r\n            const miniUser = { _id: user._id, fullname: user.fullname, imgUrl: user.imgUrl }\r\n            cardToSave.members = (cardToSave.members) ? [...cardToSave.members, miniUser] : [miniUser]\r\n        }\r\n        this.props.updateCard(cardToSave, `added ${this.state.member.fullname}`)\r\n        this.setState({ member: { fullname: '' } })\r\n    }\r\n\r\n    render() {\r\n        const { toggleAddMembers, users, card } = this.props\r\n\r\n        return (\r\n\r\n            <div className=\"add-members-bar edit-bar\">\r\n                <header className=\"seconde\">\r\n                    <h3>Add Members</h3>\r\n                    <button onClick={toggleAddMembers}>x</button>\r\n\r\n                </header>\r\n                <main>\r\n                    <label>Members\r\n                    <input list=\"members\" name=\"fullname\" value={this.state.member.fullname}\r\n                            onChange={this.handleChange} autoFocus autoComplete=\"off\" ></input>\r\n                    </label>\r\n                    <ul>\r\n                        {users.map(user => {\r\n                            const alreadyMember = (card.members?.find(currUser => currUser.fullname === user.fullname)) ? 'alreadyMember' : ''\r\n                            return (\r\n                                <li className={alreadyMember} key={user._id} value={user.fullname} onClick={() => { this.onAddMembers(user) }}>\r\n                                    <div className=\"member-item\">\r\n                                        <div className=\"user-img\" style={{ backgroundImage: `url(${user.imgUrl})` }}></div>\r\n                                        {user.fullname}\r\n                                    </div>\r\n                                </li>)\r\n                        })}\r\n                    </ul>\r\n                    {/* <datalist id=\"members\">\r\n                        {users.map(user => {\r\n                            const alreadyMember = (card.members?.find(currUser => currUser.fullname === user.fullname)) ? 'alreadyMember' : ''\r\n                            return <option className={alreadyMember} key={user._id} value={user.fullname}> </option>\r\n                        })}\r\n                    </datalist> */}\r\n                    <button className=\"add-btn\">Add</button>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport const AddMembersBar = connect(mapStateToProps, mapDispatchToProps)(_AddMembersBar)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _CardMembersShow extends Component {\r\n\r\n    // removeLable = (labelId) => {\r\n    //     const cardToSave = { ...this.props.card }\r\n    //     const labelsToSave = cardToSave.labels.filter(label => label.id !== labelId)\r\n    //     cardToSave.labels = labelsToSave\r\n    //     this.props.updateCard(cardToSave)\r\n    // }\r\n\r\n    render() {\r\n\r\n\r\n\r\n        return (\r\n            <ul className=\"card-member-show flex flex-end\">\r\n\r\n                {this.props.members.map(member => {\r\n                    let userImgStyle = {\r\n                        backgroundImage: `url(${member.imgUrl})`\r\n                    }\r\n                    return (\r\n                        <li key={member._id} style={userImgStyle} className='user-img' >\r\n                        </li>\r\n\r\n                    )\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const CardMembersShow = connect(mapStateToProps, mapDispatchToProps)(_CardMembersShow)\r\n","\r\n\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _CardActivitiesShow extends Component {\r\n\r\n\r\n\r\n    render() {\r\n        this.props.activities.filter(activity => {\r\n            if (activity.card.id === this.props.card.id) return <div></div>\r\n        })\r\n        return (\r\n            <ul className=\"card-activities-show card-show show\">\r\n                {this.props.activities.map(activity => {\r\n                    if (activity.card.id === this.props.card.id) return (\r\n                        <li key={activity.id} >\r\n                            <div className=\"user-img inline-block\" style={{ backgroundImage: `url(${activity.byMember.imgUrl})` }}></div>\r\n                            <span>{activity.byMember.fullname} </span> {` ${activity.txt} to this card`}\r\n                        </li>\r\n\r\n                    )\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const CardActivitiesShow = connect(mapStateToProps, mapDispatchToProps)(_CardActivitiesShow)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _DeleteCardBar extends Component {\r\n    state = {\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n\r\n    }\r\n\r\n\r\n    deleteCard = async () => {\r\n        try {\r\n            this.props.onRemoveCard(this.props.cardId)\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <form className=\"edit-bar\" onSubmit={this.deleteCard}>\r\n                <header className=\"seconde\">\r\n                    <h3> Delete card?</h3>\r\n                    <button onClick={this.props.toggleDeleteCard}>x</button>\r\n\r\n                </header>\r\n                <main>\r\n                    <p>All actions will be removed from the activity feed and you won’t be able to re-open the card. There is no undo.</p>\r\n                    <button className=\"add-btn red\">Delete</button>\r\n                </main>\r\n            </form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const DeleteCardBar = connect(mapStateToProps, mapDispatchToProps)(_DeleteCardBar)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\nimport { utilService } from '../services/utilService.js'\r\nimport { loadBoard, updateBoard } from '../store/actions/boardActions.js'\r\nimport { loadUsers } from '../store/actions/userActions.js'\r\nimport { CardEditNav } from '../cmps/cardEdit/CardEditNav'\r\nimport { AddDescription } from '../cmps/cardEdit/AddDescription'\r\nimport { LabelPalette } from '../cmps/cardEdit/LabelPalette'\r\nimport { AddChecklistBar } from '../cmps/cardEdit/AddChecklistBar'\r\nimport { AddCoverBar } from '../cmps/cardEdit/AddCoverBar'\r\nimport { CardLabelShow } from '../cmps/cardEdit/CardLabelShow'\r\nimport { CardChecklistShow } from '../cmps/cardEdit/CardChecklistShow'\r\nimport { AddDeutimeBar } from '../cmps/cardEdit/AddDeutimeBar'\r\nimport { CardDuedateShow } from '../cmps/cardEdit/CardDuedateShow'\r\nimport { AddImgBar } from '../cmps/cardEdit/AddImgBar'\r\nimport { CardImgShow } from '../cmps/cardEdit/CardImgShow'\r\nimport { AddMembersBar } from '../cmps/cardEdit/AddMembersBar'\r\nimport { CardMembersShow } from '../cmps/cardEdit/CardMembersShow'\r\nimport { CardActivitiesShow } from '../cmps/cardEdit/CardActivitiesShow'\r\nimport { DeleteCardBar } from '../cmps/cardEdit/DeleteCardBar'\r\n\r\nclass _CardEdit extends Component {\r\n    state = {\r\n        board: null,\r\n        groupId: null,\r\n        card: null,\r\n        isDescriptionShowing: false,\r\n        isLabelPaletteShowing: false,\r\n        isAddChecklistShowing: false,\r\n        isCoverShowing: false,\r\n        isAddDeutimeShowing: false,\r\n        isAddImgShowing: false,\r\n        isAddMembersShowing: false,\r\n        isDeleteCardShowing: false,\r\n        isActivitiesShowing: true\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            this.loadCard()\r\n            this.props.loadUsers()\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevprops) {\r\n        if (this.props.match !== prevprops.match) this.loadCard()\r\n    }\r\n\r\n    loadCard = async () => {\r\n        const boardId = this.props.selectedBoard._id\r\n        const groupId = this.props.groupId\r\n        const cardId = this.props.card.id\r\n        try {\r\n            await this.props.loadBoard(boardId)\r\n            const groups = this.props.selectedBoard.groups\r\n            const group = groups.find(group => group.id === groupId)\r\n            const card = group.cards.find(currCard => currCard.id === cardId)\r\n            this.setState({ board: this.props.selectedBoard, groupId, card })\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    updateCard = async (cardToSave, txt = '') => {\r\n        const boardToSave = { ...this.props.selectedBoard }\r\n        const groupToSave = boardToSave.groups.find(group => group.id === this.state.groupId)\r\n        const cardsToSave = groupToSave.cards.map(card => {\r\n            if (card.id === cardToSave.id) return cardToSave\r\n            else return card\r\n        })\r\n        groupToSave.cards = cardsToSave\r\n        const groupsToSave = boardToSave.groups.map(group => {\r\n            if (group.id === groupToSave.id) return groupToSave\r\n            else return group\r\n        })\r\n        boardToSave.groups = groupsToSave\r\n        if (txt) {\r\n            const activity = this.createActivity(txt)\r\n            boardToSave.activities.unshift(activity)\r\n        }\r\n        try {\r\n            // await updateBoard(boardToSave)\r\n            await this.props.updateBoard(boardToSave)\r\n            this.loadCard()\r\n\r\n        } catch (err) {\r\n            console.log('BoardActions: err in loadBoard', err)\r\n        }\r\n    }\r\n\r\n    createActivity = (txt) => {\r\n        const { loggedInUser, card } = this.props\r\n        const miniUser = (loggedInUser) ? { _id: loggedInUser._id, fullname: loggedInUser.fullname, imgUrl: loggedInUser.imgUrl } : { _id: '123', fullname: 'guest', imgUrl: 'https://res.cloudinary.com/ddgevj2yp/image/upload/v1610989052/avatar-1_kbr5un.jpg' }\r\n        const miniCard = { id: card.id, title: card.title }\r\n        const activity = { id: 'a' + utilService.makeId(), createdAt: Date.now(), txt, byMember: miniUser, card: miniCard }\r\n        return activity\r\n    }\r\n\r\n    toggleLabelPalette = () => {\r\n        this.setState({ isLabelPaletteShowing: !this.state.isLabelPaletteShowing })\r\n    }\r\n    toggleChecklistBar = () => {\r\n        this.setState({ isAddChecklistShowing: !this.state.isAddChecklistShowing })\r\n    }\r\n    toggleCoverBar = () => {\r\n        this.setState({ isCoverShowing: !this.state.isCoverShowing })\r\n    }\r\n    toggleAddDescription = () => {\r\n        this.setState({ isDescriptionShowing: !this.state.isDescriptionShowing })\r\n    }\r\n    toggleAddDeutime = () => {\r\n        this.setState({ isAddDeutimeShowing: !this.state.isAddDeutimeShowing })\r\n    }\r\n    toggleAddMembers = () => {\r\n        this.setState({ isAddMembersShowing: !this.state.isAddMembersShowing })\r\n    }\r\n\r\n    toggleAddImg = () => {\r\n        this.setState({ isAddImgShowing: !this.state.isAddImgShowing })\r\n    }\r\n\r\n    toggleDeleteCard = () => {\r\n        this.setState({ isDeleteCardShowing: !this.state.isDeleteCardShowing })\r\n    }\r\n\r\n    addDeuDate = (date) => {\r\n        const cardToSave = { ...this.props.card }\r\n        cardToSave.duedate = date\r\n        this.updateCard(cardToSave, `added due date`)\r\n        // this.updateCard(cardToSave, `set card to be due at ${date}`)\r\n    }\r\n\r\n    addImg = (img) => {\r\n        const cardToSave = { ...this.props.card }\r\n        cardToSave.img = img\r\n        this.updateCard(cardToSave, 'added img')\r\n        // console.log('card to save:', cardToSave)\r\n    }\r\n\r\n    stopProg = (ev) => {\r\n        ev.stopPropagation();\r\n    }\r\n\r\n\r\n    render() {\r\n        const { isDescriptionShowing, isActivitiesShowing } = this.state\r\n        const { card, users, toggleCardEdit, onRemoveCard, selectedBoard } = this.props\r\n        const isLabels = (card && card.labels && card.labels.length > 0)\r\n        const isChecklists = (card && card.checklists && card.checklists.length > 0)\r\n        const isDuedate = (card && card.duedate)\r\n        const isMember = (card && card.members && card.members.length > 0)\r\n        const coverShow = (card && card.style?.coverType) ? `top t${card.style.bgColor}` : ''\r\n        const isImg = (card && card.img)\r\n\r\n\r\n        if (!card) return <div></div>\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"screen\" onClick={toggleCardEdit}>\r\n                    <div onClick={(ev) => { this.stopProg(ev) }} >\r\n                        {/* <section className=\"card-edit\"> */}\r\n                        <section className={`card-edit ${coverShow}`}>\r\n                            {/* {(card.style && card.style.coverType && card.style.bgColor) ? <CardCoverShow card={card} /> : ''} */}\r\n                            <header className=\"edit-header\">\r\n                                <button className=\"close\" onClick={toggleCardEdit}></button>\r\n                                <h1 className=\"title-sign\">{card.title}</h1>\r\n                            </header>\r\n\r\n                            <div className=\"permanent\">\r\n                                <main>\r\n                                    <div className=\"nav-mini-show show flex \">\r\n                                        <div className=\" inline-block\">{isLabels && <div> <h5>Labels </h5><CardLabelShow labels={card.labels} card={card} updateCard={this.updateCard} /></div>}</div>\r\n                                        <div className=\"inline-block\">{isDuedate && <div className=\"duedate\"> <h5>Due Date </h5> <CardDuedateShow duedate={card.duedate} card={card} updateCard={this.updateCard} /></div>}</div>\r\n                                        <div className=\"inline-block\">{isMember && <div className=\"members\"> <h5>Members </h5> <CardMembersShow members={card.members} card={card} updateCard={this.updateCard} /></div>}</div>\r\n                                        {/* <div className=\"inline-block\">{isImg && <div className=\"card-img\"> <CardImgShow img={card.img} card={card} updateCard={this.updateCard} /></div>}</div> */}\r\n                                    </div>\r\n                                    <h4 className=\"description-sign\">Description </h4>\r\n                                    {(isDescriptionShowing) ? <AddDescription card={card} toggleAddDescription={this.toggleAddDescription} updateCard={this.updateCard} /> : ((card.description) ?\r\n                                        <div className=\"description show\">{card.description} <button className=\"edit-btn\" onClick={this.toggleAddDescription}>Edit</button></div> :\r\n                                        <div className=\"show description\" onClick={this.toggleAddDescription}>add a more detailed description...</div>)}\r\n                                    <p>{card.description && ''}</p>\r\n                                    <div className=\"inline-block\">{isImg && <div className=\"card-img\"> <CardImgShow img={card.img} card={card} updateCard={this.updateCard} /></div>}</div>\r\n                                    <div>{isChecklists && <div><CardChecklistShow checklists={card.checklists} card={card} updateCard={this.updateCard} /></div>}</div>\r\n                                    <div>{isActivitiesShowing && <div> <h4 className=\"activity-sign\">Activity </h4> <CardActivitiesShow activities={selectedBoard.activities} card={card} updateCard={this.updateCard} /></div>}</div>\r\n                                </main>\r\n                                <CardEditNav card={card} toggleLabelPalette={this.toggleLabelPalette} toggleChecklistBar={this.toggleChecklistBar} toggleCoverBar={this.toggleCoverBar}\r\n                                    toggleAddDeutime={this.toggleAddDeutime} toggleAddImg={this.toggleAddImg} toggleAddMembers={this.toggleAddMembers} toggleDeleteCard={this.toggleDeleteCard} />\r\n                            </div>\r\n\r\n\r\n                            {this.state.isLabelPaletteShowing && <LabelPalette card={card} updateCard={this.updateCard} toggleLabelPalette={this.toggleLabelPalette} board={selectedBoard} updateBoard={this.props.updateBoard} />}\r\n                            {this.state.isAddChecklistShowing && <AddChecklistBar card={card} updateCard={this.updateCard} toggleChecklistBar={this.toggleChecklistBar} />}\r\n                            {this.state.isCoverShowing && <AddCoverBar card={card} updateCard={this.updateCard} toggleCoverBar={this.toggleCoverBar} />}\r\n                            {this.state.isAddDeutimeShowing && <AddDeutimeBar card={card} updateCard={this.updateCard} toggleAddDeutime={this.toggleAddDeutime} addDeuDate={this.addDeuDate} />}\r\n                            {this.state.isAddMembersShowing && <AddMembersBar card={card} updateCard={this.updateCard} toggleAddMembers={this.toggleAddMembers} users={users} />}\r\n                            {this.state.isAddImgShowing && <AddImgBar card={card} updateCard={this.updateCard} toggleAddImg={this.toggleAddImg} addImg={this.addImg} />}\r\n                            {this.state.isDeleteCardShowing && <DeleteCardBar cardId={card.id} boardId={selectedBoard._id} toggleDeleteCard={this.toggleDeleteCard} onRemoveCard={onRemoveCard} />}\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard,\r\n        users: state.userModule.users,\r\n        loggedInUser: state.userModule.loggedInUser\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoard,\r\n    updateBoard,\r\n    loadUsers\r\n}\r\n\r\nexport const CardEdit = connect(mapStateToProps, mapDispatchToProps)(_CardEdit)\r\n","\r\n\r\nimport React from 'react'\r\n\r\nexport function ChecklistSign(props) {\r\n    let done = 0\r\n    let all = 0\r\n\r\n    props.checklists.forEach(Checklist => {\r\n        Checklist.todos.forEach(todo => {\r\n            if (todo.isDone === true) done++\r\n            all++\r\n        })\r\n    })\r\n\r\n    return (\r\n        <span className=\"checklistSign sign\" > {`${done} / ${all}`} </span>\r\n    )\r\n\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nexport function CardDuedateShowMin(props) {\r\n\r\n    // removeLable = (labelId) => {\r\n    //     const cardToSave = { ...this.props.card }\r\n    //     const labelsToSave = cardToSave.labels.filter(label => label.id !== labelId)\r\n    //     cardToSave.labels = labelsToSave\r\n    //     this.props.updateCard(cardToSave)\r\n    // }\r\n\r\n    const { card } = props\r\n    const m = new Date(card.duedate).getMonth() + 1\r\n    let month = ''\r\n    switch (m) {\r\n        case 1: month = 'Jan'; break;\r\n        case 2: month = 'Feb'; break;\r\n        case 3: month = 'Mar'; break;\r\n        case 4: month = 'Apr'; break;\r\n        case 5: month = 'May'; break;\r\n        case 6: month = 'Jun'; break;\r\n        case 7: month = 'Jul'; break;\r\n        case 8: month = 'Aug'; break;\r\n        case 9: month = 'Sep'; break;\r\n        case 10: month = 'Oct'; break;\r\n        case 11: month = 'Nov'; break;\r\n        case 12: month = 'Dec'; break;\r\n        default: break;\r\n    }\r\n    const day = card.duedate.substring(8, 10)\r\n    const remainingTime = (new Date(card.duedate) - Date.now())\r\n    const urgent = (remainingTime < 1000 * 60 * 60 * 24) ? 'urgent' : ''\r\n\r\n\r\n    return (\r\n        <span className=\"card-duedate-show\">\r\n            <span className={`duetime-fa duetime-fa-min ${urgent} `}>{` ${month} ${day}`}</span>\r\n        </span>\r\n    )\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { removeCard } from '../../store/actions/boardActions.js'\r\nimport { CardLabelShowMin } from '../cardEdit/CardLabelShowMin'\r\nimport { CardEdit } from '../../pages/CardEdit'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport { ChecklistSign } from './ChecklistSign'\r\n// import { CardCoverShowMin } from './CardCoverShowMin'\r\nimport { CardImgShow } from '../cardEdit/CardImgShow'\r\nimport { CardDuedateShowMin } from '../cardEdit/CardDuedateShowMin'\r\nimport { CardMembersShow } from '../cardEdit/CardMembersShow'\r\n\r\nexport class _CardPreview extends Component {\r\n\r\n    state = {\r\n        isCardEtidShow: false\r\n    }\r\n\r\n\r\n    onRemoveCard = (cardId) => {\r\n        console.log('cardId to remove', cardId)\r\n        this.props.removeCard(cardId, this.props.groupId, this.props.selectedBoard)\r\n    }\r\n\r\n    toggleCardEdit = () => {\r\n        this.setState({ isCardEtidShow: !this.state.isCardEtidShow })\r\n    }\r\n\r\n    render() {\r\n        const { card } = this.props\r\n        const { isCardEtidShow } = this.state\r\n        // const cardBgc = (card.style && card.style.coverType && card.style.coverType === 'full') ? `full ${card.style.bgColor}` : ''\r\n        const cardBgc = (card.style?.coverType === 'full') ? `full ${card.style.bgColor}` : ''\r\n        const cardCover = (card.style?.coverType === 'top' && card.style.bgColor) ? `top t${card.style.bgColor}` : ''\r\n        return (\r\n\r\n\r\n            <Draggable draggableId={String(card.id)} index={this.props.index} direction=\"horizontal\" type=\"card\">\r\n                {(provided) => {\r\n                    return (\r\n\r\n                        <li key={card.id}  {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef} className={(card.title !== 'default-empty') ? `` : `list-preview-empty`}>\r\n                            <article className={(card.title !== 'default-empty') ? `card-preview ${cardBgc} ${cardCover}` : `card-preview-empty`}>\r\n                                {/* {(card.style?.coverType === 'top') ? <CardCoverShowMin card={card} /> : ''} */}\r\n                                {/* <button className=\"edit-fa\" onClick={() => this.toggleCardEdit}></button> */}\r\n                                <button className=\"edit-s\" onClick={this.toggleCardEdit}></button>\r\n\r\n                                {/* <button className=\"delete-s\" onClick={() => this.onRemoveCard(card.id)}></button> */}\r\n                                {card.labels && <CardLabelShowMin labels={card.labels} />}\r\n                                <p onClick={this.toggleCardEdit}>{card.title}</p>\r\n                                {card.img && <CardImgShow card={card} />}\r\n                                <nav className=\"flex space-between flex-end\">\r\n                                    <span>\r\n                                        {(card.description) ? <span className=\"descriptionSign sign\"></span> : ''}\r\n                                        {(card.checklists && card.checklists.length > 0) ? <ChecklistSign checklists={card.checklists} /> : ''}\r\n                                        {(card.duedate) ? <CardDuedateShowMin card={card} /> : ''}\r\n                                    </span>\r\n                                    <span>\r\n                                        {(card.members) ? <CardMembersShow members={card.members} /> : ''}\r\n                                    </span>\r\n                                </nav>\r\n                                {isCardEtidShow && <CardEdit card={card} groupId={this.props.groupId} toggleCardEdit={this.toggleCardEdit} onRemoveCard={this.onRemoveCard} />}\r\n                            </article>\r\n                        </li>\r\n                    )\r\n                }}\r\n            </Draggable>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    removeCard\r\n\r\n};\r\n\r\nexport const CardPreview = connect(mapStateToProps, mapDispatchToProps)(_CardPreview);","import { CardPreview } from './CardPreview.jsx'\r\nimport { Droppable } from 'react-beautiful-dnd'\r\n\r\n\r\nexport function CardList(props) {\r\n    return (\r\n        <Droppable droppableId={props.groupId} type=\"card\" >\r\n            {(provided) => (\r\n                <ul className=\"card-list\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                    {props.cards.map((card, index) =>\r\n                        <CardPreview key={card.id} card={card} groupId={props.groupId} index={index} />\r\n                    )}\r\n                    {provided.placeholder}\r\n                </ul>\r\n            )}\r\n\r\n        </Droppable>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { addCard } from '../../store/actions/boardActions.js'\r\n\r\nexport class _AddCard extends Component {\r\n\r\n    state = {\r\n        title: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const value = ev.target.value\r\n        const field = ev.target.name\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n    onSubmit = async (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.title) return\r\n        await this.props.addCard(this.state.title, this.props.group.id, this.props.selectedBoard)\r\n        this.props.toggleAddCardMode()\r\n\r\n    }\r\n\r\n    onCancelAdd = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.toggleAddCardMode()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"add-new-card\">\r\n                <form onSubmit={this.onSubmit} >\r\n                    <textarea placeholder=\"Enter a title for this card...\" type=\"text\" onChange={this.handleChange} value={this.state.title} name=\"title\" autoComplete=\"off\"/>\r\n                    <button className=\"save-btn\">Add Card</button>\r\n                    <button className=\"cancel-btn\" onClick={this.onCancelAdd}></button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    addCard\r\n\r\n};\r\n\r\nexport const AddCard = connect(mapStateToProps, mapDispatchToProps)(_AddCard);","\r\n\r\nexport function RemoveList(props) {\r\n\r\n    return (\r\n        <section className=\"edit-bar\">\r\n                <header className=\"seconde\">\r\n                    <h3> Delete list?</h3>\r\n                    <button onClick={props.toggleDeleteBar}>x</button>\r\n\r\n                </header>\r\n                <main>\r\n                    <p>All actions will be removed from the activity feed and you won’t be able to re-open the list. There is no undo.</p>\r\n                    <button className=\"add-btn red\" onClick={()=>props.onRemoveGroup(props.group.id, props.group.title)}>Delete</button>\r\n                </main>\r\n            </section>\r\n    )\r\n}","\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { AddCard } from './AddCard.jsx'\r\nimport { RemoveList } from './RemoveList'\r\n\r\n\r\nexport class _EditGroupNav extends Component {\r\n\r\n    state = {\r\n        isOnAddCardMode: false,\r\n        isDeleteBarShow: false\r\n    }\r\n\r\n\r\n    toggleDeleteBar = () => {\r\n        this.setState({ isDeleteBarShow: !this.state.isDeleteBarShow })\r\n    }\r\n\r\n   \r\n    toggleAddCardMode = () => {\r\n\r\n        this.setState({ isOnAddCardMode: !this.state.isOnAddCardMode })\r\n    }\r\n\r\n    render() {\r\n        const { onRemoveGroup } = this.props\r\n        const { isDeleteBarShow } = this.state\r\n        const { isOnAddCardMode } = this.state\r\n        const { group } = this.props\r\n        return (\r\n            <React.Fragment>\r\n                < nav className=\"edit-group-container\">\r\n                    {(!isOnAddCardMode) ? <button onClick={this.toggleAddCardMode}>Add another card...</button> : <AddCard group={group} toggleAddCardMode={this.toggleAddCardMode} />}\r\n                    {(!isDeleteBarShow) ? <button onClick={this.toggleDeleteBar}>Delete this list...</button> : <RemoveList group={group} toggleDeleteBar={this.toggleDeleteBar} onRemoveGroup={onRemoveGroup} />}\r\n                    \r\n                </nav >\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\r\n};\r\n\r\nexport const EditGroupNav = connect(mapStateToProps, mapDispatchToProps)(_EditGroupNav);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { updateBoard } from '../../store/actions/boardActions.js'\r\nimport { EditGroupTitle } from './EditGroupTitle'\r\nimport { CardList } from '../card/CardList'\r\nimport { AddCard } from './AddCard.jsx'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport { EditGroupNav } from './EditGroupNav'\r\n\r\n\r\n\r\nexport class _GroupPreview extends Component {\r\n\r\n    state = {\r\n        isOnAddCardMode: false,\r\n        isEditMode: false,\r\n        isEditGroupNavShow: false,\r\n        // isOnAddGroupMode: false,\r\n        title: '',\r\n        groupHeight: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ groupHeight: document.body.clientHeight })\r\n    }\r\n\r\n    onRemoveGroup = async (groupId, groupTitle) => {\r\n        let boardToUpdate = JSON.parse(JSON.stringify(this.props.selectedBoard))\r\n        let msg = `removed list titled ${groupTitle}`\r\n        const updatedGroups = boardToUpdate.groups.filter(group => group.id !== groupId)\r\n        boardToUpdate.groups = updatedGroups\r\n\r\n        const board = await this.props.updateBoard(boardToUpdate, msg)\r\n        // this.props.removeGroup(groupId, this.props.selectedBoard)\r\n    }\r\n\r\n    toggleEditMode = () => {\r\n\r\n        this.setState({ isEditMode: !this.state.isEditMode })\r\n    }\r\n    toggleAddCardMode = () => {\r\n\r\n        this.setState({ isOnAddCardMode: !this.state.isOnAddCardMode })\r\n    }\r\n    toggleEditGroupNav = () => {\r\n        this.setState({ isEditGroupNavShow: !this.state.isEditGroupNavShow })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { isEditMode, isOnAddCardMode, isEditGroupNavShow } = this.state\r\n        const { group } = this.props\r\n        return (\r\n            <Draggable draggableId={group.id} index={this.props.index}>\r\n                {(provided) => {\r\n                    return (\r\n                        <li className=\"group\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\r\n                            <article className=\"group-preview\">\r\n                                <div className=\"group-wraper\" >\r\n                                    <header>\r\n                                        {(!isEditMode) ? <p onClick={this.toggleEditMode}>{group.title} </p> : <EditGroupTitle group={group} toggleEditMode={this.toggleEditMode} />}\r\n                                        <button className=\"menu-group\" onClick={() => this.toggleEditGroupNav(group.id)}></button>\r\n                                        {isEditGroupNavShow && <EditGroupNav group={group} onRemoveGroup={this.onRemoveGroup} />}\r\n                                    </header>\r\n                                    <main style={{ maxHeight: `${this.state.groupHeight - 250}px` }}>\r\n                                        <div className=\"main-group-wraper\">\r\n                                            {group.cards && <CardList groupId={group.id} cards={group.cards} />}\r\n                                        </div>\r\n                                    </main>\r\n                                    {(!isOnAddCardMode) ? <p className=\"add-another-card\" onClick={this.toggleAddCardMode}> Add another card</p> : <AddCard group={group} toggleAddCardMode={this.toggleAddCardMode} />}\r\n                                </div>\r\n                            </article>\r\n                        </li>\r\n\r\n                    )\r\n\r\n                }}\r\n\r\n            </Draggable>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    updateBoard,\r\n\r\n};\r\n\r\nexport const GroupPreview = connect(mapStateToProps, mapDispatchToProps)(_GroupPreview);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { addGroup } from '../../store/actions/boardActions.js'\r\n// import Icon from '@material-ui/core/Icon';\r\nexport class _AddNewGroup extends Component {\r\n    state = {\r\n        title: ''\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    handleChange = (ev) => {\r\n        const value = ev.target.value\r\n        const field = ev.target.name\r\n        this.setState({ [field]: value })\r\n    }\r\n    onSubmit = async (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.title) return\r\n        await this.props.addGroup(this.state.title, this.props.selectedBoard)\r\n        this.setState({ title: '' })\r\n        this.props.toggleAddGroupMode()\r\n    }\r\n    onCancelAdd = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.toggleAddGroupMode()\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"add-new-group\">\r\n                <form className=\"add-new-wraper\" onSubmit={this.onSubmit} >\r\n                    <input className=\"add-another-group\" placeholder=\"Add another list\" type=\"text\" onChange={this.handleChange} value={this.state.title} name=\"title\" autoComplete=\"off\" />\r\n                    <button className=\"save-group-btn\">Add List</button>\r\n                    <button className=\"cancel-group-btn\" onClick={this.onCancelAdd}></button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    addGroup,\r\n};\r\nexport const AddNewGroup = connect(mapStateToProps, mapDispatchToProps)(_AddNewGroup);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { GroupPreview } from './GroupPreview.jsx'\r\nimport { AddNewGroup } from './AddNewGroup.jsx'\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\r\n\r\nexport class _GroupList extends Component {\r\n    state = {\r\n        isOnAddGroupMode: false,\r\n    }\r\n    toggleAddGroupMode = () => {\r\n        this.setState({ isOnAddGroupMode: !this.state.isOnAddGroupMode })\r\n    }\r\n    render() {\r\n        const { isOnAddGroupMode } = this.state\r\n        return (\r\n            <DragDropContext onDragEnd={this.props.onDragEnd}>\r\n                <section className=\"group-list-container\">\r\n                    <Droppable droppableId={'moveGroups'} direction=\"horizontal\" type=\"group\">\r\n                        {(provided) => (\r\n                            <ul className=\"group-list clean-list\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                                {this.props.groups.map((group, index) =>\r\n                                    <GroupPreview key={group.id} group={group} index={index} />\r\n                                )}\r\n                                {provided.placeholder}\r\n                            </ul>\r\n                        )}\r\n                    </Droppable>\r\n                    {(!isOnAddGroupMode) ? <p className=\"add-another-list\" onClick={this.toggleAddGroupMode}> Add another list</p> : <AddNewGroup boardId={this.props.boardId} toggleAddGroupMode={this.toggleAddGroupMode} />}\r\n                </section>\r\n            </DragDropContext>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n};\r\nexport const GroupList = connect(mapStateToProps, mapDispatchToProps)(_GroupList);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { updateBoard } from '../../store/actions/boardActions.js'\r\n\r\nexport class _EditBoardTitle extends Component {\r\n\r\n    state = {\r\n        title: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { title } = this.props.selectedBoard\r\n        this.setState({ title })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const value = ev.target.value\r\n        const field = ev.target.name\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n    onSubmit = async (ev) => {\r\n        ev.preventDefault()\r\n        const { title } = this.state\r\n        if (!title) return\r\n        const board = { ...this.props.selectedBoard, title }\r\n        await this.props.updateBoard(board, `changed board title to ${title}`)\r\n        this.props.toggleEditMode()\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"edit-board-title\">\r\n                <form onSubmit={this.onSubmit} >\r\n                    <input className=\"new-title-input\" placeholder=\"Board Title\" type=\"text\" onChange={this.handleChange} value={this.state.title} name=\"title\" autoComplete=\"off\" autoFocus />\r\n                    <button className=\"add-btn\">Save</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    updateBoard\r\n};\r\n\r\nexport const EditBoardTitle = connect(mapStateToProps, mapDispatchToProps)(_EditBoardTitle);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { EditBoardTitle } from './EditBoardTitle'\r\n\r\n\r\n\r\nexport class _AboutBoard extends Component {\r\n\r\n    state = {\r\n        isEditMode: false,\r\n\r\n    }\r\n\r\n    toggleEditMode = () => {\r\n        this.setState({ isEditMode: !this.state.isEditMode })\r\n    }\r\n\r\n    render() {\r\n        const { isEditMode } = this.state\r\n        const { selectedBoard } = this.props\r\n        return (\r\n            <div className=\"about-board-container side-menu-sub-item\">\r\n                <header>\r\n                    <h1>About this board</h1>\r\n                    <button className=\"close-menu\" onClick={this.props.toggleAboutBoard}>x</button>\r\n                </header>\r\n                <main className=\"menu-container\">\r\n                    <section>\r\n                        <p className=\"menu-item made-by\"> Made by </p>\r\n                        <div className=\"flex align-center\">\r\n                            <div className=\"user-img sub inline-block\" style={{ backgroundImage: `url(${selectedBoard.createdBy.imgUrl})` }}></div>\r\n                            <span>{selectedBoard.createdBy.username} </span>\r\n                        </div>\r\n                    </section>\r\n                    <section>\r\n                        <p className=\"menu-item board-name\">Board name <span className=\"board-name-edit\">click to edit</span></p>\r\n\r\n                        {(!isEditMode) ? <p className=\"board-name-edit\" onClick={this.toggleEditMode}> {selectedBoard.title} </p> : <EditBoardTitle toggleEditMode={this.toggleEditMode} />}\r\n                        {/* <button onClick={() => { this.props.toggleAboutBoard() }}>Back to Menu</button> */}\r\n                    </section>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\r\n\r\n};\r\n\r\nexport const AboutBoard = connect(mapStateToProps, mapDispatchToProps)(_AboutBoard);\r\n\r\n\r\n","\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { updateBoard } from '../../store/actions/boardActions.js'\r\n\r\nexport class _ChangeBoardBackground extends Component {\r\n\r\n    state = {\r\n        bgurl: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    onChooseBackground = (bgUrl) => {\r\n        const callback = () => {\r\n            this.onSubmit();\r\n        };\r\n        this.setState({ bgurl: bgUrl }, callback)\r\n    }\r\n\r\n    onSubmit = async () => {\r\n        let boardToUpdate = JSON.parse(JSON.stringify(this.props.selectedBoard))\r\n        boardToUpdate.style.bgurl = this.state.bgurl\r\n       await this.props.updateBoard(boardToUpdate, 'changed background')\r\n    }\r\n\r\n    onCancelAdd = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.toggleNewBoard()\r\n    }\r\n\r\n    stopPropagation = (ev) => {\r\n        ev.stopPropagation()\r\n    }\r\n\r\n    render() {\r\n        const backgroundImages = [\r\n            {\r\n                id: 'bg101',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2020/04/11/18/24/star-5031540_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg102',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2016/11/29/08/00/abstract-1868269_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg103',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2019/03/23/20/54/bamboo-4076262_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg104',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2013/07/21/13/00/rose-165819_1280.jpg\"\r\n\r\n            },\r\n            {\r\n                id: 'bg105',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2014/09/14/18/04/dandelion-445228_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg106',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2017/05/11/11/15/workplace-2303851_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg107',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2016/02/19/11/33/backround-1209772_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg108',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2017/08/15/15/37/pen-2644392_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg109',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2018/01/11/21/27/laptop-3076957_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg110',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2018/05/31/13/13/rain-3443977_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg111',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2014/04/05/11/38/bokeh-316425_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg112',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2013/07/25/13/01/stones-167089_1280.jpg\"\r\n            }\r\n\r\n        ]\r\n        return (\r\n            <section className=\"add-board-backgrounds\" onClick={this.stopPropagation}>\r\n                <h3>Choose background</h3>\r\n            \r\n                {backgroundImages.map(background => {\r\n                    return (\r\n                        <div className=\"backgrounds-tumbs\" key={background.id}\r\n                            style={{ backgroundImage: `url(${background.bgurl})` }}\r\n                            onClick={() => this.onChooseBackground(background.bgurl)}>\r\n                            <div className=\"plus\">+</div>\r\n                        </div>\r\n                    )\r\n                })}\r\n                <button className=\"cancel-btn\" onClick={() => { this.props.toggleChangeBackground() }}>X Cancel</button> \r\n            </section>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    updateBoard\r\n};\r\n\r\nexport const ChangeBoardBackground = connect(mapStateToProps, mapDispatchToProps)(_ChangeBoardBackground);\r\n\r\n\r\n","\r\n\r\nexport function ActivityPreview(props) {\r\n\r\n    return (\r\n        <li className=\"activity-preview\">\r\n            <div className=\"user-img inline-block\" style={{ backgroundImage: `url(${props.activity.byMember.imgUrl})` }}></div>\r\n            <span className=\"user-name\">{props.activity.byMember.fullname} </span>\r\n            <span> {props.activity.txt} </span>\r\n        </li>\r\n\r\n    )\r\n}","import { ActivityPreview } from './ActivityPreview'\r\n\r\n\r\nexport function ActivityBoard(props) {\r\n\r\n    return (\r\n        <section className=\"activity-container\">\r\n            <p className=\"menu-item menu-activity\">Activity Log</p>\r\n            <ul className=\"activity-list\">\r\n                {props.activities.map(activity =>\r\n                    <ActivityPreview key={activity.id} activity={activity} />\r\n                )}\r\n            </ul>\r\n        </section>\r\n    )\r\n}","import { Pie } from 'react-chartjs-2';\r\n\r\nexport function PieBoard(props) {\r\n    let membersTasks = {}\r\n    props.board.groups.forEach(group => {\r\n        group.cards.forEach(card => {\r\n            card?.members.forEach(member => {\r\n                if (membersTasks[member.fullname]) membersTasks[member.fullname]++\r\n                else membersTasks = { ...membersTasks, [member.fullname]: 1 }\r\n            })\r\n\r\n        })\r\n    })\r\n\r\n\r\n\r\n    const data = {\r\n        labels: Object.keys(membersTasks),\r\n        datasets: [{\r\n            data: Object.values(membersTasks),\r\n            backgroundColor: [\r\n                '#FF6384',\r\n                '#36A2EB',\r\n                '#FFCE56'\r\n            ],\r\n            hoverBackgroundColor: [\r\n                '#FF6384',\r\n                '#36A2EB',\r\n                '#FFCE56'\r\n            ]\r\n\r\n        }]\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <Pie data={data} options={{ title: { display: true, text: 'members statistics' } }} />\r\n        </section>\r\n    )\r\n}\r\n","import { Bar } from 'react-chartjs-2';\r\n\r\nexport function BarBoard(props) {\r\n    let todos = 0\r\n    let complited = 0\r\n    let uncomplited = 0\r\n    props.board.groups.forEach(group => {\r\n        group.cards?.forEach(card => {\r\n            card.checklists.forEach(checklist => {\r\n                checklist.todos.forEach(todo => {\r\n                    todos++\r\n                    if (todo.isDone) complited++\r\n                    else uncomplited++\r\n                })\r\n            })\r\n        })\r\n    })\r\n\r\n    const myData = {\r\n        labels: ['All', 'In Progress', 'Done'],\r\n        datasets: [{\r\n            label: 'tasks',\r\n            data: [todos, complited, uncomplited],\r\n            backgroundColor: [\r\n                '#FF6384',\r\n                '#36A2EB',\r\n                '#FFCE56'\r\n            ],\r\n            hoverBackgroundColor: [\r\n                '#FF6384',\r\n                '#36A2EB',\r\n                '#FFCE56'\r\n            ]\r\n\r\n        }]\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <Bar data={myData} options={{ title: { display: true, text: 'tasks statistics' }, legend: { display: false } }} />\r\n        </section>\r\n    )\r\n}\r\n","import { Line } from 'react-chartjs-2';\r\n\r\nexport function LineBoard(props) {\r\n    console.log(props.board);\r\n    let membersActivities = {}\r\n    props.board.activities.forEach(activity => {\r\n        if (membersActivities[activity.byMember.fullname]) membersActivities[activity.byMember.fullname]++\r\n        else membersActivities = { ...membersActivities, [activity.byMember.fullname]: 1 }\r\n    })\r\n    console.log(membersActivities);\r\n\r\n\r\n    const myData = {\r\n        labels: Object.keys(membersActivities),\r\n        datasets: [{\r\n            data: Object.values(membersActivities),\r\n            backgroundColor: [\r\n                // '#FF6384',\r\n                // '#36A2EB',\r\n                '#FFCE56'\r\n            ],\r\n            hoverBackgroundColor: [\r\n                // '#FF6384',\r\n                // '#36A2EB',\r\n                '#FFCE56'\r\n            ]\r\n\r\n        }]\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <Line\r\n                data={myData} options={{ title: { display: true, text: 'Activities In The Board' }, legend: { display: false } }}\r\n\r\n            />\r\n        </section>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { PieBoard } from './PieBoard'\r\nimport { BarBoard } from './BarBoard'\r\nimport { LineBoard } from './LineBoard'\r\n\r\n\r\nclass _Dashboard extends Component {\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <section className=\"dashboard side-menu-sub-item\">\r\n                <header>\r\n                    <h1>Board Statistics</h1>\r\n                    <button className=\"close-menu\" onClick={this.props.toggleDashboard}>x</button>\r\n                </header>\r\n                <main className=\"menu-container\">\r\n                    <PieBoard board={this.props.selectedBoard} />\r\n                    <BarBoard board={this.props.selectedBoard} />\r\n                    <LineBoard board={this.props.selectedBoard} />\r\n                </main>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard,\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(_Dashboard)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { AboutBoard } from '../boardMenu/AboutBoard'\r\nimport { ChangeBoardBackground } from '../boardMenu/ChangeBoardBackground'\r\nimport { RemoveBoard } from '../boardMenu/RemoveBoard'\r\nimport { ActivityBoard } from '../boardMenu/ActivityBoard'\r\nimport { Dashboard } from '../dashboard/Dashboard'\r\n\r\nclass _BoardSideMenu extends Component {\r\n    state = {\r\n        isAboutBoardShown: false,\r\n        isChangeBackgroundShown: false,\r\n        isBoardAnalysisShown: false,\r\n        isDeleteBoardShown: false,\r\n        isDashboardShown: false\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n    }\r\n\r\n    toggleAboutBoard = () => {\r\n        this.setState({ isAboutBoardShown: !this.state.isAboutBoardShown })\r\n    }\r\n    toggleChangeBackground = () => {\r\n        this.setState({ isChangeBackgroundShown: !this.state.isChangeBackgroundShown })\r\n    }\r\n    toggleBoardAnalysis = () => {\r\n        this.setState({ isBoardAnalysisShown: !this.state.isBoardAnalysisShown })\r\n    }\r\n    toggleDeleteBoard = () => {\r\n        this.setState({ isDeleteBoardShown: !this.state.isDeleteBoardShown })\r\n    }\r\n    toggleDashboard = () => {\r\n        this.setState({ isDashboardShown: !this.state.isDashboardShown })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { isAboutBoardShown, isDashboardShown } = this.state\r\n        const { isChangeBackgroundShown } = this.state\r\n        const { isBoardAnalysisShown } = this.state\r\n        const { isDeleteBoardShown } = this.state\r\n        const { selectedBoard, classname } = this.props\r\n        const open = (classname) ? 'open' : ''\r\n\r\n        return (\r\n            <section className={`board-side-menu ${open}`}>\r\n                <header className=\"menu-header\">\r\n                    <h1>Menu</h1>\r\n                    <button className=\"close-menu\" onClick={this.props.toggleSideMenu}>X</button>\r\n                </header>\r\n                {/* <div className=\"hr\"></div> */}\r\n\r\n                <div className=\"menu-container\">\r\n                    {(!isAboutBoardShown) ? <div className=\"menu-item\" onClick={this.toggleAboutBoard}> <p className=\"menu-about\"> About this board</p></div> : <AboutBoard toggleAboutBoard={this.toggleAboutBoard} board={selectedBoard} />}\r\n                    {(!isChangeBackgroundShown) ? <p className=\"menu-item menu-background\" onClick={this.toggleChangeBackground}> Change Background</p> : <ChangeBoardBackground toggleChangeBackground={this.toggleChangeBackground} />}\r\n                    {/* {(isBoardAnalysisShown) && <p className=\"board-analysis\" onClick={this.isBoardAnalysisShown}>Board Analysis</p>} */}\r\n                    {(!isDashboardShown) ? <p className=\"menu-dashboard menu-item\" onClick={this.toggleDashboard}>Board Analysis</p> : <Dashboard toggleDashboard={this.toggleDashboard} />}\r\n                    {/* {(!isDeleteBoardShown) ? <p className=\"delete-board\" onClick={this.toggleDeleteBoard}> Delete Board</p> : <RemoveBoard toggleDeleteBoard={this.toggleDeleteBoard} board={selectedBoard} />} */}\r\n                    <hr />\r\n                    {selectedBoard.activities && <ActivityBoard activities={selectedBoard.activities} />}\r\n                </div>\r\n\r\n            </section>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport const BoardSideMenu = connect(mapStateToProps, mapDispatchToProps)(_BoardSideMenu)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\nimport { filterByCardText } from '../../store/actions/boardActions.js'\r\n\r\n// TODO TO FIX AFTER BACKEND\r\nclass _BoardFilter extends Component {\r\n    state = {\r\n        filterBy: {\r\n            title: ''\r\n        },\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const callback = () => {\r\n            this.props.filterByCardText(this.props.selectedBoard._id, this.state.filterBy);\r\n        };\r\n\r\n        const filterBy = { ...this.state.filterBy }\r\n        filterBy[ev.target.name] = ev.target.value;\r\n\r\n        this.setState({ filterBy }, callback);\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n    \r\n        return (\r\n            <input type=\"text\" name=\"title\"\r\n                value={this.state.filterBy.title}\r\n                // placeholder=\"Search in development\"\r\n                autoComplete=\"off\"\r\n                onChange={this.handleChange} className=\"header-filter\" />\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard,\r\n       \r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    filterByCardText\r\n}\r\n\r\nexport const BoardFilter = connect(mapStateToProps, mapDispatchToProps)(_BoardFilter)","import { Link } from 'react-router-dom'\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BoardFilter } from './board/BoardFilter'\r\n\r\n\r\nclass _AppHeader extends Component {\r\n\r\n    state = {\r\n        userImgStyle: {\r\n            backgroundImage: \"url(https://res.cloudinary.com/ddgevj2yp/image/upload/v1610989052/avatar-1_kbr5un.jpg\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.loggedInUser) return\r\n        const userImgUrl = this.props.loggedInUser.imgUrl\r\n        let userImgStyle = {\r\n            backgroundImage: `url(${userImgUrl})`\r\n        }\r\n        this.setState({ userImgStyle })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { selectedBoard, toggleSideMenu } = this.props\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"main-header\">\r\n                    <header className=\"app-header flex space-between align-center\">\r\n                        <nav>\r\n                            <Link to=\"/\" className=\"header-home\"></Link>\r\n                            <Link to=\"/board\" className=\"header-board\"> Boards </Link>\r\n                            <span className=\" normal-media\">\r\n                                <label>\r\n                                    {/* <input className=\"header-filter\"></input> */}\r\n                                    <BoardFilter />\r\n                                </label>\r\n                            </span>\r\n                        </nav>\r\n                        <h3 className=\"header-logo\">TASX</h3>\r\n\r\n                        <nav className=\"navbar-links flex space-between align-center\">\r\n                            <button className=\"header-about-us normal-media\"> About Us</button>\r\n                            <span className=\"user-img\" style={this.state.userImgStyle}></span>\r\n                        </nav>\r\n                        {/* <button className=\"user-avatar\">HS</button> */}\r\n                    </header>\r\n                    <header className=\"narrow-media app-header flex space-between align-center\">\r\n                        <span>\r\n                            <label>\r\n                                {/* <input className=\"header-filter\"></input> */}\r\n                                <BoardFilter />\r\n                            </label>\r\n                        </span>\r\n                        <button className=\"header-about-us\"> About Us</button>\r\n\r\n                    </header>\r\n                    <header className=\"app-header board-header flex space-between align-center\">\r\n                        <nav>\r\n                            <h5>{selectedBoard.title}</h5>\r\n                        </nav>\r\n\r\n                        <nav className=\"navbar-links  \">\r\n                            <button className=\"header-invite\"> Invite</button>\r\n                            <button className=\"header-show-menu\" onClick={toggleSideMenu}> Show Menu</button>\r\n\r\n                        </nav>\r\n                        {/* <button className=\"user-avatar\">HS</button> */}\r\n\r\n                    </header>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard,\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport const AppHeader = connect(mapStateToProps, mapDispatchToProps)(_AppHeader)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { GroupList } from '../cmps/group/GroupList'\r\nimport { BoardSideMenu } from '../cmps/board/BoardSideMenu'\r\nimport { socketService } from '../services/socketService'\r\nimport { loadBoard, updateBoard, updateBoardAfterSocket } from '../store/actions/boardActions.js'\r\nimport { AppHeader } from '../cmps/AppHeader'\r\n\r\n\r\nclass _Board extends Component {\r\n    state = {\r\n        board: {},\r\n        isBoardMenuShown: false,\r\n        filterBy: {\r\n            title: ''\r\n        }\r\n\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const boardId = this.props.match.params.id\r\n        socketService.setup()\r\n        await this.props.loadBoard(boardId)\r\n        socketService.emit('join board', boardId)\r\n        socketService.on('update board', this.onChangeBoard)\r\n\r\n\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        socketService.off('update board', this.onChangeBoard)\r\n        socketService.terminate()\r\n\r\n    }\r\n\r\n\r\n\r\n    onDragEnd = (result) => {\r\n        // console.log('on drag result', result)\r\n        const { destination, source, draggableId, type } = result\r\n        if (!destination) return\r\n        if (destination.droppableId === source.droppableId && destination.index === source.index) {\r\n            return\r\n        }\r\n        if (type === 'group') {\r\n            this.onDragGroups(source.index, destination.index)\r\n        }\r\n        if (type === 'card') {\r\n            this.onDragCards(destination, source, draggableId)\r\n        }\r\n    }\r\n\r\n    onChangeBoard = async (board) => {\r\n        // console.log('on change board', board)\r\n        await this.props.updateBoardAfterSocket(board)\r\n    }\r\n\r\n    // per react beautiful dnd after performing optimistic update to let server know that a reorder has occurred\r\n    onDragGroups = async (startIndex, endIndex) => {\r\n        // console.log('I am in groups')\r\n        let boardToUpdate = this.props.selectedBoard\r\n        const groupToMove = boardToUpdate.groups.splice(startIndex, 1)\r\n        boardToUpdate.groups.splice(endIndex, 0, groupToMove[0])\r\n        await this.props.updateBoard(this.props.selectedBoard)\r\n\r\n    }\r\n\r\n    onDragCards = async (destination, source) => {\r\n        let boardToUpdate = this.props.selectedBoard\r\n        const groupToMoveFromIdx = boardToUpdate.groups.findIndex(group => group.id === source.droppableId)\r\n        const groupToMoveToIdx = boardToUpdate.groups.findIndex(group => group.id === destination.droppableId)\r\n        const cardToMove = boardToUpdate.groups[groupToMoveFromIdx].cards.splice(source.index, 1)\r\n        boardToUpdate.groups[groupToMoveToIdx].cards.splice(destination.index, 0, cardToMove[0])\r\n        // console.log('i am in this on drag cards')\r\n        await this.props.updateBoard(this.props.selectedBoard)\r\n\r\n    }\r\n\r\n\r\n\r\n    toggleSideMenu = () => {\r\n        this.setState({ isBoardMenuShown: !this.state.isBoardMenuShown })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { selectedBoard } = this.props\r\n        const { isBoardMenuShown } = this.state\r\n\r\n        if (!selectedBoard) return <div>Loading...</div>\r\n        // console.log('BBB', selectedBoard.style.bgurl)\r\n        const style = {\r\n            boardStyle: { ...selectedBoard.style }\r\n        }\r\n        return (\r\n            <section className=\"board-wraper\"\r\n                style={{\r\n                    backgroundImage: \"url(\" + `${style.boardStyle.bgurl}` + \")\",\r\n                    backgroundPosition: \"center\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundRepeat: \"no-repeat\"\r\n                }}>\r\n                <AppHeader toggleSideMenu={this.toggleSideMenu} />\r\n                {/* <BoardHeader board={selectedBoard} toggleSideMenu={this.toggleSideMenu} /> */}\r\n                {/* <div className=\"board-title\"> {selectedBoard.title}</div> */}\r\n                <nav>\r\n                    {/* <BoardFilter /> */}\r\n                    {/* <button onClick={this.toggleSideMenu}>Side Menu In Development</button> */}\r\n                </nav>\r\n                <BoardSideMenu classname={isBoardMenuShown} toggleSideMenu={this.toggleSideMenu} />\r\n                {selectedBoard.groups && <GroupList groups={selectedBoard.groups} boardId={selectedBoard._id} onDragEnd={this.onDragEnd} />}\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard,\r\n        filterBy: state.boardModule.filterBy,\r\n        users: state.userModule.users,\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoard,\r\n    updateBoard,\r\n    updateBoardAfterSocket,\r\n\r\n}\r\n\r\nexport const Board = connect(mapStateToProps, mapDispatchToProps)(_Board)\r\n","import { Link } from 'react-router-dom'\r\n\r\n\r\nexport function BoardPreview(props) {\r\n    const { board } = props\r\n    const style = { boardStyle: { ...board.style } }\r\n\r\n    return (\r\n        <li className=\"board-preview\"\r\n            style={{ backgroundImage: `url(${style.boardStyle.bgurl})` }}>\r\n            <Link to={`/board/${board._id}`}>\r\n                <p>{board.title}</p>\r\n            </Link>\r\n        </li>\r\n    )\r\n}","import { BoardPreview } from './BoardPreview.jsx'\r\n\r\nexport function BoardList(props) {\r\n    const boardsForDisplay = props.boards.slice(0, 6)\r\n\r\n    return (\r\n        <ul className=\"board-list inline-block\">\r\n            { boardsForDisplay.map(board =>\r\n                <BoardPreview board={board} key={board._id} className=\"board\" />\r\n            )}\r\n            {/* <li onClick={props.toggleNewBoard} className=\"add-board-btn\">Add board</li> */}\r\n        </ul>\r\n    )\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { createBoard } from '../../store/actions/boardActions.js'\r\n\r\nexport class _AddBoard extends Component {\r\n\r\n    state = {\r\n        title: '',\r\n        bgurl: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const value = ev.target.value\r\n        const field = ev.target.name\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n    onChooseBackground = (bgUrl) => {\r\n        const callback = () => {\r\n            this.onSubmit();\r\n        };\r\n        this.setState({ bgurl: bgUrl }, callback)\r\n    }\r\n\r\n    onSubmit = async () => {\r\n        // ev.preventDefault()\r\n        if (!this.state.title) return\r\n        const board = await this.props.createBoard(this.state.title, this.state.bgurl)\r\n        this.props.onLoadNewBoard(board._id)\r\n    }\r\n\r\n    onCancelAdd = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.toggleNewBoard()\r\n    }\r\n\r\n    stopPropagation = (ev) => {\r\n        ev.stopPropagation()\r\n    }\r\n\r\n    render() {\r\n        const backgroundImages = [\r\n            {\r\n                id: 'bg101',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2020/04/11/18/24/star-5031540_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg102',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2016/11/29/08/00/abstract-1868269_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg103',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2019/03/23/20/54/bamboo-4076262_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg104',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2013/07/21/13/00/rose-165819_1280.jpg\"\r\n\r\n            },\r\n            {\r\n                id: 'bg105',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2014/09/14/18/04/dandelion-445228_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg106',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2017/05/11/11/15/workplace-2303851_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg107',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2016/02/19/11/33/backround-1209772_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg108',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2017/08/15/15/37/pen-2644392_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg109',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2018/01/11/21/27/laptop-3076957_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg110',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2018/05/31/13/13/rain-3443977_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg111',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2014/04/05/11/38/bokeh-316425_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg112',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2013/07/25/13/01/stones-167089_1280.jpg\"\r\n            }\r\n\r\n        ]\r\n        return (\r\n            <div className=\"screen\" onClick={this.onCancelAdd}>\r\n                <div className=\"add-board\" onSubmit={this.onSubmit} onClick={this.stopPropagation}>\r\n                    <input placeholder=\"Enter a title for your new board...\" type=\"text\" onChange={this.handleChange} value={this.state.title} name=\"title\" autoComplete=\"off\" required />\r\n                    <section className=\"add-board-backgrounds\">\r\n                        <h3>Enter a title, Choose a background - and get started!</h3>\r\n                        {backgroundImages.map(background => {\r\n                            return (\r\n                                <div className=\"backgrounds-tumbs\" key={background.id}\r\n                                    style={{ backgroundImage: `url(${background.bgurl})` }}\r\n                                    onClick={() => this.onChooseBackground(background.bgurl)}>\r\n                                    <div className=\"plus\">+</div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </section>\r\n                    {/* <button className=\"save-btn\">+ Add Board</button>\r\n                    <button className=\"cancel-btn\" onClick={this.onCancelAdd}>X Cancel</button> */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    createBoard\r\n\r\n};\r\n\r\nexport const AddBoard = connect(mapStateToProps, mapDispatchToProps)(_AddBoard);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BoardList } from '../cmps/board/BoardList'\r\nimport { AddBoard } from '../cmps/board/AddBoard'\r\nimport { loadBoards } from '../store/actions/boardActions.js'\r\nimport { HomeHeader } from '../cmps/HomeHeader'\r\n// import Button from '@material-ui/core/Button';\r\n// import Icon from '@material-ui/core/Icon';\r\n\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _Boards extends Component {\r\n    state = {\r\n        isNewBoard: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadBoards({ userId: '6004748cf9fd65ff47dc81e4' })\r\n    }\r\n\r\n    toggleNewBoard = () => {\r\n        // console.log('I am in new board')\r\n        this.setState({ isNewBoard: !this.state.isNewBoard })\r\n    }\r\n\r\n\r\n\r\n    onLoadNewBoard = (boardId) => {\r\n        this.toggleNewBoard()\r\n        this.props.history.push(`/board/${boardId}`)\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <React.Fragment>\r\n                <HomeHeader loggedInUser={this.props.loggedInUser} />\r\n\r\n                <div className=\"boards\">\r\n                    {/* <div className=\"board-get-started-container\"> */}\r\n                    <h1>TASX</h1>\r\n                    <h2>Get on Board</h2>\r\n                    <hr/>\r\n\r\n                    <img className=\"boards-image\" src=\"https://res.cloudinary.com/ddgevj2yp/image/upload/v1611390965/faces1_tvpwft.png\" alt=\"\" />\r\n\r\n                    {/* <section>\r\n                        <h2>templates boards</h2>\r\n                    </section> */}\r\n                    <hr/>\r\n                    <section>\r\n                        <h3>Yours boards</h3>\r\n                        <div className=\"your-boards\">\r\n                            <BoardList boards={this.props.boards} toggleNewBoard={this.toggleNewBoard} />\r\n                            <button onClick={this.toggleNewBoard}> + Add board</button>\r\n                        </div>\r\n                    </section>\r\n                    {this.state.isNewBoard && <AddBoard toggleNewBoard={this.toggleNewBoard} onLoadNewBoard={this.onLoadNewBoard} />}\r\n                    {/* </div> */}\r\n                </div >\r\n\r\n                {/* <div className=\"user-boards-container\">\r\n          <BoardList boards={this.props.boards} />\r\n          \r\n        </div> */}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardModule.boards,\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    // loadBoard,\r\n    //createBoard\r\n}\r\n\r\nexport const Boards = connect(mapStateToProps, mapDispatchToProps)(_Boards)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { HomeHeader } from '../cmps/HomeHeader'\r\n\r\nimport {\r\n  loadUsers,\r\n  removeUser,\r\n  login,\r\n  logout,\r\n  signup\r\n} from '../store/actions/userActions'\r\n\r\nclass _LoginSignup extends Component {\r\n  state = {\r\n    msg: '',\r\n    loginCred: {\r\n      username: '',\r\n      password: ''\r\n    },\r\n    signupCred: {\r\n      username: '',\r\n      password: '',\r\n      fullname: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.loadUsers()\r\n  }\r\n\r\n  loginHandleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState(prevState => ({\r\n      loginCred: {\r\n        ...prevState.loginCred,\r\n        [name]: value\r\n      }\r\n    }))\r\n  }\r\n\r\n  signupHandleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState(prevState => ({\r\n      signupCred: {\r\n        ...prevState.signupCred,\r\n        [name]: value\r\n      }\r\n    }))\r\n  }\r\n\r\n  doLogin = async ev => {\r\n    ev.preventDefault()\r\n    const { username, password } = this.state.loginCred\r\n    if (!username) {\r\n      return this.setState({ msg: 'Please enter user/password' })\r\n    }\r\n    const userCreds = { username, password }\r\n    try {\r\n      this.props.login(userCreds)\r\n      this.setState({ loginCred: { username: '', password: '' } })\r\n    } catch (err) {\r\n      this.setState({ msg: 'Login failed, try again.' })\r\n    }\r\n  }\r\n\r\n  doSignup = async ev => {\r\n    ev.preventDefault()\r\n    const { username, password, fullname } = this.state.signupCred\r\n    if (!username || !password || !fullname) {\r\n      return this.setState({ msg: 'All inputs are required' })\r\n    }\r\n    const signupCreds = { username, password, fullname }\r\n    this.props.signup(signupCreds)\r\n    this.setState({ signupCred: { username: '', password: '', fullname: '' } })\r\n  }\r\n\r\n  removeUser = userId => {\r\n    this.props.removeUser(userId)\r\n  }\r\n  render() {\r\n    let signupSection = (\r\n      <form className=\"frm\" onSubmit={this.doSignup}>\r\n        <h2>Signup</h2>\r\n        <input\r\n          type=\"text\"\r\n          name=\"fullname\"\r\n          value={this.state.signupCred.fullname}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Full name\"\r\n          autoComplete=\"fullname\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={this.state.signupCred.password}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Password\"\r\n          autoComplete=\"current-password\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={this.state.signupCred.username}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Username\"\r\n          autoComplete=\"username\"\r\n        />\r\n        <br />\r\n        <button>Signup</button>\r\n      </form>\r\n    )\r\n    let loginSection = (\r\n      <form className=\"frm\" onSubmit={this.doLogin}>\r\n        <h2>Login</h2>\r\n        <select\r\n          name=\"username\"\r\n          value={this.state.loginCred.username}\r\n          onChange={this.loginHandleChange}\r\n        >\r\n          <option value=\"\">Select User</option>\r\n          {this.props.users && this.props.users.map(user => <option key={user._id} value={user.username}>{user.fullname}</option>)}\r\n        </select>\r\n\r\n        {/* <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={this.state.loginCred.username}\r\n          onChange={this.loginHandleChange}\r\n          placeholder=\"Username\"\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={this.state.loginCred.password}\r\n          onChange={this.loginHandleChange}\r\n          placeholder=\"Password\"\r\n        />\r\n        <br /> */}\r\n        <button>Login</button>\r\n      </form>\r\n\r\n    )\r\n\r\n    const { loggedInUser } = this.props\r\n    return (\r\n\r\n      <div className=\"login\">\r\n        <HomeHeader />\r\n        <h1>\r\n          TASKX\r\n        </h1>\r\n\r\n        <p>{this.state.msg}</p>\r\n        {loggedInUser && (\r\n          <div>\r\n            <h3>\r\n              Welcome {loggedInUser.fullname}\r\n              <button onClick={this.props.logout}>Logout</button>\r\n            </h3>\r\n          </div>\r\n        )}\r\n        {!loggedInUser && loginSection}\r\n        {!loggedInUser && signupSection}\r\n\r\n\r\n\r\n\r\n\r\n\r\n        {/* <hr /> */}\r\n        {/* <section className=\"admin\">\r\n          <details>\r\n            <summary>Admin</summary>\r\n            <button onClick={this.props.loadUsers}>Refresh Users</button>\r\n            {this.props.isLoading && 'Loading...'}\r\n            {this.props.users && <ul>\r\n\r\n              {this.props.users.map(user => (\r\n                <li key={user._id}>\r\n                  <pre>{JSON.stringify(user, null, 2)}</pre>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.removeUser(user._id)\r\n                    }}\r\n                  >\r\n                    Remove {user.username}\r\n                  </button>\r\n                </li>\r\n              ))}\r\n            </ul>}\r\n          </details>\r\n        </section> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    users: state.userModule.users,\r\n    loggedInUser: state.userModule.loggedInUser,\r\n    // isLoading: state.systemModule.isLoading\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  login,\r\n  logout,\r\n  signup,\r\n  removeUser,\r\n  loadUsers\r\n}\r\n\r\nexport const LoginSignup = connect(mapStateToProps, mapDispatchToProps)(_LoginSignup)\r\n","import React from 'react'\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport { Home } from './pages/Home'\r\nimport { Board } from './pages/Board'\r\n// import { AppHeader } from './cmps/AppHeader'\r\n// import { AddBoard } from './cmps/board/AddBoard'\r\nimport { Boards } from './pages/Boards'\r\nimport { LoginSignup } from './pages/LoginSignup'\r\n// import { AppHeader } from './cmps/AppHeader'\r\n// import { CardEdit } from './pages/CardEdit'\r\n\r\n\r\n\r\n\r\nexport function App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        {/* <AppHeader /> */}\r\n        <main className=\"main-app\">\r\n          <Switch>\r\n            {/* <Route path=\"/user/:id\" component={UserDetails} /> */}\r\n            {/* <Route path=\"/login\" component={LoginSignup} /> */}\r\n            {/* <Route path=\"/chat\" component={Chat} /> */}\r\n            {/* <Route path=\"/board/:id/card/:cardId\" component={CardEdit} /> */}\r\n            <Route path=\"/board/:id\" component={Board} />\r\n            <Route path=\"/board\" component={Boards} />\r\n            <Route path=\"/login\" component={LoginSignup} />\r\n            <Route path=\"/\" component={Home} />\r\n          </Switch>\r\n        </main>\r\n        <footer>\r\n\r\n        </footer>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const initialState = {\r\n  boards: [],\r\n  selectedBoard: {},\r\n  filterBy: {}\r\n}\r\n\r\nexport function boardReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_BOARDS':\r\n      return { ...state, boards: action.boards }\r\n    case 'SET_BOARD':\r\n      return { ...state, selectedBoard: action.board }\r\n    case 'SET_FILTER':\r\n      return { ...state, filterBy: action.filterBy }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","let localLoggedinUser = null\r\nif (sessionStorage.loggedinUser) localLoggedinUser = JSON.parse(sessionStorage.loggedinUser)\r\n\r\nconst initialState = {\r\n  loggedInUser: localLoggedinUser,\r\n  users: []\r\n}\r\n\r\nexport function userReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return { ...state, loggedInUser: action.user }\r\n    case 'REMOVE_USER':\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user._id !== action.userId)\r\n      }\r\n    case 'SET_USERS':\r\n      return { ...state, users: action.users }\r\n    case 'SET_SCORE':\r\n      return { ...state, loggedInUser: { ...state.loggedInUser, score: action.score } }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","const initialState = {\r\n  isLoading: false\r\n};\r\n\r\nexport function systemReducer (state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true }\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false }\r\n    default: return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { boardReducer } from './boardReducer'\r\nimport { userReducer } from './userReducer'\r\nimport { systemReducer } from './systemReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n  systemModule: systemReducer,\r\n  boardModule: boardReducer,\r\n  userModule: userReducer\r\n})\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\n\r\nimport thunk from 'redux-thunk'\r\nimport { rootReducer } from './reducers'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n)\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport { App } from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport './assets/styles/main.scss'\r\nimport { store } from './store/store'\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}