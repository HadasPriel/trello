[{"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\index.js":"1","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\serviceWorkerRegistration.js":"3","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\store\\store.js":"4","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\App.jsx":"5","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\pages\\CardEdit.jsx":"6","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\pages\\Board.jsx":"7","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\pages\\Home.jsx":"8","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\store\\reducers\\index.js":"9","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\store\\actions\\boardActions.js":"10","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\store\\reducers\\boardReducer.js":"11","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\board\\BoardList.jsx":"12","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\services\\boardService.js":"13","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\board\\BoardPreview.jsx":"14","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\services\\httpService.js":"15","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\group\\GroupList.jsx":"16","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\group\\GroupPreview.jsx":"17","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\card\\CardList.jsx":"18","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\card\\CardPreview.jsx":"19","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\group\\AddNewGroup.jsx":"20","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\services\\utilService.js":"21","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\LabelPalette.jsx":"22","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\AddChecklistBar.jsx":"23","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\CardEditNav.jsx":"24","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\CardLabelShow.jsx":"25","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\CardChecklistShow.jsx":"26","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\group\\EditGroupTitle.jsx":"27","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\group\\AddCard.jsx":"28","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\AppHeader.jsx":"29","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\AddCoverBar.jsx":"30","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\TodoListShow.jsx":"31","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\TodoShow.jsx":"32"},{"size":935,"mtime":1610537162161,"results":"33","hashOfConfig":"34"},{"size":377,"mtime":1610537162179,"results":"35","hashOfConfig":"34"},{"size":5201,"mtime":1610537162180,"results":"36","hashOfConfig":"34"},{"size":323,"mtime":1610537162220,"results":"37","hashOfConfig":"34"},{"size":933,"mtime":1610636062257,"results":"38","hashOfConfig":"34"},{"size":4970,"mtime":1610636062277,"results":"39","hashOfConfig":"34"},{"size":1124,"mtime":1610566278977,"results":"40","hashOfConfig":"34"},{"size":1311,"mtime":1610608253588,"results":"41","hashOfConfig":"34"},{"size":335,"mtime":1610537162207,"results":"42","hashOfConfig":"34"},{"size":3715,"mtime":1610633152347,"results":"43","hashOfConfig":"34"},{"size":778,"mtime":1610538387938,"results":"44","hashOfConfig":"34"},{"size":352,"mtime":1610537162159,"results":"45","hashOfConfig":"34"},{"size":1693,"mtime":1610634708902,"results":"46","hashOfConfig":"34"},{"size":323,"mtime":1610608253583,"results":"47","hashOfConfig":"34"},{"size":1077,"mtime":1610537162181,"results":"48","hashOfConfig":"34"},{"size":518,"mtime":1610561480601,"results":"49","hashOfConfig":"34"},{"size":1944,"mtime":1610632731558,"results":"50","hashOfConfig":"34"},{"size":351,"mtime":1610622070675,"results":"51","hashOfConfig":"34"},{"size":965,"mtime":1610633239840,"results":"52","hashOfConfig":"34"},{"size":1458,"mtime":1610639266420,"results":"53","hashOfConfig":"34"},{"size":681,"mtime":1610537162200,"results":"54","hashOfConfig":"34"},{"size":1762,"mtime":1610623651282,"results":"55","hashOfConfig":"34"},{"size":1557,"mtime":1610636062262,"results":"56","hashOfConfig":"34"},{"size":421,"mtime":1610636062272,"results":"57","hashOfConfig":"34"},{"size":1104,"mtime":1610623651281,"results":"58","hashOfConfig":"34"},{"size":3740,"mtime":1610636062270,"results":"59","hashOfConfig":"34"},{"size":1484,"mtime":1610640867317,"results":"60","hashOfConfig":"34"},{"size":1558,"mtime":1610639250772,"results":"61","hashOfConfig":"34"},{"size":539,"mtime":1610636062261,"results":"62","hashOfConfig":"34"},{"size":1819,"mtime":1610636062265,"results":"63","hashOfConfig":"34"},{"size":445,"mtime":1610636062273,"results":"64","hashOfConfig":"34"},{"size":1625,"mtime":1610636062273,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"165o9cq",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\index.js",[],["132","133"],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\store\\store.js",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\App.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\pages\\CardEdit.jsx",["134"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n// import { socketService } from '../services/socketService'\r\nimport { loadBoard, updateBoard } from '../store/actions/boardActions.js'\r\nimport { CardEditNav } from '../cmps/cardEdit/CardEditNav'\r\nimport { LabelPalette } from '../cmps/cardEdit/LabelPalette'\r\nimport { AddChecklistBar } from '../cmps/cardEdit/AddChecklistBar'\r\nimport { AddCoverBar } from '../cmps/cardEdit/AddCoverBar'\r\nimport { CardLabelShow } from '../cmps/cardEdit/CardLabelShow'\r\nimport { CardChecklistShow } from '../cmps/cardEdit/CardChecklistShow'\r\n\r\nclass _CardEdit extends Component {\r\n    state = {\r\n        board: null,\r\n        groupId: null,\r\n        card: null,\r\n        isLabelPaletteShowing: false,\r\n        isAddChecklistShowing: false,\r\n        isCoverShowing: false\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.loadCard()\r\n    }\r\n\r\n    loadCard = async () => {\r\n        const boardId = this.props.match.params.id\r\n        const groupId = 'g101' // todo: change to props\r\n        const cardId = this.props.match.params.cardId\r\n        try {\r\n            await this.props.loadBoard(boardId)\r\n            const groups = this.props.selectedBoard.groups\r\n            const group = groups.find(group => group.id === groupId)\r\n            const card = group.cards.find(currCard => currCard.id === cardId)\r\n            this.setState({ board: this.props.selectedBoard, groupId, card })\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    updateCard = async (cardToSave) => {\r\n        const boardToSave = { ...this.state.board }\r\n        const groupToSave = boardToSave.groups.find(group => group.id === this.state.groupId)\r\n        const cardsToSave = groupToSave.cards.map(card => {\r\n            if (card.id === cardToSave.id) return cardToSave\r\n            else return card\r\n        })\r\n        groupToSave.cards = cardsToSave\r\n        const groupsToSave = boardToSave.groups.map(group => {\r\n            if (group.id === groupToSave.id) return groupToSave\r\n            else return group\r\n        })\r\n        boardToSave.groups = groupsToSave\r\n        // console.log('boardToSave', boardToSave)\r\n\r\n        try {\r\n            await updateBoard(boardToSave)\r\n            this.loadCard()\r\n\r\n        } catch (err) {\r\n            console.log('BoardActions: err in loadBoard', err)\r\n        }\r\n    }\r\n\r\n    toggleLabelPalette = () => {\r\n        this.setState({ isLabelPaletteShowing: !this.state.isLabelPaletteShowing })\r\n    }\r\n    toggleChecklistBar = () => {\r\n        this.setState({ isAddChecklistShowing: !this.state.isAddChecklistShowing })\r\n    }\r\n    toggleCoverBar = () => {\r\n        this.setState({ isCoverShowing: !this.state.isCoverShowing })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { card } = this.state\r\n        const isLabels = (card && card.labels && card.labels.length > 0)\r\n        const isChecklists = (card && card.checklists && card.checklists.length > 0)\r\n        if (!card) return <div>Loading...</div>\r\n        return (\r\n            <section className=\"card-edit\">\r\n                <main>\r\n                    <h1>{card.title}</h1>\r\n                    <div>{isLabels && <div> <h3>Labels: </h3><CardLabelShow labels={card.labels} card={card} updateCard={this.updateCard} /></div>}</div>\r\n                    <h3>Description: </h3>\r\n                    <p>{card.description && ''}</p>\r\n                    <div>{isChecklists && <div> <h3>Checklists: </h3><CardChecklistShow checklists={card.checklists} card={card} updateCard={this.updateCard} /></div>}</div>\r\n                </main>\r\n                <CardEditNav card={card} toggleLabelPalette={this.toggleLabelPalette} toggleChecklistBar={this.toggleChecklistBar} toggleCoverBar={this.toggleCoverBar} />\r\n                {this.state.isLabelPaletteShowing && <LabelPalette card={card} updateCard={this.updateCard} />}\r\n                {this.state.isAddChecklistShowing && <AddChecklistBar card={card} updateCard={this.updateCard} />}\r\n                {this.state.isCoverShowing && <AddCoverBar card={card} updateCard={this.updateCard} />}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoard\r\n    // updateBoard\r\n}\r\n\r\nexport const CardEdit = connect(mapStateToProps, mapDispatchToProps)(_CardEdit)\r\n\r\n\r\n\r\n\r\n\r\n{/* <aside className=\"card-details-sidebar\" ref={this.ref}>\r\n<CardSidebar anchorRef={this.ref} \r\naddActivity={this.createActivity} \r\nisUploading={this.state.isUploading} \r\ntoggleCoverSelector={this.toggleCoverSelector} \r\ntoggleUploadDropzone={this.toggleUploadDropzone} \r\ntoggleDisplayMembers={this.toggleDisplayMembers} \r\ndueDate={card.dueDate} \r\ntoggleLabelPallete={this.toggleLabelPalette} \r\nonUpdateDueDate={this.onUpdateDueDate} \r\nonArchiveCard={this.onArchiveCard} \r\nonUpdateChecklists={this.onUpdateChecklists} />\r\n</aside> */}","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\pages\\Board.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\pages\\Home.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\store\\reducers\\index.js",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\store\\actions\\boardActions.js",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\store\\reducers\\boardReducer.js",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\board\\BoardList.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\services\\boardService.js",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\board\\BoardPreview.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\services\\httpService.js",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\group\\GroupList.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\group\\GroupPreview.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\card\\CardList.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\card\\CardPreview.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\group\\AddNewGroup.jsx",["135"],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\services\\utilService.js",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\LabelPalette.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\AddChecklistBar.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\CardEditNav.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\CardLabelShow.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\CardChecklistShow.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\group\\EditGroupTitle.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\group\\AddCard.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\AppHeader.jsx",["136"],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\AddCoverBar.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\TodoListShow.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\TodoShow.jsx",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":114,"column":1,"nodeType":"143","messageId":"144","endLine":126,"endColumn":13},{"ruleId":"145","severity":1,"message":"146","line":4,"column":8,"nodeType":"147","messageId":"148","endLine":4,"endColumn":12},{"ruleId":"145","severity":1,"message":"149","line":1,"column":10,"nodeType":"147","messageId":"148","endLine":1,"endColumn":17},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-unused-vars","'Icon' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","no-global-assign","no-unsafe-negation"]