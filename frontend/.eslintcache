[{"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/index.js":"1","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/serviceWorkerRegistration.js":"2","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/reportWebVitals.js":"3","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/store/store.js":"4","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/App.jsx":"5","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/pages/Home.jsx":"6","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/pages/Board.jsx":"7","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/pages/CardEdit.jsx":"8","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/store/reducers/index.js":"9","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/store/actions/boardActions.js":"10","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/store/reducers/boardReducer.js":"11","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/board/BoardList.jsx":"12","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/services/boardService.js":"13","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/board/BoardPreview.jsx":"14","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/services/httpService.js":"15","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/group/GroupList.jsx":"16","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/group/GroupPreview.jsx":"17","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/card/CardList.jsx":"18","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/card/CardPreview.jsx":"19","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/group/AddNewGroup.jsx":"20","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/CardEditNav.jsx":"21","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/AddChecklistBar.jsx":"22","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/CardLabelShow.jsx":"23","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/LabelPalette.jsx":"24","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/CardChecklistShow.jsx":"25","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/services/utilService.js":"26","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/group/EditGroupTitle.jsx":"27","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/AppHeader.jsx":"28","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/group/AddCard.jsx":"29","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/AddCoverBar.jsx":"30","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/TodoListShow.jsx":"31","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/TodoShow.jsx":"32","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/AddDescription.jsx":"33"},{"size":910,"mtime":1610539251000,"results":"34","hashOfConfig":"35"},{"size":5064,"mtime":1610539251000,"results":"36","hashOfConfig":"35"},{"size":364,"mtime":1610539251000,"results":"37","hashOfConfig":"35"},{"size":312,"mtime":1610539251000,"results":"38","hashOfConfig":"35"},{"size":895,"mtime":1610693216000,"results":"39","hashOfConfig":"35"},{"size":1732,"mtime":1610776101000,"results":"40","hashOfConfig":"35"},{"size":3260,"mtime":1610791332000,"results":"41","hashOfConfig":"35"},{"size":5928,"mtime":1610791332000,"results":"42","hashOfConfig":"35"},{"size":325,"mtime":1610539251000,"results":"43","hashOfConfig":"35"},{"size":4372,"mtime":1610791332000,"results":"44","hashOfConfig":"35"},{"size":751,"mtime":1610539251000,"results":"45","hashOfConfig":"35"},{"size":339,"mtime":1610539251000,"results":"46","hashOfConfig":"35"},{"size":1611,"mtime":1610635782000,"results":"47","hashOfConfig":"35"},{"size":516,"mtime":1610783030000,"results":"48","hashOfConfig":"35"},{"size":1035,"mtime":1610539251000,"results":"49","hashOfConfig":"35"},{"size":1002,"mtime":1610791332000,"results":"50","hashOfConfig":"35"},{"size":2443,"mtime":1610791332000,"results":"51","hashOfConfig":"35"},{"size":622,"mtime":1610791332000,"results":"52","hashOfConfig":"35"},{"size":1987,"mtime":1610791332000,"results":"53","hashOfConfig":"35"},{"size":1402,"mtime":1610693217000,"results":"54","hashOfConfig":"35"},{"size":476,"mtime":1610791332000,"results":"55","hashOfConfig":"35"},{"size":1870,"mtime":1610791332000,"results":"56","hashOfConfig":"35"},{"size":1114,"mtime":1610791332000,"results":"57","hashOfConfig":"35"},{"size":1974,"mtime":1610791332000,"results":"58","hashOfConfig":"35"},{"size":3861,"mtime":1610791332000,"results":"59","hashOfConfig":"35"},{"size":655,"mtime":1610539251000,"results":"60","hashOfConfig":"35"},{"size":1432,"mtime":1610693217000,"results":"61","hashOfConfig":"35"},{"size":531,"mtime":1610647537000,"results":"62","hashOfConfig":"35"},{"size":1513,"mtime":1610693217000,"results":"63","hashOfConfig":"35"},{"size":4478,"mtime":1610791332000,"results":"64","hashOfConfig":"35"},{"size":440,"mtime":1610791332000,"results":"65","hashOfConfig":"35"},{"size":1806,"mtime":1610791332000,"results":"66","hashOfConfig":"35"},{"size":1789,"mtime":1610791332000,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"qec4v0",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/index.js",[],["141","142"],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/serviceWorkerRegistration.js",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/reportWebVitals.js",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/store/store.js",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/App.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/pages/Home.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/pages/Board.jsx",["143","144"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { GroupList } from '../cmps/group/GroupList'\n// import { socketService } from '../services/socketService'\nimport { loadBoard } from '../store/actions/boardActions.js'\n\n\nclass _Board extends Component {\n    state = {\n        board: {},\n\n    }\n\n    async componentDidMount() {\n        const boardId = this.props.match.params.id\n        console.log('boardId', boardId)\n        await this.props.loadBoard(boardId)\n\n\n    }\n\n\n\n    render() {\n        const { selectedBoard } = this.props\n        if (!selectedBoard) return <div>Loading...</div>\n        // console.log('BBB', selectedBoard.style.bgurl)\n        const style = {\n            boardStyle: { ...selectedBoard.style }\n        }\n        return (\n            <section className=\"board-wraper\"\n                style={{\n                    backgroundImage: \"url(\" + `${style.boardStyle.bgurl}` + \")\",\n                    backgroundPosition: 'center',\n                    backgroundSize: 'cover',\n                    backgroundRepeat: 'no-repeat'\n                }}>\n\n                <div className=\"board-title\"> {selectedBoard.title}</div>\n                {selectedBoard.groups && <GroupList groups={selectedBoard.groups} boardId={selectedBoard._id} onDragEnd={this.onDragEnd} />}\n            </section>\n\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        selectedBoard: state.boardModule.selectedBoard\n    }\n}\nconst mapDispatchToProps = {\n    loadBoard\n}\n\nexport const Board = connect(mapStateToProps, mapDispatchToProps)(_Board)\n","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/pages/CardEdit.jsx",["145"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\n// import { socketService } from '../services/socketService'\nimport { loadBoard, updateBoard } from '../store/actions/boardActions.js'\nimport { CardEditNav } from '../cmps/cardEdit/CardEditNav'\nimport { LabelPalette } from '../cmps/cardEdit/LabelPalette'\nimport { AddChecklistBar } from '../cmps/cardEdit/AddChecklistBar'\nimport { AddCoverBar } from '../cmps/cardEdit/AddCoverBar'\nimport { CardLabelShow } from '../cmps/cardEdit/CardLabelShow'\nimport { CardChecklistShow } from '../cmps/cardEdit/CardChecklistShow'\n\nclass _CardEdit extends Component {\n    state = {\n        board: null,\n        groupId: null,\n        card: null,\n        isLabelPaletteShowing: false,\n        isAddChecklistShowing: false,\n        isCoverShowing: false\n    }\n\n    async componentDidMount() {\n        this.loadCard()\n    }\n\n    componentDidUpdate(prevprops) {\n        if (this.props.match !== prevprops.match) this.loadCard()\n    }\n\n\n\n\n    loadCard = async () => {\n        const boardId = this.props.match.params.id\n        const groupId = this.props.match.params.groupId\n        const cardId = this.props.match.params.cardId\n        try {\n            await this.props.loadBoard(boardId)\n            const groups = this.props.selectedBoard.groups\n            const group = groups.find(group => group.id === groupId)\n            const card = group.cards.find(currCard => currCard.id === cardId)\n            this.setState({ board: this.props.selectedBoard, groupId, card })\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    updateCard = async (cardToSave) => {\n        const boardToSave = { ...this.state.board }\n        const groupToSave = boardToSave.groups.find(group => group.id === this.state.groupId)\n        const cardsToSave = groupToSave.cards.map(card => {\n            if (card.id === cardToSave.id) return cardToSave\n            else return card\n        })\n        groupToSave.cards = cardsToSave\n        const groupsToSave = boardToSave.groups.map(group => {\n            if (group.id === groupToSave.id) return groupToSave\n            else return group\n        })\n        boardToSave.groups = groupsToSave\n        // console.log('boardToSave', boardToSave)\n\n        try {\n            await updateBoard(boardToSave)\n            this.loadCard()\n\n        } catch (err) {\n            console.log('BoardActions: err in loadBoard', err)\n        }\n    }\n\n    toggleLabelPalette = () => {\n        this.setState({ isLabelPaletteShowing: !this.state.isLabelPaletteShowing })\n    }\n    toggleChecklistBar = () => {\n        this.setState({ isAddChecklistShowing: !this.state.isAddChecklistShowing })\n    }\n    toggleCoverBar = () => {\n        this.setState({ isCoverShowing: !this.state.isCoverShowing })\n    }\n\n\n    render() {\n        const { card } = this.state\n        const isLabels = (card && card.labels && card.labels.length > 0)\n        const isChecklists = (card && card.checklists && card.checklists.length > 0)\n        if (!card) return <div>Loading...</div>\n        return (\n            <section className=\"card-edit\">\n                <Link to={`/board/${this.props.selectedBoard}`}>X</Link>\n                <div className=\"permanent\">\n                    <main>\n                        <h1>{card.title}</h1>\n                        <div>{isLabels && <div> <h3>Labels: </h3><CardLabelShow labels={card.labels} card={card} updateCard={this.updateCard} /></div>}</div>\n                        <h3>Description: </h3>\n                        <p>{card.description && ''}</p>\n                        <div>{isChecklists && <div> <h3>Checklists: </h3><CardChecklistShow checklists={card.checklists} card={card} updateCard={this.updateCard} /></div>}</div>\n                    </main>\n                    <CardEditNav card={card} toggleLabelPalette={this.toggleLabelPalette} toggleChecklistBar={this.toggleChecklistBar} toggleCoverBar={this.toggleCoverBar} />\n                </div>\n                {this.state.isLabelPaletteShowing && <LabelPalette card={card} updateCard={this.updateCard} />}\n                {this.state.isAddChecklistShowing && <AddChecklistBar card={card} updateCard={this.updateCard} />}\n                {this.state.isCoverShowing && <AddCoverBar card={card} updateCard={this.updateCard} />}\n            </section>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        selectedBoard: state.boardModule.selectedBoard\n\n    }\n}\nconst mapDispatchToProps = {\n    loadBoard\n    // updateBoard\n}\n\nexport const CardEdit = connect(mapStateToProps, mapDispatchToProps)(_CardEdit)\n","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/store/reducers/index.js",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/store/actions/boardActions.js",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/store/reducers/boardReducer.js",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/board/BoardList.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/services/boardService.js",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/board/BoardPreview.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/services/httpService.js",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/group/GroupList.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/group/GroupPreview.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/card/CardList.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/card/CardPreview.jsx",["146"],"export function CardPreview(props) {\n    const { card, groupId } = props\n    return (\n        <article className=\"card-preview\">\n            <p>{card.title}</p>\n            {/* <p>This is group ID {groupId}</p> */}\n            \n        </article>\n    )\n}","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/group/AddNewGroup.jsx",["147"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { addGroup } from '../../store/actions/boardActions.js'\nimport Icon from '@material-ui/core/Icon';\n\n\n\nexport class _AddNewGroup extends Component {\n\n    state = {\n        title: ''\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleChange = (ev) => {\n        const value = ev.target.value\n        const field = ev.target.name\n        this.setState({ [field]: value })\n    }\n\n    onSubmit = async (ev) => {\n        ev.preventDefault()\n        if (!this.state.title) return\n        await this.props.addGroup(this.state.title, this.props.selectedBoard)\n\n\n    }\n\n    render() {\n        return (\n            <div className=\"add-new-group\">\n                <form className=\"add-new-wraper\" onSubmit={this.onSubmit} >\n                    <input className=\"add-another-group\" placeholder=\"Add another list\" type=\"text\" onChange={this.handleChange} value={this.state.title} name=\"title\" autoComplete=\"off\"/>\n                    \n                    <button className=\"save-btn\">+ Add List</button>\n               \n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        selectedBoard: state.boardModule.selectedBoard\n    };\n};\n\nconst mapDispatchToProps = {\n    addGroup,\n\n};\n\nexport const AddNewGroup = connect(mapStateToProps, mapDispatchToProps)(_AddNewGroup);","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/CardEditNav.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/AddChecklistBar.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/CardLabelShow.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/LabelPalette.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/CardChecklistShow.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/services/utilService.js",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/group/EditGroupTitle.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/AppHeader.jsx",["148"],"import { NavLink } from 'react-router-dom'\n\n\n\nexport function AppHeader() {\n\n\n    return <nav className=\"app-header\">\n        <h3 className=\"logo-header\">TASK<span>X</span></h3>\n        \n        <ul className=\"navbar-links\">\n            {/* <li><NavLink activeClassName=\"my-active\" exact to=\"/\">Home</NavLink> | </li> */}\n            {/* <li><NavLink to=\"/\">Login</NavLink></li> */}\n            {/* <li><NavLink to=\"/\">Boards</NavLink> | </li> */}\n\n        </ul>\n        <button className=\"user-avatar\">HS</button>\n\n    </nav>;\n}\n\n","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/group/AddCard.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/AddCoverBar.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/TodoListShow.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/TodoShow.jsx",[],["149","150"],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/AddDescription.jsx",[],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":34,"column":45,"nodeType":"157","messageId":"158","endLine":34,"endColumn":46},{"ruleId":"155","severity":1,"message":"156","line":34,"column":75,"nodeType":"157","messageId":"158","endLine":34,"endColumn":76},{"ruleId":"159","severity":1,"message":"160","line":116,"column":1,"nodeType":"161","messageId":"162","endLine":128,"endColumn":13},{"ruleId":"163","severity":1,"message":"164","line":2,"column":19,"nodeType":"165","messageId":"166","endLine":2,"endColumn":26},{"ruleId":"163","severity":1,"message":"167","line":4,"column":8,"nodeType":"165","messageId":"166","endLine":4,"endColumn":12},{"ruleId":"163","severity":1,"message":"168","line":1,"column":10,"nodeType":"165","messageId":"166","endLine":1,"endColumn":17},{"ruleId":"151","replacedBy":"169"},{"ruleId":"153","replacedBy":"170"},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-unused-vars","'groupId' is assigned a value but never used.","Identifier","unusedVar","'Icon' is defined but never used.","'NavLink' is defined but never used.",["171"],["172"],"no-global-assign","no-unsafe-negation"]