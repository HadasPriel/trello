[{"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\index.js":"1","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\serviceWorkerRegistration.js":"3","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\store\\store.js":"4","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\App.jsx":"5","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\store\\reducers\\index.js":"6","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\pages\\Board.jsx":"7","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\AppHeader.jsx":"8","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\pages\\Home.jsx":"9","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\store\\actions\\boardActions.js":"10","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\store\\reducers\\boardReducer.js":"11","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\board\\BoardList.jsx":"12","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\group\\GroupList.jsx":"13","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\services\\boardService.js":"14","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\group\\AddNewGroup.jsx":"15","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\board\\BoardPreview.jsx":"16","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\group\\GroupPreview.jsx":"17","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\services\\httpService.js":"18","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\services\\utilService.js":"19","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\group\\AddCard.jsx":"20","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\group\\EditGroupTitle.jsx":"21","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\card\\CardList.jsx":"22","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\card\\CardPreview.jsx":"23","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\pages\\CardEdit.jsx":"24","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\LabelPalette.jsx":"25","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\CardChecklistShow.jsx":"26","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\AddChecklistBar.jsx":"27","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\CardLabelShow.jsx":"28","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\AddCoverBar.jsx":"29","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\CardEditNav.jsx":"30","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\TodoListShow.jsx":"31","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\TodoShow.jsx":"32","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\AddDescription.jsx":"33","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\board\\AddBoard.jsx":"34","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\card\\CardCoverShowMin.jsx":"35","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\card\\ChecklistSign.jsx":"36","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\CardLabelShowMin.jsx":"37","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\CardCoverShow.jsx":"38","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\board\\BoardFilter.jsx":"39","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\board\\BoardSideMenu.jsx":"40","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\boardMenu\\AboutBoard.jsx":"41","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\boardMenu\\RemoveBoard.jsx":"42","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\boardMenu\\ChangeBoardBackground.jsx":"43","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\CardDuedateShowMin.jsx":"44","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\AddDeutimeBar.jsx":"45","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\CardDuedateShow.jsx":"46","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\pages\\Boards.jsx":"47","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\board\\BoardHeader.jsx":"48","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\HomeHeader.jsx":"49"},{"size":935,"mtime":1610537162161,"results":"50","hashOfConfig":"51"},{"size":377,"mtime":1610537162179,"results":"52","hashOfConfig":"51"},{"size":5201,"mtime":1610537162180,"results":"53","hashOfConfig":"51"},{"size":323,"mtime":1610537162220,"results":"54","hashOfConfig":"51"},{"size":1150,"mtime":1610963117769,"results":"55","hashOfConfig":"51"},{"size":335,"mtime":1610537162207,"results":"56","hashOfConfig":"51"},{"size":4161,"mtime":1610963117789,"results":"57","hashOfConfig":"51"},{"size":888,"mtime":1610963117781,"results":"58","hashOfConfig":"51"},{"size":2806,"mtime":1610963117793,"results":"59","hashOfConfig":"51"},{"size":4965,"mtime":1610823275730,"results":"60","hashOfConfig":"51"},{"size":869,"mtime":1610823351466,"results":"61","hashOfConfig":"51"},{"size":352,"mtime":1610537162159,"results":"62","hashOfConfig":"51"},{"size":1776,"mtime":1610888915284,"results":"63","hashOfConfig":"51"},{"size":2951,"mtime":1610910613663,"results":"64","hashOfConfig":"51"},{"size":1673,"mtime":1610888924583,"results":"65","hashOfConfig":"51"},{"size":936,"mtime":1610888712342,"results":"66","hashOfConfig":"51"},{"size":2718,"mtime":1610814697807,"results":"67","hashOfConfig":"51"},{"size":1081,"mtime":1610909027465,"results":"68","hashOfConfig":"51"},{"size":681,"mtime":1610537162200,"results":"69","hashOfConfig":"51"},{"size":1567,"mtime":1610814697806,"results":"70","hashOfConfig":"51"},{"size":1484,"mtime":1610640867317,"results":"71","hashOfConfig":"51"},{"size":641,"mtime":1610789843255,"results":"72","hashOfConfig":"51"},{"size":3354,"mtime":1610963117784,"results":"73","hashOfConfig":"51"},{"size":7651,"mtime":1610963117792,"results":"74","hashOfConfig":"51"},{"size":2032,"mtime":1610792342538,"results":"75","hashOfConfig":"51"},{"size":3956,"mtime":1610792342536,"results":"76","hashOfConfig":"51"},{"size":1934,"mtime":1610888712345,"results":"77","hashOfConfig":"51"},{"size":1160,"mtime":1610814697804,"results":"78","hashOfConfig":"51"},{"size":4825,"mtime":1610814697803,"results":"79","hashOfConfig":"51"},{"size":646,"mtime":1610888712346,"results":"80","hashOfConfig":"51"},{"size":462,"mtime":1610792342539,"results":"81","hashOfConfig":"51"},{"size":1866,"mtime":1610792342540,"results":"82","hashOfConfig":"51"},{"size":1851,"mtime":1610792342535,"results":"83","hashOfConfig":"51"},{"size":4129,"mtime":1610888712341,"results":"84","hashOfConfig":"51"},{"size":595,"mtime":1610814697797,"results":"85","hashOfConfig":"51"},{"size":438,"mtime":1610888712344,"results":"86","hashOfConfig":"51"},{"size":406,"mtime":1610814697804,"results":"87","hashOfConfig":"51"},{"size":664,"mtime":1610814697803,"results":"88","hashOfConfig":"51"},{"size":1546,"mtime":1610887582137,"results":"89","hashOfConfig":"51"},{"size":2745,"mtime":1610886455316,"results":"90","hashOfConfig":"51"},{"size":289,"mtime":1610885076730,"results":"91","hashOfConfig":"51"},{"size":259,"mtime":1610885050197,"results":"92","hashOfConfig":"51"},{"size":299,"mtime":1610886092774,"results":"93","hashOfConfig":"51"},{"size":1426,"mtime":1610963117788,"results":"94","hashOfConfig":"51"},{"size":859,"mtime":1610963117786,"results":"95","hashOfConfig":"51"},{"size":1402,"mtime":1610963117786,"results":"96","hashOfConfig":"51"},{"size":1922,"mtime":1610963117791,"results":"97","hashOfConfig":"51"},{"size":621,"mtime":1610963117783,"results":"98","hashOfConfig":"51"},{"size":524,"mtime":1610963117782,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"165o9cq",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"102"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"102"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"102"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"102"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"102"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"102"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\index.js",[],["205","206"],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\store\\store.js",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\App.jsx",["207","208"],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\store\\reducers\\index.js",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\pages\\Board.jsx",["209","210"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BoardFilter } from '../cmps/board/BoardFilter'\r\nimport { GroupList } from '../cmps/group/GroupList'\r\nimport {BoardSideMenu} from '../cmps/board/BoardSideMenu'\r\n// import { socketService } from '../services/socketService'\r\nimport { loadBoard, updateBoardAfterDrag } from '../store/actions/boardActions.js'\r\n\r\n\r\nclass _Board extends Component {\r\n    state = {\r\n        board: {},\r\n        isBoardMenuShown: false\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const boardId = this.props.match.params.id\r\n        console.log('boardId', boardId)\r\n        await this.props.loadBoard(boardId)\r\n\r\n\r\n    }\r\n\r\n    onDragEnd = (result) => {\r\n        // console.log('on drag result', result)\r\n        const { destination, source, draggableId, type } = result\r\n        if (!destination) return\r\n        if (destination.droppableId === source.droppableId && destination.index === source.index) {\r\n            return\r\n        }\r\n        if (type === 'group') {\r\n            this.onDragGroups(source.index, destination.index)\r\n        }\r\n        if (type === 'card') {\r\n            this.onDragCards(destination, source, draggableId)\r\n        }\r\n    }\r\n\r\n    // per react beautiful dnd after performing optimistic update to let server know that a reorder has occurred\r\n    onDragGroups = async (startIndex, endIndex) => {\r\n        // console.log('I am in groups')\r\n        let boardToUpdate = this.props.selectedBoard\r\n        const groupToMove = boardToUpdate.groups.splice(startIndex, 1)\r\n        boardToUpdate.groups.splice(endIndex, 0, groupToMove[0])\r\n        await this.props.updateBoardAfterDrag(this.props.selectedBoard)\r\n\r\n    }\r\n\r\n    onDragCards = async (destination, source) => {\r\n        let boardToUpdate = this.props.selectedBoard\r\n        const groupToMoveFromIdx = boardToUpdate.groups.findIndex(group => group.id === source.droppableId)\r\n        const groupToMoveToIdx = boardToUpdate.groups.findIndex(group => group.id === destination.droppableId)\r\n        const cardToMove = boardToUpdate.groups[groupToMoveFromIdx].cards.splice(source.index, 1)\r\n        boardToUpdate.groups[groupToMoveToIdx].cards.splice(destination.index, 0, cardToMove[0])\r\n        // console.log('i am in this on drag cards')\r\n        await this.props.updateBoardAfterDrag(this.props.selectedBoard)\r\n\r\n    }\r\n\r\n    toggleSideMenu = () => {\r\n        this.setState({ isBoardMenuShown: !this.state.isBoardMenuShown })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { selectedBoard } = this.props\r\n        const {isBoardMenuShown} = this.state\r\n        \r\n        if (!selectedBoard) return <div>Loading...</div>\r\n        // console.log('BBB', selectedBoard.style.bgurl)\r\n        const style = {\r\n            boardStyle: { ...selectedBoard.style }\r\n        }\r\n        return (\r\n            <section className=\"board-wraper\"\r\n                style={{\r\n                    backgroundImage: \"url(\" + `${style.boardStyle.bgurl}` + \")\",\r\n                    backgroundPosition: \"center\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundRepeat: \"no-repeat\"\r\n                }}>\r\n\r\n                <div className=\"board-title\"> {selectedBoard.title}</div>\r\n                <nav>\r\n                <BoardFilter/>\r\n                <button onClick={this.toggleSideMenu}>Side Menu In Development</button>\r\n                </nav>\r\n                {isBoardMenuShown && <BoardSideMenu toggleSideMenu={this.toggleSideMenu}/> }\r\n                {selectedBoard.groups && <GroupList groups={selectedBoard.groups} boardId={selectedBoard._id} onDragEnd={this.onDragEnd} />}\r\n            </section>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoard,\r\n    updateBoardAfterDrag\r\n}\r\n\r\nexport const Board = connect(mapStateToProps, mapDispatchToProps)(_Board)\r\n","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\AppHeader.jsx",["211"],"import { NavLink } from 'react-router-dom'\r\n\r\n\r\n\r\nexport function AppHeader() {\r\n\r\n\r\n    return <nav className=\"app-header\">\r\n        <h3 className=\"logo-header\">TASK<span>X</span></h3>\r\n        \r\n        <ul className=\"navbar-links\">\r\n            {/* <li><NavLink exact to=\"/\">Home</NavLink> </li> */}\r\n            {/* <li><NavLink to=\"/\">Login</NavLink></li> */}\r\n            {/* <li><NavLink to=\"/\">Boards</NavLink> | </li> */}\r\n\r\n        </ul>\r\n        <button className=\"user-avatar\">HS</button>\r\n\r\n    </nav>;\r\n}\r\n\r\n","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\pages\\Home.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\store\\actions\\boardActions.js",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\store\\reducers\\boardReducer.js",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\board\\BoardList.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\group\\GroupList.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\services\\boardService.js",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\group\\AddNewGroup.jsx",["212"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { addGroup } from '../../store/actions/boardActions.js'\r\nimport Icon from '@material-ui/core/Icon';\r\nexport class _AddNewGroup extends Component {\r\n    state = {\r\n        title: ''\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    handleChange = (ev) => {\r\n        const value = ev.target.value\r\n        const field = ev.target.name\r\n        this.setState({ [field]: value })\r\n    }\r\n    onSubmit = async (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.title) return\r\n        await this.props.addGroup(this.state.title, this.props.selectedBoard)\r\n        this.setState({ title: '' })\r\n        this.props.toggleAddGroupMode()\r\n    }\r\n    onCancelAdd = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.toggleAddGroupMode()\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"add-new-group\">\r\n                <form className=\"add-new-wraper\" onSubmit={this.onSubmit} >\r\n                    <input className=\"add-another-group\" placeholder=\"Add another list\" type=\"text\" onChange={this.handleChange} value={this.state.title} name=\"title\" autoComplete=\"off\"/>\r\n                    <button className=\"save-group-btn\">Add List</button>\r\n                    <button className=\"cancel-group-btn\" onClick={this.onCancelAdd}></button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    addGroup,\r\n};\r\nexport const AddNewGroup = connect(mapStateToProps, mapDispatchToProps)(_AddNewGroup);","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\board\\BoardPreview.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\group\\GroupPreview.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\services\\httpService.js",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\services\\utilService.js",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\group\\AddCard.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\group\\EditGroupTitle.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\card\\CardList.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\card\\CardPreview.jsx",["213"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { removeCard } from '../../store/actions/boardActions.js'\r\nimport { CardLabelShowMin } from '../cardEdit/CardLabelShowMin'\r\nimport { CardEdit } from '../../pages/CardEdit'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport { ChecklistSign } from './ChecklistSign'\r\nimport { CardCoverShowMin } from './CardCoverShowMin'\r\nimport { CardDuedateShowMin } from '../cardEdit/CardDuedateShowMin'\r\n\r\nexport class _CardPreview extends Component {\r\n\r\n    state = {\r\n        isCardEtidShow: false\r\n    }\r\n\r\n\r\n    onRemoveCard = (cardId) => {\r\n        console.log('cardId to remove', cardId)\r\n        this.props.removeCard(cardId, this.props.groupId, this.props.selectedBoard)\r\n    }\r\n\r\n    toggleCardEdit = () => {\r\n        this.setState({ isCardEtidShow: !this.state.isCardEtidShow })\r\n    }\r\n\r\n    render() {\r\n        const { card } = this.props\r\n        const { isCardEtidShow } = this.state\r\n        // const cardBgc = (card.style && card.style.coverType && card.style.coverType === 'full') ? `full ${card.style.bgColor}` : ''\r\n        const cardBgc = (card.style?.coverType === 'full') ? `full ${card.style.bgColor}` : ''\r\n        const cardCover = (card.style?.coverType === 'top') ? `top t${card.style.bgColor}` : ''\r\n        return (\r\n\r\n\r\n            <Draggable draggableId={String(card.id)} index={this.props.index} direction=\"horizontal\" type=\"card\">\r\n                {(provided) => {\r\n                    return (\r\n\r\n                        <li key={card.id}  {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\r\n                            <article className={(card.title!=='default-empty')?`card-preview ${cardBgc} ${cardCover}`:`card-preview-empty`}>\r\n                                {/* {(card.style?.coverType === 'top') ? <CardCoverShowMin card={card} /> : ''} */}\r\n                                {/* <button className=\"edit-fa\" onClick={() => this.toggleCardEdit}></button> */}\r\n                                <button className=\"delete-s\" onClick={() => this.onRemoveCard(card.id)}></button>\r\n                                {card.labels && <CardLabelShowMin labels={card.labels} />}\r\n                                <p onClick={this.toggleCardEdit} >{card.title}</p>\r\n                                <nav>\r\n                                    {(card.description) ? <span className=\"descriptionSign sign\"></span> : ''}\r\n                                    {(card.checklists && card.checklists.length > 0) ? <ChecklistSign checklists={card.checklists} /> : ''}\r\n                                    {(card.duedate) ? <CardDuedateShowMin card={card} /> : ''}\r\n                                </nav>\r\n                                {isCardEtidShow && <CardEdit card={card} groupId={this.props.groupId} toggleCardEdit={this.toggleCardEdit} />}\r\n                            </article>\r\n                        </li>\r\n                    )\r\n                }}\r\n            </Draggable>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    removeCard\r\n\r\n};\r\n\r\nexport const CardPreview = connect(mapStateToProps, mapDispatchToProps)(_CardPreview);","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\pages\\CardEdit.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\LabelPalette.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\CardChecklistShow.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\AddChecklistBar.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\CardLabelShow.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\AddCoverBar.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\CardEditNav.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\TodoListShow.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\TodoShow.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\AddDescription.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\board\\AddBoard.jsx",["214","215"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { createBoard } from '../../store/actions/boardActions.js'\r\n\r\nexport class _AddBoard extends Component {\r\n\r\n    state = {\r\n        title: '',\r\n        bgurl: ''\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const value = ev.target.value\r\n        const field = ev.target.name\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n    onChooseBackground = ( bgUrl) => {\r\n       \r\n        this.setState({ bgurl: bgUrl })\r\n    }\r\n\r\n    onSubmit = async (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.title) return\r\n        const board = await this.props.createBoard(this.state.title, this.state.bgurl)\r\n        this.props.onLoadNewBoard(board._id)\r\n\r\n    }\r\n\r\n    onCancelAdd = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.toggleNewBoard()\r\n    }\r\n\r\n    render() {\r\n        const backgroundImages = [\r\n            {\r\n                id: 'bg101',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2020/04/11/18/24/star-5031540_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg102',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2016/11/29/08/00/abstract-1868269_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg103',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2019/03/23/20/54/bamboo-4076262_1280.jpg\"\r\n            }\r\n        ]\r\n        return (\r\n            <div className=\"add-board\">\r\n                <form onSubmit={this.onSubmit} >\r\n                    <input placeholder=\"Enter a title for this board...\" type=\"text\" onChange={this.handleChange} value={this.state.title} name=\"title\" autoComplete=\"off\" />\r\n                    <section className=\"add-board-backgrounds\">\r\n                        {backgroundImages.map(background => {\r\n                            return <div key={background.id}\r\n                                style={{\r\n                                    backgroundImage: \"url(\" + `${background.bgurl}` + \")\",\r\n                                    backgroundPosition: 'center',\r\n                                    backgroundSize: 'cover',\r\n                                    backgroundRepeat: 'no-repeat',\r\n                                    width: \"100px\", \r\n                                    height:\"100px\"\r\n                                }}\r\n                                onClick={() => this.onChooseBackground( background.bgurl)}></div>\r\n                        })}\r\n                    </section>\r\n                    <button className=\"save-btn\">Add Board</button>\r\n                    <button className=\"cancel-btn\" onClick={this.onCancelAdd}>Cancel</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    createBoard\r\n\r\n};\r\n\r\nexport const AddBoard = connect(mapStateToProps, mapDispatchToProps)(_AddBoard);","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\card\\CardCoverShowMin.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\card\\ChecklistSign.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\CardLabelShowMin.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\CardCoverShow.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\board\\BoardFilter.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\board\\BoardSideMenu.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\boardMenu\\AboutBoard.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\boardMenu\\RemoveBoard.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\boardMenu\\ChangeBoardBackground.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\CardDuedateShowMin.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\AddDeutimeBar.jsx",["216","217"],"import React, { Component, useState } from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nexport function AddDeutimeBar(props) {\r\n\r\n\r\n\r\n\r\n    const [startDate, setStartDate] = useState(new Date());\r\n\r\n\r\n    return (\r\n        <div className=\"edit-bar\">\r\n            <header className=\"seconde\">\r\n                <h3>Due Date</h3>\r\n                <button onClick={props.toggleAddDeutime}>x</button>\r\n\r\n            </header>\r\n            <main>\r\n                <DatePicker\r\n                    selected={startDate}\r\n                    onSelect={date => setStartDate(() => { props.addDeuDate(date) })}\r\n                    inline\r\n                />\r\n            </main>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n","C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\cardEdit\\CardDuedateShow.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\pages\\Boards.jsx",["218","219","220"],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\board\\BoardHeader.jsx",[],"C:\\Users\\zinke\\Desktop\\trello-proj\\trello\\frontend\\src\\cmps\\HomeHeader.jsx",[],{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","severity":1,"message":"226","line":6,"column":10,"nodeType":"227","messageId":"228","endLine":6,"endColumn":19},{"ruleId":"225","severity":1,"message":"229","line":7,"column":10,"nodeType":"227","messageId":"228","endLine":7,"endColumn":18},{"ruleId":"230","severity":1,"message":"231","line":77,"column":45,"nodeType":"232","messageId":"233","endLine":77,"endColumn":46},{"ruleId":"230","severity":1,"message":"231","line":77,"column":75,"nodeType":"232","messageId":"233","endLine":77,"endColumn":76},{"ruleId":"225","severity":1,"message":"234","line":1,"column":10,"nodeType":"227","messageId":"228","endLine":1,"endColumn":17},{"ruleId":"225","severity":1,"message":"235","line":4,"column":8,"nodeType":"227","messageId":"228","endLine":4,"endColumn":12},{"ruleId":"225","severity":1,"message":"236","line":8,"column":10,"nodeType":"227","messageId":"228","endLine":8,"endColumn":26},{"ruleId":"230","severity":1,"message":"231","line":64,"column":61,"nodeType":"232","messageId":"233","endLine":64,"endColumn":62},{"ruleId":"230","severity":1,"message":"231","line":64,"column":85,"nodeType":"232","messageId":"233","endLine":64,"endColumn":86},{"ruleId":"225","severity":1,"message":"237","line":1,"column":17,"nodeType":"227","messageId":"228","endLine":1,"endColumn":26},{"ruleId":"225","severity":1,"message":"238","line":4,"column":10,"nodeType":"227","messageId":"228","endLine":4,"endColumn":17},{"ruleId":"225","severity":1,"message":"239","line":3,"column":10,"nodeType":"227","messageId":"228","endLine":3,"endColumn":19},{"ruleId":"225","severity":1,"message":"240","line":6,"column":8,"nodeType":"227","messageId":"228","endLine":6,"endColumn":14},{"ruleId":"225","severity":1,"message":"235","line":7,"column":8,"nodeType":"227","messageId":"228","endLine":7,"endColumn":12},"no-native-reassign",["241"],"no-negated-in-lhs",["242"],"no-unused-vars","'AppHeader' is defined but never used.","Identifier","unusedVar","'AddBoard' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'NavLink' is defined but never used.","'Icon' is defined but never used.","'CardCoverShowMin' is defined but never used.","'Component' is defined but never used.","'connect' is defined but never used.","'BoardList' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]