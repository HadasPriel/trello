[{"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/index.js":"1","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/serviceWorkerRegistration.js":"2","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/reportWebVitals.js":"3","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/store/store.js":"4","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/App.jsx":"5","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/pages/Home.jsx":"6","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/pages/Board.jsx":"7","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/pages/CardEdit.jsx":"8","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/store/reducers/index.js":"9","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/store/actions/boardActions.js":"10","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/store/reducers/boardReducer.js":"11","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/board/BoardList.jsx":"12","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/services/boardService.js":"13","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/board/BoardPreview.jsx":"14","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/services/httpService.js":"15","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/group/GroupList.jsx":"16","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/group/GroupPreview.jsx":"17","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/card/CardList.jsx":"18","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/card/CardPreview.jsx":"19","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/group/AddNewGroup.jsx":"20","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/CardEditNav.jsx":"21","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/AddChecklistBar.jsx":"22","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/CardLabelShow.jsx":"23","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/LabelPalette.jsx":"24","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/CardChecklistShow.jsx":"25","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/services/utilService.js":"26","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/group/EditGroupTitle.jsx":"27","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/AppHeader.jsx":"28","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/group/AddCard.jsx":"29","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/AddCoverBar.jsx":"30","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/TodoListShow.jsx":"31","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/TodoShow.jsx":"32","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/AddDescription.jsx":"33","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/CardLabelShowMin.jsx":"34","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/board/AddBoard.jsx":"35","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/card/ChecklistSign.jsx":"36","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/card/CardCoverShowMin.jsx":"37","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/CardCoverShow.jsx":"38","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/board/BoardSideMenu.jsx":"39","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/board/BoardFilter.jsx":"40","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/CardDuedateShowMin.jsx":"41","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/AddDeutimeBar.jsx":"42","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/CardDuedateShow.jsx":"43","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/boardMenu/ChangeBoardBackground.jsx":"44","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/boardMenu/AboutBoard.jsx":"45","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/boardMenu/RemoveBoard.jsx":"46","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/Uploader.jsx":"47","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/services/cloudinaryService.js":"48","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/pages/Boards.jsx":"49"},{"size":910,"mtime":1610539251000,"results":"50","hashOfConfig":"51"},{"size":5064,"mtime":1610539251000,"results":"52","hashOfConfig":"51"},{"size":364,"mtime":1610539251000,"results":"53","hashOfConfig":"51"},{"size":312,"mtime":1610539251000,"results":"54","hashOfConfig":"51"},{"size":1035,"mtime":1610959732000,"results":"55","hashOfConfig":"51"},{"size":2626,"mtime":1610962078000,"results":"56","hashOfConfig":"51"},{"size":3854,"mtime":1610889326000,"results":"57","hashOfConfig":"51"},{"size":7165,"mtime":1610889326000,"results":"58","hashOfConfig":"51"},{"size":325,"mtime":1610539251000,"results":"59","hashOfConfig":"51"},{"size":4755,"mtime":1610889326000,"results":"60","hashOfConfig":"51"},{"size":839,"mtime":1610889326000,"results":"61","hashOfConfig":"51"},{"size":339,"mtime":1610877145000,"results":"62","hashOfConfig":"51"},{"size":2527,"mtime":1610889326000,"results":"63","hashOfConfig":"51"},{"size":907,"mtime":1610883970000,"results":"64","hashOfConfig":"51"},{"size":1035,"mtime":1610539251000,"results":"65","hashOfConfig":"51"},{"size":1736,"mtime":1610889326000,"results":"66","hashOfConfig":"51"},{"size":2636,"mtime":1610809462000,"results":"67","hashOfConfig":"51"},{"size":622,"mtime":1610791332000,"results":"68","hashOfConfig":"51"},{"size":3175,"mtime":1610889326000,"results":"69","hashOfConfig":"51"},{"size":1627,"mtime":1610819879000,"results":"70","hashOfConfig":"51"},{"size":626,"mtime":1610889326000,"results":"71","hashOfConfig":"51"},{"size":1874,"mtime":1610889326000,"results":"72","hashOfConfig":"51"},{"size":1120,"mtime":1610815216000,"results":"73","hashOfConfig":"51"},{"size":1974,"mtime":1610791332000,"results":"74","hashOfConfig":"51"},{"size":3861,"mtime":1610791332000,"results":"75","hashOfConfig":"51"},{"size":655,"mtime":1610539251000,"results":"76","hashOfConfig":"51"},{"size":1432,"mtime":1610693217000,"results":"77","hashOfConfig":"51"},{"size":501,"mtime":1610889326000,"results":"78","hashOfConfig":"51"},{"size":1510,"mtime":1610804364000,"results":"79","hashOfConfig":"51"},{"size":4717,"mtime":1610815216000,"results":"80","hashOfConfig":"51"},{"size":440,"mtime":1610791332000,"results":"81","hashOfConfig":"51"},{"size":1806,"mtime":1610791332000,"results":"82","hashOfConfig":"51"},{"size":1789,"mtime":1610791332000,"results":"83","hashOfConfig":"51"},{"size":388,"mtime":1610815216000,"results":"84","hashOfConfig":"51"},{"size":4010,"mtime":1610871803000,"results":"85","hashOfConfig":"51"},{"size":415,"mtime":1610889326000,"results":"86","hashOfConfig":"51"},{"size":565,"mtime":1610815216000,"results":"87","hashOfConfig":"51"},{"size":634,"mtime":1610815216000,"results":"88","hashOfConfig":"51"},{"size":2674,"mtime":1610889326000,"results":"89","hashOfConfig":"51"},{"size":1485,"mtime":1610889326000,"results":"90","hashOfConfig":"51"},{"size":1452,"mtime":1610889326000,"results":"91","hashOfConfig":"51"},{"size":833,"mtime":1610889326000,"results":"92","hashOfConfig":"51"},{"size":1428,"mtime":1610889326000,"results":"93","hashOfConfig":"51"},{"size":289,"mtime":1610889326000,"results":"94","hashOfConfig":"51"},{"size":277,"mtime":1610889326000,"results":"95","hashOfConfig":"51"},{"size":252,"mtime":1610889326000,"results":"96","hashOfConfig":"51"},{"size":1103,"mtime":1610907346000,"results":"97","hashOfConfig":"51"},{"size":555,"mtime":1610905598000,"results":"98","hashOfConfig":"51"},{"size":1850,"mtime":1610959390000,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"qec4v0",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"102"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"102"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"102"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"102"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"102"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"102"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"102"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/index.js",[],["206","207"],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/serviceWorkerRegistration.js",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/reportWebVitals.js",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/store/store.js",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/App.jsx",["208"],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/pages/Home.jsx",["209","210"],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/pages/Board.jsx",["211","212"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { BoardFilter } from '../cmps/board/BoardFilter'\nimport { GroupList } from '../cmps/group/GroupList'\nimport {BoardSideMenu} from '../cmps/board/BoardSideMenu'\n// import { socketService } from '../services/socketService'\nimport { loadBoard, updateBoardAfterDrag } from '../store/actions/boardActions.js'\n\n\nclass _Board extends Component {\n    state = {\n        board: {},\n        isBoardMenuShown: false\n    }\n\n    async componentDidMount() {\n        const boardId = this.props.match.params.id\n        console.log('boardId', boardId)\n        await this.props.loadBoard(boardId)\n\n\n    }\n\n    onDragEnd = (result) => {\n        // console.log('on drag result', result)\n        const { destination, source, draggableId, type } = result\n        if (!destination) return\n        if (destination.droppableId === source.droppableId && destination.index === source.index) {\n            return\n        }\n        if (type === 'group') {\n            this.onDragGroups(source.index, destination.index)\n        }\n        if (type === 'card') {\n            this.onDragCards(destination, source, draggableId)\n        }\n    }\n\n    // per react beautiful dnd after performing optimistic update to let server know that a reorder has occurred\n    onDragGroups = async (startIndex, endIndex) => {\n        // console.log('I am in groups')\n        let boardToUpdate = this.props.selectedBoard\n        const groupToMove = boardToUpdate.groups.splice(startIndex, 1)\n        boardToUpdate.groups.splice(endIndex, 0, groupToMove[0])\n        await this.props.updateBoardAfterDrag(this.props.selectedBoard)\n\n    }\n\n    onDragCards = async (destination, source) => {\n        let boardToUpdate = this.props.selectedBoard\n        const groupToMoveFromIdx = boardToUpdate.groups.findIndex(group => group.id === source.droppableId)\n        const groupToMoveToIdx = boardToUpdate.groups.findIndex(group => group.id === destination.droppableId)\n        const cardToMove = boardToUpdate.groups[groupToMoveFromIdx].cards.splice(source.index, 1)\n        boardToUpdate.groups[groupToMoveToIdx].cards.splice(destination.index, 0, cardToMove[0])\n        // console.log('i am in this on drag cards')\n        await this.props.updateBoardAfterDrag(this.props.selectedBoard)\n\n    }\n\n    toggleSideMenu = () => {\n        this.setState({ isBoardMenuShown: !this.state.isBoardMenuShown })\n    }\n\n\n    render() {\n        const { selectedBoard } = this.props\n        const {isBoardMenuShown} = this.state\n        \n        if (!selectedBoard) return <div>Loading...</div>\n        // console.log('BBB', selectedBoard.style.bgurl)\n        const style = {\n            boardStyle: { ...selectedBoard.style }\n        }\n        return (\n            <section className=\"board-wraper\"\n                style={{\n                    backgroundImage: \"url(\" + `${style.boardStyle.bgurl}` + \")\",\n                    backgroundPosition: \"center\",\n                    backgroundSize: \"cover\",\n                    backgroundRepeat: \"no-repeat\"\n                }}>\n\n                <div className=\"board-title\"> {selectedBoard.title}</div>\n                <nav>\n                <BoardFilter/>\n                <button onClick={this.toggleSideMenu}>Side Menu In Development</button>\n                </nav>\n                {isBoardMenuShown && <BoardSideMenu toggleSideMenu={this.toggleSideMenu}/> }\n                {selectedBoard.groups && <GroupList groups={selectedBoard.groups} boardId={selectedBoard._id} onDragEnd={this.onDragEnd} />}\n            </section>\n\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        selectedBoard: state.boardModule.selectedBoard\n    }\n}\nconst mapDispatchToProps = {\n    loadBoard,\n    updateBoardAfterDrag\n}\n\nexport const Board = connect(mapStateToProps, mapDispatchToProps)(_Board)\n","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/pages/CardEdit.jsx",["213"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\n// import { socketService } from '../services/socketService'\nimport { loadBoard, updateBoard } from '../store/actions/boardActions.js'\nimport { CardEditNav } from '../cmps/cardEdit/CardEditNav'\nimport { LabelPalette } from '../cmps/cardEdit/LabelPalette'\nimport { AddChecklistBar } from '../cmps/cardEdit/AddChecklistBar'\nimport { AddCoverBar } from '../cmps/cardEdit/AddCoverBar'\nimport { CardLabelShow } from '../cmps/cardEdit/CardLabelShow'\nimport { CardChecklistShow } from '../cmps/cardEdit/CardChecklistShow'\n\nclass _CardEdit extends Component {\n    state = {\n        board: null,\n        groupId: null,\n        card: null,\n        isLabelPaletteShowing: false,\n        isAddChecklistShowing: false,\n        isCoverShowing: false\n    }\n\n    async componentDidMount() {\n        this.loadCard()\n    }\n\n    componentDidUpdate(prevprops) {\n        if (this.props.match !== prevprops.match) this.loadCard()\n    }\n\n\n\n\n    loadCard = async () => {\n        const boardId = this.props.match.params.id\n        const groupId = this.props.match.params.groupId\n        const cardId = this.props.match.params.cardId\n        try {\n            await this.props.loadBoard(boardId)\n            const groups = this.props.selectedBoard.groups\n            const group = groups.find(group => group.id === groupId)\n            const card = group.cards.find(currCard => currCard.id === cardId)\n            this.setState({ board: this.props.selectedBoard, groupId, card })\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    updateCard = async (cardToSave) => {\n        const boardToSave = { ...this.state.board }\n        const groupToSave = boardToSave.groups.find(group => group.id === this.state.groupId)\n        const cardsToSave = groupToSave.cards.map(card => {\n            if (card.id === cardToSave.id) return cardToSave\n            else return card\n        })\n        groupToSave.cards = cardsToSave\n        const groupsToSave = boardToSave.groups.map(group => {\n            if (group.id === groupToSave.id) return groupToSave\n            else return group\n        })\n        boardToSave.groups = groupsToSave\n        // console.log('boardToSave', boardToSave)\n\n        try {\n            await updateBoard(boardToSave)\n            this.loadCard()\n\n        } catch (err) {\n            console.log('BoardActions: err in loadBoard', err)\n        }\n    }\n\n    toggleLabelPalette = () => {\n        this.setState({ isLabelPaletteShowing: !this.state.isLabelPaletteShowing })\n    }\n    toggleChecklistBar = () => {\n        this.setState({ isAddChecklistShowing: !this.state.isAddChecklistShowing })\n    }\n    toggleCoverBar = () => {\n        this.setState({ isCoverShowing: !this.state.isCoverShowing })\n    }\n\n\n    render() {\n        const { card } = this.state\n        const isLabels = (card && card.labels && card.labels.length > 0)\n        const isChecklists = (card && card.checklists && card.checklists.length > 0)\n        if (!card) return <div>Loading...</div>\n        return (\n            <section className=\"card-edit\">\n                <Link to={`/board/${this.props.selectedBoard}`}>X</Link>\n                <div className=\"permanent\">\n                    <main>\n                        <h1>{card.title}</h1>\n                        <div>{isLabels && <div> <h3>Labels: </h3><CardLabelShow labels={card.labels} card={card} updateCard={this.updateCard} /></div>}</div>\n                        <h3>Description: </h3>\n                        <p>{card.description && ''}</p>\n                        <div>{isChecklists && <div> <h3>Checklists: </h3><CardChecklistShow checklists={card.checklists} card={card} updateCard={this.updateCard} /></div>}</div>\n                    </main>\n                    <CardEditNav card={card} toggleLabelPalette={this.toggleLabelPalette} toggleChecklistBar={this.toggleChecklistBar} toggleCoverBar={this.toggleCoverBar} />\n                </div>\n                {this.state.isLabelPaletteShowing && <LabelPalette card={card} updateCard={this.updateCard} />}\n                {this.state.isAddChecklistShowing && <AddChecklistBar card={card} updateCard={this.updateCard} />}\n                {this.state.isCoverShowing && <AddCoverBar card={card} updateCard={this.updateCard} />}\n            </section>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        selectedBoard: state.boardModule.selectedBoard\n\n    }\n}\nconst mapDispatchToProps = {\n    loadBoard\n    // updateBoard\n}\n\nexport const CardEdit = connect(mapStateToProps, mapDispatchToProps)(_CardEdit)\n","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/store/reducers/index.js",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/store/actions/boardActions.js",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/store/reducers/boardReducer.js",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/board/BoardList.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/services/boardService.js",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/board/BoardPreview.jsx",["214","215"],"import { Link } from 'react-router-dom'\n\n\nexport function BoardPreview(props) {\n    const { board } = props\n    const style= {boardStyle: {...board.style}}\n\n    return (\n        <div className=\"board-wraper-home\">\n            <article className=\"board-preview-home\"\n                style={{\n                    backgroundImage: \"url(\" + `${style.boardStyle.bgurl}` + \")\",\n                    backgroundPosition: 'center',\n                    backgroundSize: 'cover',\n                    backgroundRepeat: 'no-repeat',\n                    borderRadius: \"3px\",\n                    width: \"350px\",\n                    height: \"200px\",\n                    margin: \"10px\",\n                    // marginBottom: \"50px\"\n                }}\n            >\n\n                {/* <p>{board.title}</p> */}\n\n                <Link to={`/board/${board._id}`}>{board.title}</Link>\n            </article>\n        </div>\n    )\n}","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/services/httpService.js",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/group/GroupList.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/group/GroupPreview.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/card/CardList.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/card/CardPreview.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/group/AddNewGroup.jsx",["216"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { addGroup } from '../../store/actions/boardActions.js'\nimport Icon from '@material-ui/core/Icon';\nexport class _AddNewGroup extends Component {\n    state = {\n        title: ''\n    }\n    componentDidMount() {\n    }\n    handleChange = (ev) => {\n        const value = ev.target.value\n        const field = ev.target.name\n        this.setState({ [field]: value })\n    }\n    onSubmit = async (ev) => {\n        ev.preventDefault()\n        if (!this.state.title) return\n        await this.props.addGroup(this.state.title, this.props.selectedBoard)\n        this.setState({ title: '' })\n        this.props.toggleAddGroupMode()\n    }\n    onCancelAdd = (ev) => {\n        ev.preventDefault()\n        this.props.toggleAddGroupMode()\n    }\n    render() {\n        return (\n            <div className=\"add-new-group\">\n                <form className=\"add-new-wraper\" onSubmit={this.onSubmit} >\n                    <input className=\"add-another-group\" placeholder=\"Add another list\" type=\"text\" onChange={this.handleChange} value={this.state.title} name=\"title\" autoComplete=\"off\"/>\n                    <button className=\"save-group-btn\">Add List</button>\n                    <button className=\"cancel-group-btn\" onClick={this.onCancelAdd}></button>\n                </form>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        selectedBoard: state.boardModule.selectedBoard\n    };\n};\nconst mapDispatchToProps = {\n    addGroup,\n};\nexport const AddNewGroup = connect(mapStateToProps, mapDispatchToProps)(_AddNewGroup);","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/CardEditNav.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/AddChecklistBar.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/CardLabelShow.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/LabelPalette.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/CardChecklistShow.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/services/utilService.js",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/group/EditGroupTitle.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/AppHeader.jsx",["217"],"import { NavLink } from 'react-router-dom'\n\n\n\nexport function AppHeader() {\n\n\n    return <nav className=\"app-header\">\n        <h3 className=\"logo-header\">TASK<span>X</span></h3>\n        \n        <ul className=\"navbar-links\">\n            {/* <li><NavLink activeClassName=\"my-active\" exact to=\"/\">Home</NavLink> | </li> */}\n            {/* <li><NavLink to=\"/\">Login</NavLink></li> */}\n            {/* <li><NavLink to=\"/\">Boards</NavLink> | </li> */}\n\n        </ul>\n        <button className=\"user-avatar\">HS</button>\n\n    </nav>;\n}\n\n","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/group/AddCard.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/AddCoverBar.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/TodoListShow.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/TodoShow.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/AddDescription.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/CardLabelShowMin.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/board/AddBoard.jsx",["218","219"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { createBoard } from '../../store/actions/boardActions.js'\n\nexport class _AddBoard extends Component {\n\n    state = {\n        title: '',\n        bgurl: ''\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleChange = (ev) => {\n        const value = ev.target.value\n        const field = ev.target.name\n        this.setState({ [field]: value })\n    }\n\n    onChooseBackground = ( bgUrl) => {\n       \n        this.setState({ bgurl: bgUrl })\n    }\n\n    onSubmit = async (ev) => {\n        ev.preventDefault()\n        if (!this.state.title) return\n        const board = await this.props.createBoard(this.state.title, this.state.bgurl)\n        this.props.onLoadNewBoard(board._id)\n\n    }\n\n    onCancelAdd = (ev) => {\n        ev.preventDefault()\n        this.props.toggleNewBoard()\n    }\n\n    render() {\n        const backgroundImages = [\n            {\n                id: 'bg101',\n                bgurl: \"https://cdn.pixabay.com/photo/2020/04/11/18/24/star-5031540_1280.jpg\"\n            },\n            {\n                id: 'bg102',\n                bgurl: \"https://cdn.pixabay.com/photo/2016/11/29/08/00/abstract-1868269_1280.jpg\"\n            },\n            {\n                id: 'bg103',\n                bgurl: \"https://cdn.pixabay.com/photo/2019/03/23/20/54/bamboo-4076262_1280.jpg\"\n            },\n            {\n                id: 'bg104',\n                bgurl: \"https://cdn.pixabay.com/photo/2013/07/21/13/00/rose-165819_1280.jpg\"\n                \n            },\n            {\n                id: 'bg105',\n                bgurl: \"https://cdn.pixabay.com/photo/2014/09/14/18/04/dandelion-445228_1280.jpg\"\n            },\n            {\n                id: 'bg106',\n                bgurl: \"https://cdn.pixabay.com/photo/2017/05/11/11/15/workplace-2303851_1280.jpg\"\n            },\n            {\n                id: 'bg107',\n                bgurl: \"https://cdn.pixabay.com/photo/2013/07/28/12/23/paperclip-168336_1280.jpg\"\n            },\n            {\n                id: 'bg108',\n                bgurl: \"https://cdn.pixabay.com/photo/2016/03/26/13/12/pencils-1280558_1280.jpg\"\n            },\n            {\n                id: 'bg109',\n                bgurl: \"https://cdn.pixabay.com/photo/2018/01/11/21/27/laptop-3076957_1280.jpg\"\n            },\n        ]\n        return (\n            <div className=\"add-board\">\n                <form className=\"templates-container\" onSubmit={this.onSubmit} >\n                    <input placeholder=\"Enter a title for this board...\" type=\"text\" onChange={this.handleChange} value={this.state.title} name=\"title\" autoComplete=\"off\" />\n                    <section className=\"add-board-backgrounds\">\n                        {backgroundImages.map(background => {\n                            return <div className=\"backgrounds-tumbs\"key={background.id}\n                                style={{\n                                    backgroundImage: \"url(\" + `${background.bgurl}` + \")\",\n                                    backgroundPosition: 'center',\n                                    backgroundSize: 'cover',\n                                    backgroundRepeat: 'no-repeat',\n                                    borderRadius:\"3px\",\n                                    width: \"350px\", \n                                    height:\"200px\",\n                                    margin: \"10px\"\n                                }}\n                                onClick={() => this.onChooseBackground( background.bgurl)}></div>\n                        })}\n                    </section>\n                    <button className=\"save-btn\">+ Add Board</button>\n                    <button className=\"cancel-btn\" onClick={this.onCancelAdd}>X Cancel</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n\n    };\n};\n\nconst mapDispatchToProps = {\n    createBoard\n\n};\n\nexport const AddBoard = connect(mapStateToProps, mapDispatchToProps)(_AddBoard);","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/card/ChecklistSign.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/card/CardCoverShowMin.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/CardCoverShow.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/board/BoardSideMenu.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/board/BoardFilter.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/CardDuedateShowMin.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/AddDeutimeBar.jsx",["220","221"],"import React, { Component, useState } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { connect } from 'react-redux'\n\n// import { socketService } from '../services/socketService'\n\nexport function AddDeutimeBar(props) {\n\n\n\n\n    const [startDate, setStartDate] = useState(new Date());\n\n\n    return (\n        <div className=\"edit-bar\">\n            <header className=\"seconde\">\n                <h3>Due Date</h3>\n                <button onClick={props.toggleAddDeutime}>x</button>\n\n            </header>\n            <main>\n                <DatePicker\n                    selected={startDate}\n                    onSelect={date => setStartDate(() => { props.addDeuDate(date) })}\n                    inline\n                />\n            </main>\n        </div>\n    );\n\n}\n\n","/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/cardEdit/CardDuedateShow.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/boardMenu/ChangeBoardBackground.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/boardMenu/AboutBoard.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/boardMenu/RemoveBoard.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/cmps/Uploader.jsx",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/services/cloudinaryService.js",[],"/Users/pazavi/Desktop/trello-proj/trello/frontend/src/pages/Boards.jsx",["222","223","224"],{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":7,"column":10,"nodeType":"231","messageId":"232","endLine":7,"endColumn":18},{"ruleId":"229","severity":1,"message":"233","line":3,"column":10,"nodeType":"231","messageId":"232","endLine":3,"endColumn":19},{"ruleId":"229","severity":1,"message":"234","line":8,"column":8,"nodeType":"231","messageId":"232","endLine":8,"endColumn":16},{"ruleId":"235","severity":1,"message":"236","line":70,"column":45,"nodeType":"237","messageId":"238","endLine":70,"endColumn":46},{"ruleId":"235","severity":1,"message":"236","line":70,"column":75,"nodeType":"237","messageId":"238","endLine":70,"endColumn":76},{"ruleId":"239","severity":1,"message":"240","line":116,"column":1,"nodeType":"241","messageId":"242","endLine":128,"endColumn":13},{"ruleId":"235","severity":1,"message":"236","line":12,"column":45,"nodeType":"237","messageId":"238","endLine":12,"endColumn":46},{"ruleId":"235","severity":1,"message":"236","line":12,"column":75,"nodeType":"237","messageId":"238","endLine":12,"endColumn":76},{"ruleId":"229","severity":1,"message":"243","line":4,"column":8,"nodeType":"231","messageId":"232","endLine":4,"endColumn":12},{"ruleId":"229","severity":1,"message":"244","line":1,"column":10,"nodeType":"231","messageId":"232","endLine":1,"endColumn":17},{"ruleId":"235","severity":1,"message":"236","line":89,"column":61,"nodeType":"237","messageId":"238","endLine":89,"endColumn":62},{"ruleId":"235","severity":1,"message":"236","line":89,"column":85,"nodeType":"237","messageId":"238","endLine":89,"endColumn":86},{"ruleId":"229","severity":1,"message":"245","line":1,"column":17,"nodeType":"231","messageId":"232","endLine":1,"endColumn":26},{"ruleId":"229","severity":1,"message":"246","line":4,"column":10,"nodeType":"231","messageId":"232","endLine":4,"endColumn":17},{"ruleId":"229","severity":1,"message":"233","line":3,"column":10,"nodeType":"231","messageId":"232","endLine":3,"endColumn":19},{"ruleId":"229","severity":1,"message":"247","line":6,"column":8,"nodeType":"231","messageId":"232","endLine":6,"endColumn":14},{"ruleId":"229","severity":1,"message":"243","line":7,"column":8,"nodeType":"231","messageId":"232","endLine":7,"endColumn":12},"no-native-reassign",["248"],"no-negated-in-lhs",["249"],"no-unused-vars","'AddBoard' is defined but never used.","Identifier","unusedVar","'BoardList' is defined but never used.","'Uploader' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Icon' is defined but never used.","'NavLink' is defined but never used.","'Component' is defined but never used.","'connect' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]