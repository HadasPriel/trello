[{"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\index.js":"1","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\serviceWorkerRegistration.js":"3","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\store\\store.js":"4","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\App.jsx":"5","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\pages\\CardEdit.jsx":"6","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\pages\\Board.jsx":"7","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\pages\\Home.jsx":"8","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\store\\reducers\\index.js":"9","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\store\\actions\\userActions.js":"10","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\services\\socketService.js":"11","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\services\\userService.js":"12","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\store\\reducers\\systemReducer.js":"13","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\store\\reducers\\userReducer.js":"14","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\services\\httpService.js":"15","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\board\\BoardList.jsx":"16","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\store\\actions\\boardActions.js":"17","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\services\\boardService.js":"18","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\store\\reducers\\boardReducer.js":"19","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\board\\BoardPreview.jsx":"20","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\group\\GroupList.jsx":"21","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\group\\GroupPreview.jsx":"22","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\card\\CardList.jsx":"23","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\card\\CardPreview.jsx":"24","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\CardEditNav.jsx":"25","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\LabelPalette.jsx":"26","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\services\\utilService.js":"27","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\CardLabelShow.jsx":"28","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\AddChecklistBar.jsx":"29","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\CardChecklistShow.jsx":"30","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\group\\AddNewGroup.jsx":"31","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\group\\EditGroupTitle.jsx":"32","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\TodoShow.jsx":"33","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\TodoListShow.jsx":"34","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\AddCoverBar.jsx":"35","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\group\\AddCard.jsx":"36","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\AppHeader.jsx":"37","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\AddDescription.jsx":"38","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\CardCoverShow.jsx":"39","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\CardLabelShowMin.jsx":"40","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\card\\ChecklistSign.jsx":"41","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\card\\CardCoverShowMin.jsx":"42","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\board\\AddBoard.jsx":"43","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\AddDeutimeBar.jsx":"44","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\CardDuedateShow.jsx":"45","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\CardDuedateShowMin.jsx":"46","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\board\\BoardFilter.jsx":"47","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\board\\BoardSideMenu.jsx":"48","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\boardMenu\\ChangeBoardBackground.jsx":"49","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\boardMenu\\AboutBoard.jsx":"50","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\boardMenu\\RemoveBoard.jsx":"51","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\board\\BoardHeader.jsx":"52","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\HomeHeader.jsx":"53","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\pages\\Boards.jsx":"54","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\pages\\LoginSignup.jsx":"55","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\AddMembersBar.jsx":"56","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\CardImgShow.jsx":"57","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\CardMembersShow.jsx":"58"},{"size":910,"mtime":1610196596000,"results":"59","hashOfConfig":"60"},{"size":364,"mtime":499162500000,"results":"61","hashOfConfig":"60"},{"size":5064,"mtime":499162500000,"results":"62","hashOfConfig":"60"},{"size":323,"mtime":1610535054632,"results":"63","hashOfConfig":"60"},{"size":1270,"mtime":1610977472148,"results":"64","hashOfConfig":"60"},{"size":9230,"mtime":1611055186418,"results":"65","hashOfConfig":"60"},{"size":4566,"mtime":1611055238555,"results":"66","hashOfConfig":"60"},{"size":3653,"mtime":1611048159183,"results":"67","hashOfConfig":"60"},{"size":323,"mtime":1610981940023,"results":"68","hashOfConfig":"60"},{"size":1574,"mtime":1611046371070,"results":"69","hashOfConfig":"60"},{"size":1680,"mtime":1611046534604,"results":"70","hashOfConfig":"60"},{"size":2283,"mtime":1609852194000,"results":"71","hashOfConfig":"60"},{"size":322,"mtime":1609071005000,"results":"72","hashOfConfig":"60"},{"size":737,"mtime":1609759212000,"results":"73","hashOfConfig":"60"},{"size":1081,"mtime":1610961701032,"results":"74","hashOfConfig":"60"},{"size":352,"mtime":1610535879503,"results":"75","hashOfConfig":"60"},{"size":5772,"mtime":1611055290542,"results":"76","hashOfConfig":"60"},{"size":2951,"mtime":1610961701031,"results":"77","hashOfConfig":"60"},{"size":869,"mtime":1610889423062,"results":"78","hashOfConfig":"60"},{"size":936,"mtime":1610888422071,"results":"79","hashOfConfig":"60"},{"size":1776,"mtime":1610889423053,"results":"80","hashOfConfig":"60"},{"size":2726,"mtime":1611042642329,"results":"81","hashOfConfig":"60"},{"size":641,"mtime":1610791218993,"results":"82","hashOfConfig":"60"},{"size":3570,"mtime":1611054290625,"results":"83","hashOfConfig":"60"},{"size":741,"mtime":1611006057399,"results":"84","hashOfConfig":"60"},{"size":2032,"mtime":1610713430279,"results":"85","hashOfConfig":"60"},{"size":681,"mtime":1609842869000,"results":"86","hashOfConfig":"60"},{"size":1160,"mtime":1610879704953,"results":"87","hashOfConfig":"60"},{"size":1934,"mtime":1610885995092,"results":"88","hashOfConfig":"60"},{"size":3956,"mtime":1610736124553,"results":"89","hashOfConfig":"60"},{"size":1673,"mtime":1610888422074,"results":"90","hashOfConfig":"60"},{"size":1484,"mtime":1610652790581,"results":"91","hashOfConfig":"60"},{"size":1866,"mtime":1610726206593,"results":"92","hashOfConfig":"60"},{"size":462,"mtime":1610736142528,"results":"93","hashOfConfig":"60"},{"size":4825,"mtime":1610810251701,"results":"94","hashOfConfig":"60"},{"size":1567,"mtime":1610814142815,"results":"95","hashOfConfig":"60"},{"size":2698,"mtime":1611005415013,"results":"96","hashOfConfig":"60"},{"size":1764,"mtime":1611046312268,"results":"97","hashOfConfig":"60"},{"size":664,"mtime":1610809546116,"results":"98","hashOfConfig":"60"},{"size":406,"mtime":1610801740781,"results":"99","hashOfConfig":"60"},{"size":438,"mtime":1610818077842,"results":"100","hashOfConfig":"60"},{"size":595,"mtime":1610810536823,"results":"101","hashOfConfig":"60"},{"size":4927,"mtime":1611048159179,"results":"102","hashOfConfig":"60"},{"size":859,"mtime":1610956539409,"results":"103","hashOfConfig":"60"},{"size":1335,"mtime":1611046125744,"results":"104","hashOfConfig":"60"},{"size":1426,"mtime":1610956371848,"results":"105","hashOfConfig":"60"},{"size":1546,"mtime":1610889423041,"results":"106","hashOfConfig":"60"},{"size":2839,"mtime":1610976435156,"results":"107","hashOfConfig":"60"},{"size":299,"mtime":1610889423046,"results":"108","hashOfConfig":"60"},{"size":289,"mtime":1610889423045,"results":"109","hashOfConfig":"60"},{"size":259,"mtime":1610889423051,"results":"110","hashOfConfig":"60"},{"size":652,"mtime":1610972704724,"results":"111","hashOfConfig":"60"},{"size":665,"mtime":1611048159177,"results":"112","hashOfConfig":"60"},{"size":2014,"mtime":1611048159181,"results":"113","hashOfConfig":"60"},{"size":5398,"mtime":1610984443186,"results":"114","hashOfConfig":"60"},{"size":2895,"mtime":1611046324793,"results":"115","hashOfConfig":"60"},{"size":400,"mtime":1611048159180,"results":"116","hashOfConfig":"60"},{"size":1180,"mtime":1611054095658,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"to8rq1",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"120"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"120"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"120"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"120"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\index.js",[],["240","241"],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\store\\store.js",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\App.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\pages\\CardEdit.jsx",["242"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\nimport { loadBoard, updateBoard } from '../store/actions/boardActions.js'\r\nimport { loadUsers } from '../store/actions/userActions.js'\r\nimport { CardEditNav } from '../cmps/cardEdit/CardEditNav'\r\nimport { AddDescription } from '../cmps/cardEdit/AddDescription'\r\nimport { LabelPalette } from '../cmps/cardEdit/LabelPalette'\r\nimport { AddChecklistBar } from '../cmps/cardEdit/AddChecklistBar'\r\nimport { AddCoverBar } from '../cmps/cardEdit/AddCoverBar'\r\nimport { CardLabelShow } from '../cmps/cardEdit/CardLabelShow'\r\nimport { CardChecklistShow } from '../cmps/cardEdit/CardChecklistShow'\r\nimport { AddDeutimeBar } from '../cmps/cardEdit/AddDeutimeBar'\r\nimport { CardDuedateShow } from '../cmps/cardEdit/CardDuedateShow'\r\nimport { CardImgShow } from '../cmps/cardEdit/CardImgShow'\r\nimport { AddMembersBar } from '../cmps/cardEdit/AddMembersBar'\r\nimport { CardMembersShow } from '../cmps/cardEdit/CardMembersShow'\r\n\r\nclass _CardEdit extends Component {\r\n    state = {\r\n        board: null,\r\n        groupId: null,\r\n        card: null,\r\n        isDescriptionShowing: false,\r\n        isLabelPaletteShowing: false,\r\n        isAddChecklistShowing: false,\r\n        isCoverShowing: false,\r\n        isAddDeutimeShowing: false,\r\n        isAddImgShowing: false,\r\n        isAddMembersShowing: false\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            this.loadCard()\r\n            this.props.loadUsers()\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevprops) {\r\n        if (this.props.match !== prevprops.match) this.loadCard()\r\n    }\r\n\r\n\r\n\r\n\r\n    loadCard = async () => {\r\n        const boardId = this.props.selectedBoard._id\r\n        const groupId = this.props.groupId\r\n        const cardId = this.props.card.id\r\n        try {\r\n            await this.props.loadBoard(boardId)\r\n            const groups = this.props.selectedBoard.groups\r\n            const group = groups.find(group => group.id === groupId)\r\n            const card = group.cards.find(currCard => currCard.id === cardId)\r\n            this.setState({ board: this.props.selectedBoard, groupId, card })\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    updateCard = async (cardToSave) => {\r\n        const boardToSave = { ...this.state.board }\r\n        const groupToSave = boardToSave.groups.find(group => group.id === this.state.groupId)\r\n        const cardsToSave = groupToSave.cards.map(card => {\r\n            if (card.id === cardToSave.id) return cardToSave\r\n            else return card\r\n        })\r\n        groupToSave.cards = cardsToSave\r\n        const groupsToSave = boardToSave.groups.map(group => {\r\n            if (group.id === groupToSave.id) return groupToSave\r\n            else return group\r\n        })\r\n        boardToSave.groups = groupsToSave\r\n\r\n        try {\r\n            // await updateBoard(boardToSave)\r\n            await this.props.updateBoard(boardToSave)\r\n            this.loadCard()\r\n\r\n        } catch (err) {\r\n            console.log('BoardActions: err in loadBoard', err)\r\n        }\r\n    }\r\n\r\n    toggleLabelPalette = () => {\r\n        this.setState({ isLabelPaletteShowing: !this.state.isLabelPaletteShowing })\r\n    }\r\n    toggleChecklistBar = () => {\r\n        this.setState({ isAddChecklistShowing: !this.state.isAddChecklistShowing })\r\n    }\r\n    toggleCoverBar = () => {\r\n        this.setState({ isCoverShowing: !this.state.isCoverShowing })\r\n    }\r\n    toggleAddDescription = () => {\r\n        this.setState({ isDescriptionShowing: !this.state.isDescriptionShowing })\r\n    }\r\n    toggleAddDeutime = () => {\r\n        this.setState({ isAddDeutimeShowing: !this.state.isAddDeutimeShowing })\r\n    }\r\n    toggleAddMembers = () => {\r\n        this.setState({ isAddMembersShowing: !this.state.isAddMembersShowing })\r\n    }\r\n\r\n    toggleAddImg = () => {\r\n        this.setState({ isAddImgShowing: !this.state.isAddImgShowing })\r\n\r\n    }\r\n\r\n    addDeuDate = (date) => {\r\n        const cardToSave = { ...this.state.card }\r\n        cardToSave.duedate = date\r\n        this.updateCard(cardToSave)\r\n\r\n    }\r\n\r\n    stopProg = (ev) => {\r\n        ev.stopPropagation();\r\n    }\r\n\r\n\r\n    render() {\r\n        const { card, isDescriptionShowing } = this.state\r\n        const { users, toggleCardEdit } = this.props\r\n        const isLabels = (card && card.labels && card.labels.length > 0)\r\n        const isChecklists = (card && card.checklists && card.checklists.length > 0)\r\n        const isDuedate = (card && card.duedate)\r\n        const isMember = (card && card.members && card.members.length > 0)\r\n        const coverShow = (card && card.style?.coverType) ? `top t${card.style.bgColor}` : ''\r\n        const isImg = (card && card.img)\r\n\r\n        if (!card) return <div></div>\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"screen\" onClick={toggleCardEdit}>\r\n                    <div onClick={(ev) => { this.stopProg(ev) }} >\r\n                        {/* <section className=\"card-edit\"> */}\r\n                        <section className={`card-edit ${coverShow}`}>\r\n                            {/* {(card.style && card.style.coverType && card.style.bgColor) ? <CardCoverShow card={card} /> : ''} */}\r\n                            <header className=\"edit-header\">\r\n                                <button className=\"close\" onClick={toggleCardEdit}></button>\r\n                                <button className=\"title-sign\"></button>\r\n                                <h1>{card.title}</h1>\r\n                            </header>\r\n\r\n                            <div className=\"permanent\">\r\n                                <main>\r\n                                    <div className=\"show flex \">\r\n                                        <div className=\" inline-block\">{isLabels && <div> <h5>Labels </h5><CardLabelShow labels={card.labels} card={card} updateCard={this.updateCard} /></div>}</div>\r\n                                        <div className=\"inline-block\">{isDuedate && <div className=\"duedate\"> <h5>Due Date </h5> <CardDuedateShow duedate={card.duedate} card={card} updateCard={this.updateCard} /></div>}</div>\r\n                                        <div className=\"inline-block\">{isMember && <div className=\"members\"> <h5>Members </h5> <CardMembersShow members={card.members} card={card} updateCard={this.updateCard} /></div>}</div>\r\n                                        <div className=\"inline-block\">{isImg && <div className=\"card-img\"> <CardImgShow img={card.img} card={card} updateCard={this.updateCard} /></div>}</div>\r\n                                    </div>\r\n                                    <h4>Description </h4>\r\n                                    {(isDescriptionShowing) ? <AddDescription card={card} toggleAddDescription={this.toggleAddDescription} updateCard={this.updateCard} /> : ((card.description) ?\r\n                                        <div className=\"description show\">{card.description} <button className=\"edit-btn\" onClick={this.toggleAddDescription}>edit</button></div> :\r\n                                        <div className=\"show description\" onClick={this.toggleAddDescription}>add a more detailed description...</div>)}\r\n                                    <p>{card.description && ''}</p>\r\n                                    <div>{isChecklists && <div><CardChecklistShow checklists={card.checklists} card={card} updateCard={this.updateCard} /></div>}</div>\r\n                                </main>\r\n                                <CardEditNav card={card} toggleLabelPalette={this.toggleLabelPalette} toggleChecklistBar={this.toggleChecklistBar} toggleCoverBar={this.toggleCoverBar} toggleAddDeutime={this.toggleAddDeutime} toggleAddMembers={this.toggleAddMembers} />\r\n                            </div>\r\n\r\n\r\n                            {this.state.isLabelPaletteShowing && <LabelPalette card={card} updateCard={this.updateCard} toggleLabelPalette={this.toggleLabelPalette} />}\r\n                            {this.state.isAddChecklistShowing && <AddChecklistBar card={card} updateCard={this.updateCard} toggleChecklistBar={this.toggleChecklistBar} />}\r\n                            {this.state.isCoverShowing && <AddCoverBar card={card} updateCard={this.updateCard} toggleCoverBar={this.toggleCoverBar} />}\r\n                            {this.state.isAddDeutimeShowing && <AddDeutimeBar card={card} updateCard={this.updateCard} toggleAddDeutime={this.toggleAddDeutime} addDeuDate={this.addDeuDate} />}\r\n                            {this.state.isAddMembersShowing && <AddMembersBar card={card} updateCard={this.updateCard} toggleAddMembers={this.toggleAddMembers} users={users} />}\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard,\r\n        users: state.userModule.users\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoard,\r\n    updateBoard,\r\n    loadUsers\r\n}\r\n\r\nexport const CardEdit = connect(mapStateToProps, mapDispatchToProps)(_CardEdit)\r\n","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\pages\\Board.jsx",["243","244","245"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BoardFilter } from '../cmps/board/BoardFilter'\r\nimport { GroupList } from '../cmps/group/GroupList'\r\nimport { BoardSideMenu } from '../cmps/board/BoardSideMenu'\r\nimport { BoardHeader } from '../cmps/board/BoardHeader'\r\nimport { socketService } from '../services/socketService'\r\nimport { loadBoard, updateBoard, updateBoardAfterSocket } from '../store/actions/boardActions.js'\r\nimport { AppHeader } from '../cmps/AppHeader'\r\n\r\n\r\nclass _Board extends Component {\r\n    state = {\r\n        board: {},\r\n        isBoardMenuShown: false\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const boardId = this.props.match.params.id\r\n        socketService.setup()\r\n        await this.props.loadBoard(boardId)\r\n        socketService.emit('join board', boardId)\r\n        socketService.on('update board', this.onChangeBoard)\r\n\r\n\r\n    }\r\n\r\n    onDragEnd = (result) => {\r\n        // console.log('on drag result', result)\r\n        const { destination, source, draggableId, type } = result\r\n        if (!destination) return\r\n        if (destination.droppableId === source.droppableId && destination.index === source.index) {\r\n            return\r\n        }\r\n        if (type === 'group') {\r\n            this.onDragGroups(source.index, destination.index)\r\n        }\r\n        if (type === 'card') {\r\n            this.onDragCards(destination, source, draggableId)\r\n        }\r\n    }\r\n\r\n    onChangeBoard = async (board) => {\r\n        // console.log('on change board', board)\r\n        await this.props.updateBoardAfterSocket(board)\r\n    }\r\n\r\n    // per react beautiful dnd after performing optimistic update to let server know that a reorder has occurred\r\n    onDragGroups = async (startIndex, endIndex) => {\r\n        // console.log('I am in groups')\r\n        let boardToUpdate = this.props.selectedBoard\r\n        const groupToMove = boardToUpdate.groups.splice(startIndex, 1)\r\n        boardToUpdate.groups.splice(endIndex, 0, groupToMove[0])\r\n        await this.props.updateBoard(this.props.selectedBoard)\r\n\r\n    }\r\n\r\n    onDragCards = async (destination, source) => {\r\n        let boardToUpdate = this.props.selectedBoard\r\n        const groupToMoveFromIdx = boardToUpdate.groups.findIndex(group => group.id === source.droppableId)\r\n        const groupToMoveToIdx = boardToUpdate.groups.findIndex(group => group.id === destination.droppableId)\r\n        const cardToMove = boardToUpdate.groups[groupToMoveFromIdx].cards.splice(source.index, 1)\r\n        boardToUpdate.groups[groupToMoveToIdx].cards.splice(destination.index, 0, cardToMove[0])\r\n        // console.log('i am in this on drag cards')\r\n        await this.props.updateBoard(this.props.selectedBoard)\r\n\r\n    }\r\n\r\n    toggleSideMenu = () => {\r\n        this.setState({ isBoardMenuShown: !this.state.isBoardMenuShown })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { selectedBoard } = this.props\r\n        const { isBoardMenuShown } = this.state\r\n\r\n        if (!selectedBoard) return <div>Loading...</div>\r\n        // console.log('BBB', selectedBoard.style.bgurl)\r\n        const style = {\r\n            boardStyle: { ...selectedBoard.style }\r\n        }\r\n        return (\r\n            <section className=\"board-wraper\"\r\n                style={{\r\n                    backgroundImage: \"url(\" + `${style.boardStyle.bgurl}` + \")\",\r\n                    backgroundPosition: \"center\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundRepeat: \"no-repeat\"\r\n                }}>\r\n                <AppHeader toggleSideMenu={this.toggleSideMenu} />\r\n                {/* <BoardHeader board={selectedBoard} toggleSideMenu={this.toggleSideMenu} /> */}\r\n                {/* <div className=\"board-title\"> {selectedBoard.title}</div> */}\r\n                <nav>\r\n                    <BoardFilter />\r\n                    {/* <button onClick={this.toggleSideMenu}>Side Menu In Development</button> */}\r\n                </nav>\r\n                {isBoardMenuShown && <BoardSideMenu toggleSideMenu={this.toggleSideMenu} />}\r\n                {selectedBoard.groups && <GroupList groups={selectedBoard.groups} boardId={selectedBoard._id} onDragEnd={this.onDragEnd} />}\r\n            </section>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard,\r\n        users: state.userModule.users,\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoard,\r\n    updateBoard,\r\n    updateBoardAfterSocket\r\n}\r\n\r\nexport const Board = connect(mapStateToProps, mapDispatchToProps)(_Board)\r\n","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\pages\\Home.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\store\\reducers\\index.js",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\store\\actions\\userActions.js",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\services\\socketService.js",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\services\\userService.js",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\store\\reducers\\systemReducer.js",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\store\\reducers\\userReducer.js",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\services\\httpService.js",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\board\\BoardList.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\store\\actions\\boardActions.js",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\services\\boardService.js",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\store\\reducers\\boardReducer.js",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\board\\BoardPreview.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\group\\GroupList.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\group\\GroupPreview.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\card\\CardList.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\card\\CardPreview.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\CardEditNav.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\LabelPalette.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\services\\utilService.js",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\CardLabelShow.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\AddChecklistBar.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\CardChecklistShow.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\group\\AddNewGroup.jsx",["246"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { addGroup } from '../../store/actions/boardActions.js'\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\n\r\n\r\nexport class _AddNewGroup extends Component {\r\n\r\n    state = {\r\n        title: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const value = ev.target.value\r\n        const field = ev.target.name\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n    onSubmit = async (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.title) return\r\n        await this.props.addGroup(this.state.title, this.props.selectedBoard)\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"add-new-group\">\r\n                <form className=\"add-new-wraper\" onSubmit={this.onSubmit} >\r\n                    <input className=\"add-another-group\" placeholder=\"Add another list\" type=\"text\" onChange={this.handleChange} value={this.state.title} name=\"title\" autoComplete=\"off\"/>\r\n                    \r\n                    <button className=\"save-btn\">+ Add List</button>\r\n               \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    addGroup,\r\n\r\n};\r\n\r\nexport const AddNewGroup = connect(mapStateToProps, mapDispatchToProps)(_AddNewGroup);","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\group\\EditGroupTitle.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\TodoShow.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\TodoListShow.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\AddCoverBar.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\group\\AddCard.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\AppHeader.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\AddDescription.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\CardCoverShow.jsx",[],["247","248"],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\CardLabelShowMin.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\card\\ChecklistSign.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\card\\CardCoverShowMin.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\board\\AddBoard.jsx",["249","250"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { createBoard } from '../../store/actions/boardActions.js'\r\n\r\nexport class _AddBoard extends Component {\r\n\r\n    state = {\r\n        title: '',\r\n        bgurl: ''\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const value = ev.target.value\r\n        const field = ev.target.name\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n    onChooseBackground = ( bgUrl) => {\r\n       \r\n        this.setState({ bgurl: bgUrl })\r\n    }\r\n\r\n    onSubmit = async (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.title) return\r\n        const board = await this.props.createBoard(this.state.title, this.state.bgurl)\r\n        this.props.onLoadNewBoard(board._id)\r\n\r\n    }\r\n\r\n    onCancelAdd = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.toggleNewBoard()\r\n    }\r\n\r\n    render() {\r\n        const backgroundImages = [\r\n            {\r\n                id: 'bg101',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2020/04/11/18/24/star-5031540_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg102',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2016/11/29/08/00/abstract-1868269_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg103',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2019/03/23/20/54/bamboo-4076262_1280.jpg\"\r\n            }\r\n        ]\r\n        return (\r\n            <div className=\"add-board\">\r\n                <form onSubmit={this.onSubmit} >\r\n                    <input placeholder=\"Enter a title for this board...\" type=\"text\" onChange={this.handleChange} value={this.state.title} name=\"title\" autoComplete=\"off\" />\r\n                    <section className=\"add-board-backgrounds\">\r\n                        {backgroundImages.map(background => {\r\n                            return <div key={background.id}\r\n                                style={{\r\n                                    backgroundImage: \"url(\" + `${background.bgurl}` + \")\",\r\n                                    backgroundPosition: 'center',\r\n                                    backgroundSize: 'cover',\r\n                                    backgroundRepeat: 'no-repeat',\r\n                                    width: \"100px\", \r\n                                    height:\"100px\"\r\n                                }}\r\n                                onClick={() => this.onChooseBackground( background.bgurl)}></div>\r\n                        })}\r\n                    </section>\r\n                    <button className=\"save-btn\">Add Board</button>\r\n                    <button className=\"cancel-btn\" onClick={this.onCancelAdd}>Cancel</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    createBoard\r\n\r\n};\r\n\r\nexport const AddBoard = connect(mapStateToProps, mapDispatchToProps)(_AddBoard);","C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\AddDeutimeBar.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\CardDuedateShow.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\CardDuedateShowMin.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\board\\BoardFilter.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\board\\BoardSideMenu.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\boardMenu\\ChangeBoardBackground.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\boardMenu\\AboutBoard.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\boardMenu\\RemoveBoard.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\board\\BoardHeader.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\HomeHeader.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\pages\\Boards.jsx",["251","252","253"],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\pages\\LoginSignup.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\AddMembersBar.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\CardImgShow.jsx",[],"C:\\Users\\hadas\\Desktop\\trello\\frontend\\src\\cmps\\cardEdit\\CardMembersShow.jsx",[],{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","severity":1,"message":"259","line":5,"column":21,"nodeType":"260","messageId":"261","endLine":5,"endColumn":32},{"ruleId":"258","severity":1,"message":"262","line":6,"column":10,"nodeType":"260","messageId":"261","endLine":6,"endColumn":21},{"ruleId":"263","severity":1,"message":"264","line":86,"column":45,"nodeType":"265","messageId":"266","endLine":86,"endColumn":46},{"ruleId":"263","severity":1,"message":"264","line":86,"column":75,"nodeType":"265","messageId":"266","endLine":86,"endColumn":76},{"ruleId":"258","severity":1,"message":"267","line":4,"column":8,"nodeType":"260","messageId":"261","endLine":4,"endColumn":12},{"ruleId":"254","replacedBy":"268"},{"ruleId":"256","replacedBy":"269"},{"ruleId":"263","severity":1,"message":"264","line":64,"column":61,"nodeType":"265","messageId":"266","endLine":64,"endColumn":62},{"ruleId":"263","severity":1,"message":"264","line":64,"column":85,"nodeType":"265","messageId":"266","endLine":64,"endColumn":86},{"ruleId":"258","severity":1,"message":"270","line":3,"column":10,"nodeType":"260","messageId":"261","endLine":3,"endColumn":19},{"ruleId":"258","severity":1,"message":"271","line":7,"column":8,"nodeType":"260","messageId":"261","endLine":7,"endColumn":14},{"ruleId":"258","severity":1,"message":"267","line":8,"column":8,"nodeType":"260","messageId":"261","endLine":8,"endColumn":12},"no-native-reassign",["272"],"no-negated-in-lhs",["273"],"no-unused-vars","'updateBoard' is defined but never used.","Identifier","unusedVar","'BoardHeader' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'Icon' is defined but never used.",["272"],["273"],"'BoardList' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]